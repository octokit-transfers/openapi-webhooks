/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U;
type OneOf<T extends any[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
  ? OneOf<[XOR<A, B>, ...Rest]>
  : never;

export interface paths {
  "/admin/hooks": {
    /** List global webhooks */
    get: operations["enterprise-admin/list-global-webhooks"];
    /** Create a global webhook */
    post: operations["enterprise-admin/create-global-webhook"];
  };
  "/admin/hooks/{hook_id}": {
    /** Get a global webhook */
    get: operations["enterprise-admin/get-global-webhook"];
    /** Delete a global webhook */
    delete: operations["enterprise-admin/delete-global-webhook"];
    /**
     * Update a global webhook
     * @description Parameters that are not provided will be overwritten with the default value or removed if no default exists.
     */
    patch: operations["enterprise-admin/update-global-webhook"];
  };
  "/admin/hooks/{hook_id}/pings": {
    /**
     * Ping a global webhook
     * @description This will trigger a [ping event](https://docs.github.com/github-ae@latest/webhooks/#ping-event) to be sent to the webhook.
     */
    post: operations["enterprise-admin/ping-global-webhook"];
  };
  "/admin/keys": {
    /** List public keys */
    get: operations["enterprise-admin/list-public-keys"];
  };
  "/admin/keys/{key_ids}": {
    /** Delete a public key */
    delete: operations["enterprise-admin/delete-public-key"];
  };
  "/admin/organizations": {
    /** Create an organization */
    post: operations["enterprise-admin/create-org"];
  };
  "/admin/organizations/{org}": {
    /** Update an organization name */
    patch: operations["enterprise-admin/update-org-name"];
  };
  "/admin/pre-receive-environments": {
    /** List pre-receive environments */
    get: operations["enterprise-admin/list-pre-receive-environments"];
    /** Create a pre-receive environment */
    post: operations["enterprise-admin/create-pre-receive-environment"];
  };
  "/admin/pre-receive-environments/{pre_receive_environment_id}": {
    /** Get a pre-receive environment */
    get: operations["enterprise-admin/get-pre-receive-environment"];
    /**
     * Delete a pre-receive environment
     * @description If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.
     *
     * The possible error messages are:
     *
     * *   _Cannot modify or delete the default environment_
     * *   _Cannot delete environment that has hooks_
     * *   _Cannot delete environment when download is in progress_
     */
    delete: operations["enterprise-admin/delete-pre-receive-environment"];
    /**
     * Update a pre-receive environment
     * @description You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.
     */
    patch: operations["enterprise-admin/update-pre-receive-environment"];
  };
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads": {
    /**
     * Start a pre-receive environment download
     * @description Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.
     *
     * If a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.
     *
     * The possible error messages are:
     *
     * * _Cannot modify or delete the default environment_
     * * _Can not start a new download when a download is in progress_
     */
    post: operations["enterprise-admin/start-pre-receive-environment-download"];
  };
  "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest": {
    /**
     * Get the download status for a pre-receive environment
     * @description In addition to seeing the download status at the "[Get a pre-receive environment](#get-a-pre-receive-environment)" endpoint, there is also this separate endpoint for just the download status.
     */
    get: operations["enterprise-admin/get-download-status-for-pre-receive-environment"];
  };
  "/admin/tokens": {
    /**
     * List personal access tokens
     * @description Lists personal access tokens for all users, including admin users.
     */
    get: operations["enterprise-admin/list-personal-access-tokens"];
  };
  "/admin/tokens/{token_id}": {
    /**
     * Delete a personal access token
     * @description Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.
     */
    delete: operations["enterprise-admin/delete-personal-access-token"];
  };
  "/admin/users/{username}": {
    /**
     * Delete a user
     * @description Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user) is often a better option.
     *
     * You can delete any user account except your own.
     */
    delete: operations["enterprise-admin/delete-user"];
  };
  "/admin/users/{username}/authorizations": {
    /** Create an impersonation OAuth token */
    post: operations["enterprise-admin/create-impersonation-o-auth-token"];
    /** Delete an impersonation OAuth token */
    delete: operations["enterprise-admin/delete-impersonation-o-auth-token"];
  };
  "/app/installations/{installation_id}/access_tokens": {
    /**
     * Create an installation access token for an app
     * @description Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.
     *
     * You must use a [JWT](https://docs.github.com/github-ae@latest/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
     */
    post: operations["apps/create-installation-access-token"];
  };
  "/applications/{client_id}/tokens/{access_token}": {
    /**
     * Reset an authorization
     * @deprecated
     * @description **Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).
     *
     * OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
     */
    post: operations["apps/reset-authorization"];
  };
  "/enterprise/announcement": {
    /**
     * Get the global announcement banner
     * @description Gets the current message and expiration date of the global announcement banner in your enterprise.
     */
    get: operations["enterprise-admin/get-announcement"];
    /**
     * Remove the global announcement banner
     * @description Removes the global announcement banner in your enterprise.
     */
    delete: operations["enterprise-admin/remove-announcement"];
    /**
     * Set the global announcement banner
     * @description Sets the message and expiration time for the global announcement banner in your enterprise.
     */
    patch: operations["enterprise-admin/set-announcement"];
  };
  "/enterprise/settings/license": {
    /** Get license information */
    get: operations["enterprise-admin/get-license-information"];
  };
  "/enterprise/stats/all": {
    /** Get all statistics */
    get: operations["enterprise-admin/get-all-stats"];
  };
  "/enterprise/stats/comments": {
    /** Get comment statistics */
    get: operations["enterprise-admin/get-comment-stats"];
  };
  "/enterprise/stats/gists": {
    /** Get gist statistics */
    get: operations["enterprise-admin/get-gist-stats"];
  };
  "/enterprise/stats/hooks": {
    /** Get hooks statistics */
    get: operations["enterprise-admin/get-hooks-stats"];
  };
  "/enterprise/stats/issues": {
    /** Get issue statistics */
    get: operations["enterprise-admin/get-issue-stats"];
  };
  "/enterprise/stats/milestones": {
    /** Get milestone statistics */
    get: operations["enterprise-admin/get-milestone-stats"];
  };
  "/enterprise/stats/orgs": {
    /** Get organization statistics */
    get: operations["enterprise-admin/get-org-stats"];
  };
  "/enterprise/stats/pages": {
    /** Get pages statistics */
    get: operations["enterprise-admin/get-pages-stats"];
  };
  "/enterprise/stats/pulls": {
    /** Get pull request statistics */
    get: operations["enterprise-admin/get-pull-request-stats"];
  };
  "/enterprise/stats/repos": {
    /** Get repository statistics */
    get: operations["enterprise-admin/get-repo-stats"];
  };
  "/enterprise/stats/users": {
    /** Get users statistics */
    get: operations["enterprise-admin/get-user-stats"];
  };
  "/enterprises/{enterprise}/actions/runner-groups": {
    /**
     * List self-hosted runner groups for an enterprise
     * @description Lists all self-hosted runner groups for an enterprise.
     *
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     */
    get: operations["enterprise-admin/list-self-hosted-runner-groups-for-enterprise"];
    /**
     * Create a self-hosted runner group for an enterprise
     * @description Creates a new self-hosted runner group for an enterprise.
     *
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     */
    post: operations["enterprise-admin/create-self-hosted-runner-group-for-enterprise"];
  };
  "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}": {
    /**
     * Get a self-hosted runner group for an enterprise
     * @description Gets a specific self-hosted runner group for an enterprise.
     *
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     */
    get: operations["enterprise-admin/get-self-hosted-runner-group-for-enterprise"];
    /**
     * Update a self-hosted runner group for an enterprise
     * @description Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.
     *
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     */
    patch: operations["enterprise-admin/update-self-hosted-runner-group-for-enterprise"];
  };
  "/enterprises/{enterprise}/actions/runners/registration-token": {
    /**
     * Create a registration token for an enterprise
     * @description Returns a token that you can pass to the `config` script. The token expires after one hour.
     *
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     *
     * #### Example using registration token
     *
     * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
     *
     * ```
     * ./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN
     * ```
     */
    post: operations["enterprise-admin/create-registration-token-for-enterprise"];
  };
  "/enterprises/{enterprise}/actions/runners/remove-token": {
    /**
     * Create a remove token for an enterprise
     * @description Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.
     *
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     *
     * #### Example using remove token
     *
     * To remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this
     * endpoint.
     *
     * ```
     * ./config.sh remove --token TOKEN
     * ```
     */
    post: operations["enterprise-admin/create-remove-token-for-enterprise"];
  };
  "/enterprises/{enterprise}/audit-log": {
    /**
     * Get the audit log for an enterprise
     * @description Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.
     */
    get: operations["enterprise-admin/get-audit-log"];
  };
  "/installation/repositories": {
    /**
     * List repositories accessible to the app installation
     * @description List repositories that an app installation can access.
     *
     * You must use an [installation access token](https://docs.github.com/github-ae@latest/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
     */
    get: operations["apps/list-repos-accessible-to-installation"];
  };
  "/issues": {
    /**
     * List issues assigned to the authenticated user
     * @description List issues assigned to the authenticated user across all visible repositories including owned repositories, member
     * repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not
     * necessarily assigned to you.
     *
     *
     * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
     * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
     * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
     * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
     */
    get: operations["issues/list"];
  };
  "/meta": {
    /**
     * Get GitHub AE meta information
     * @description Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see "[About GitHub's IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/)."
     *
     * **Note:** The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses.
     */
    get: operations["meta/get"];
  };
  "/notifications": {
    /**
     * List notifications for the authenticated user
     * @description List all notifications for the current user, sorted by most recently updated.
     */
    get: operations["activity/list-notifications-for-authenticated-user"];
  };
  "/notifications/threads/{thread_id}": {
    /** Get a thread */
    get: operations["activity/get-thread"];
  };
  "/orgs/{org}/actions/permissions/repositories": {
    /**
     * List selected repositories enabled for GitHub Actions in an organization
     * @description Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."
     *
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
     */
    get: operations["actions/list-selected-repositories-enabled-github-actions-organization"];
  };
  "/orgs/{org}/actions/runner-groups": {
    /**
     * List self-hosted runner groups for an organization
     * @description Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     */
    get: operations["actions/list-self-hosted-runner-groups-for-org"];
    /**
     * Create a self-hosted runner group for an organization
     * @description The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."
     *
     * Creates a new self-hosted runner group for an organization.
     *
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     */
    post: operations["actions/create-self-hosted-runner-group-for-org"];
  };
  "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
    /**
     * Get a self-hosted runner group for an organization
     * @description Gets a specific self-hosted runner group for an organization.
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     */
    get: operations["actions/get-self-hosted-runner-group-for-org"];
    /**
     * Update a self-hosted runner group for an organization
     * @description The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."
     *
     * Updates the `name` and `visibility` of a self-hosted runner group in an organization.
     *
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     */
    patch: operations["actions/update-self-hosted-runner-group-for-org"];
  };
  "/orgs/{org}/actions/runners/registration-token": {
    /**
     * Create a registration token for an organization
     * @description Returns a token that you can pass to the `config` script. The token expires after one hour.
     *
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     *
     * #### Example using registration token
     *
     * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
     *
     * ```
     * ./config.sh --url https://github.com/octo-org --token TOKEN
     * ```
     */
    post: operations["actions/create-registration-token-for-org"];
  };
  "/orgs/{org}/actions/runners/remove-token": {
    /**
     * Create a remove token for an organization
     * @description Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.
     *
     * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
     *
     * #### Example using remove token
     *
     * To remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this
     * endpoint.
     *
     * ```
     * ./config.sh remove --token TOKEN
     * ```
     */
    post: operations["actions/create-remove-token-for-org"];
  };
  "/orgs/{org}/actions/secrets/{secret_name}": {
    /**
     * Create or update an organization secret
     * @description Creates or updates an organization secret with an encrypted value. Encrypt your secret using
     * [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
     * token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to
     * use this endpoint.
     *
     * #### Example encrypting a secret using Node.js
     *
     * Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.
     *
     * ```
     * const sodium = require('tweetsodium');
     *
     * const key = "base64-encoded-public-key";
     * const value = "plain-text-secret";
     *
     * // Convert the message and key to Uint8Array's (Buffer implements that interface)
     * const messageBytes = Buffer.from(value);
     * const keyBytes = Buffer.from(key, 'base64');
     *
     * // Encrypt using LibSodium.
     * const encryptedBytes = sodium.seal(messageBytes, keyBytes);
     *
     * // Base64 the encrypted secret
     * const encrypted = Buffer.from(encryptedBytes).toString('base64');
     *
     * console.log(encrypted);
     * ```
     *
     *
     * #### Example encrypting a secret using Python
     *
     * Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.
     *
     * ```
     * from base64 import b64encode
     * from nacl import encoding, public
     *
     * def encrypt(public_key: str, secret_value: str) -> str:
     *   """Encrypt a Unicode string using the public key."""
     *   public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
     *   sealed_box = public.SealedBox(public_key)
     *   encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
     *   return b64encode(encrypted).decode("utf-8")
     * ```
     *
     * #### Example encrypting a secret using C#
     *
     * Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.
     *
     * ```
     * var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
     * var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");
     *
     * var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);
     *
     * Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
     * ```
     *
     * #### Example encrypting a secret using Ruby
     *
     * Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.
     *
     * ```ruby
     * require "rbnacl"
     * require "base64"
     *
     * key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
     * public_key = RbNaCl::PublicKey.new(key)
     *
     * box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
     * encrypted_secret = box.encrypt("my_secret")
     *
     * # Print the base64 encoded secret
     * puts Base64.strict_encode64(encrypted_secret)
     * ```
     */
    put: operations["actions/create-or-update-org-secret"];
  };
  "/orgs/{org}/actions/secrets/{secret_name}/repositories": {
    /**
     * List selected repositories for an organization secret
     * @description Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
     */
    get: operations["actions/list-selected-repos-for-org-secret"];
  };
  "/orgs/{org}/audit-log": {
    /**
     * Get the audit log for an organization
     * @description Gets the audit log for an organization. For more information, see "[Reviewing the audit log for your organization](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization)."
     *
     * This endpoint is available for organizations on GitHub Enterprise Cloud. To use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.
     *
     * By default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see "[Reviewing the audit log for your organization](https://docs.github.com/github-ae@latest/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log)."
     *
     * Use pagination to retrieve fewer or more than 30 events. For more information, see "[Resources in the REST API](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination)."
     */
    get: operations["orgs/get-audit-log"];
  };
  "/orgs/{org}/issues": {
    /**
     * List organization issues assigned to the authenticated user
     * @description List issues in an organization assigned to the authenticated user.
     *
     * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
     * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
     * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
     * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
     */
    get: operations["issues/list-for-org"];
  };
  "/orgs/{org}/migrations": {
    /**
     * List organization migrations
     * @description Lists the most recent migrations.
     */
    get: operations["migrations/list-for-org"];
    /**
     * Start an organization migration
     * @description Initiates the generation of a migration archive.
     */
    post: operations["migrations/start-for-org"];
  };
  "/orgs/{org}/migrations/{migration_id}": {
    /**
     * Get an organization migration status
     * @description Fetches the status of a migration.
     *
     * The `state` of a migration can be one of the following values:
     *
     * *   `pending`, which means the migration hasn't started yet.
     * *   `exporting`, which means the migration is in progress.
     * *   `exported`, which means the migration finished successfully.
     * *   `failed`, which means the migration failed.
     */
    get: operations["migrations/get-status-for-org"];
  };
  "/orgs/{org}/repos": {
    /**
     * List organization repositories
     * @description Lists repositories for the specified organization.
     */
    get: operations["repos/list-for-org"];
    /**
     * Create an organization repository
     * @description Creates a new repository in the specified organization. The authenticated user must be a member of the organization.
     *
     * **OAuth scope requirements**
     *
     * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
     *
     * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
     * *   `repo` scope to create a private repository
     */
    post: operations["repos/create-in-org"];
  };
  "/orgs/{org}/teams/{team_slug}/repos": {
    /**
     * List team repositories
     * @description Lists a team's repositories visible to the authenticated user.
     *
     * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.
     */
    get: operations["teams/list-repos-in-org"];
  };
  "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
    /**
     * Check team permissions for a repository
     * @description Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.
     *
     * You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.
     *
     * If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.
     *
     * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
     */
    get: operations["teams/check-permissions-for-repo-in-org"];
  };
  "/rate_limit": {
    /**
     * Get rate limit status for the authenticated user
     * @description **Note:** Accessing this endpoint does not count against your REST API rate limit.
     *
     * **Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.
     */
    get: operations["rate-limit/get"];
  };
  "/repos/{owner}/{repo}": {
    /**
     * Get a repository
     * @description The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.
     */
    get: operations["repos/get"];
    /**
     * Update a repository
     * @description **Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/github-ae@latest/rest/reference/repos#replace-all-repository-topics) endpoint.
     */
    patch: operations["repos/update"];
  };
  "/repos/{owner}/{repo}/actions/runners/registration-token": {
    /**
     * Create a registration token for a repository
     * @description Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate
     * using an access token with the `repo` scope to use this endpoint.
     *
     * #### Example using registration token
     *
     * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
     *
     * ```
     * ./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN
     * ```
     */
    post: operations["actions/create-registration-token-for-repo"];
  };
  "/repos/{owner}/{repo}/actions/runners/remove-token": {
    /**
     * Create a remove token for a repository
     * @description Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.
     * You must authenticate using an access token with the `repo` scope to use this endpoint.
     *
     * #### Example using remove token
     *
     * To remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.
     *
     * ```
     * ./config.sh remove --token TOKEN
     * ```
     */
    post: operations["actions/create-remove-token-for-repo"];
  };
  "/repos/{owner}/{repo}/actions/runs": {
    /**
     * List workflow runs for a repository
     * @description Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#parameters).
     *
     * Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
     */
    get: operations["actions/list-workflow-runs-for-repo"];
  };
  "/repos/{owner}/{repo}/actions/runs/{run_id}": {
    /**
     * Get a workflow run
     * @description Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
     */
    get: operations["actions/get-workflow-run"];
  };
  "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}": {
    /**
     * Get a workflow run attempt
     * @description Gets a specific workflow run attempt. Anyone with read access to the repository
     * can use this endpoint. If the repository is private you must use an access token
     * with the `repo` scope. GitHub Apps must have the `actions:read` permission to
     * use this endpoint.
     */
    get: operations["actions/get-workflow-run-attempt"];
  };
  "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun": {
    /**
     * Re-run a workflow
     * @description Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
     */
    post: operations["actions/re-run-workflow"];
  };
  "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
    /**
     * List workflow runs
     * @description List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#parameters).
     *
     * Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
     */
    get: operations["actions/list-workflow-runs"];
  };
  "/repos/{owner}/{repo}/autolinks": {
    /**
     * List all autolinks of a repository
     * @description This returns a list of autolinks configured for the given repository.
     *
     * Information about autolinks are only available to repository administrators.
     */
    get: operations["repos/list-autolinks"];
    /**
     * Create an autolink reference for a repository
     * @description Users with admin access to the repository can create an autolink.
     */
    post: operations["repos/create-autolink"];
  };
  "/repos/{owner}/{repo}/autolinks/{autolink_id}": {
    /**
     * Get an autolink reference of a repository
     * @description This returns a single autolink reference by ID that was configured for the given repository.
     *
     * Information about autolinks are only available to repository administrators.
     */
    get: operations["repos/get-autolink"];
  };
  "/repos/{owner}/{repo}/check-suites": {
    /**
     * Create a check suite
     * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
     *
     * By default, check suites are automatically created when you create a [check run](https://docs.github.com/github-ae@latest/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using "[Update repository preferences for check suites](https://docs.github.com/github-ae@latest/rest/reference/checks#update-repository-preferences-for-check-suites)". Your GitHub App must have the `checks:write` permission to create check suites.
     */
    post: operations["checks/create-suite"];
  };
  "/repos/{owner}/{repo}/check-suites/preferences": {
    /**
     * Update repository preferences for check suites
     * @description Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/github-ae@latest/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.
     */
    patch: operations["checks/set-suites-preferences"];
  };
  "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
    /**
     * Get a check suite
     * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
     *
     * Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
     */
    get: operations["checks/get-suite"];
  };
  "/repos/{owner}/{repo}/code-scanning/alerts": {
    /**
     * List code scanning alerts for a repository
     * @description Lists all open code scanning alerts for the default branch (usually `main`
     * or `master`). You must use an access token with the `security_events` scope to use
     * this endpoint. GitHub Apps must have the `security_events` read permission to use
     * this endpoint.
     *
     * The response includes a `most_recent_instance` object.
     * This provides details of the most recent instance of this alert
     * for the default branch or for the specified Git reference
     * (if you used `ref` in the request).
     */
    get: operations["code-scanning/list-alerts-for-repo"];
  };
  "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
    /**
     * Get a code scanning alert
     * @description Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.
     *
     * **Deprecation notice**:
     * The instances field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The same information can now be retrieved via a GET request to the URL specified by `instances_url`.
     */
    get: operations["code-scanning/get-alert"];
    /**
     * Update a code scanning alert
     * @description Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.
     */
    patch: operations["code-scanning/update-alert"];
  };
  "/repos/{owner}/{repo}/collaborators": {
    /**
     * List repository collaborators
     * @description For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.
     * Organization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.
     *
     * Team members will include the members of child teams.
     *
     * You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
     * endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
     * endpoint.
     */
    get: operations["repos/list-collaborators"];
  };
  "/repos/{owner}/{repo}/collaborators/{username}": {
    /**
     * Add a repository collaborator
     * @description This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
     *
     * Adding an outside collaborator may be restricted by enterprise administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/github-ae@latest/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
     *
     * For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:
     *
     * ```
     * Cannot assign {member} permission of {role name}
     * ```
     *
     * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs)."
     *
     * The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/github-ae@latest/rest/reference/repos#invitations).
     *
     * **Updating an existing collaborator's permission level**
     *
     * The endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.
     *
     * **Rate limits**
     *
     * You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
     */
    put: operations["repos/add-collaborator"];
  };
  "/repos/{owner}/{repo}/collaborators/{username}/permission": {
    /**
     * Get repository permissions for a user
     * @description Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.
     */
    get: operations["repos/get-collaborator-permission-level"];
  };
  "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
    /**
     * Create reaction for a commit comment
     * @description Create a reaction to a [commit comment](https://docs.github.com/github-ae@latest/rest/reference/repos#comments). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.
     */
    post: operations["reactions/create-for-commit-comment"];
  };
  "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
    /**
     * List pull requests associated with a commit
     * @description Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests.
     */
    get: operations["repos/list-pull-requests-associated-with-commit"];
  };
  "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
    /**
     * List check suites for a Git reference
     * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
     *
     * Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
     */
    get: operations["checks/list-suites-for-ref"];
  };
  "/repos/{owner}/{repo}/commits/{ref}/status": {
    /**
     * Get the combined status for a specific reference
     * @description Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.
     *
     *
     * Additionally, a combined `state` is returned. The `state` is one of:
     *
     * *   **failure** if any of the contexts report as `error` or `failure`
     * *   **pending** if there are no statuses or a context is `pending`
     * *   **success** if the latest status for all contexts is `success`
     */
    get: operations["repos/get-combined-status-for-ref"];
  };
  "/repos/{owner}/{repo}/events": {
    /** List repository events */
    get: operations["activity/list-repo-events"];
  };
  "/repos/{owner}/{repo}/forks": {
    /** List forks */
    get: operations["repos/list-forks"];
    /**
     * Create a fork
     * @description Create a fork for the authenticated user.
     *
     * **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub AE Support](https://support.github.com/contact?tags=dotcom-rest-api).
     */
    post: operations["repos/create-fork"];
  };
  "/repos/{owner}/{repo}/invitations": {
    /**
     * List repository invitations
     * @description When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.
     */
    get: operations["repos/list-invitations"];
  };
  "/repos/{owner}/{repo}/invitations/{invitation_id}": {
    /** Update a repository invitation */
    patch: operations["repos/update-invitation"];
  };
  "/repos/{owner}/{repo}/issues": {
    /**
     * List repository issues
     * @description List issues in a repository.
     *
     * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
     * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
     * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
     * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
     */
    get: operations["issues/list-for-repo"];
    /**
     * Create an issue
     * @description Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.
     *
     * This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
     */
    post: operations["issues/create"];
  };
  "/repos/{owner}/{repo}/issues/events": {
    /** List issue events for a repository */
    get: operations["issues/list-events-for-repo"];
  };
  "/repos/{owner}/{repo}/issues/events/{event_id}": {
    /** Get an issue event */
    get: operations["issues/get-event"];
  };
  "/repos/{owner}/{repo}/issues/{issue_number}": {
    /**
     * Get an issue
     * @description The API returns a [`301 Moved Permanently` status](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was
     * [transferred](https://docs.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If
     * the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
     * returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read
     * access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe
     * to the [`issues`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#issues) webhook.
     *
     * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
     * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
     * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
     * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
     */
    get: operations["issues/get"];
    /**
     * Update an issue
     * @description Issue owners and users with push access can edit an issue.
     */
    patch: operations["issues/update"];
  };
  "/repos/{owner}/{repo}/issues/{issue_number}/assignees": {
    /**
     * Add assignees to an issue
     * @description Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.
     */
    post: operations["issues/add-assignees"];
  };
  "/repos/{owner}/{repo}/notifications": {
    /**
     * List repository notifications for the authenticated user
     * @description List all notifications for the current user.
     */
    get: operations["activity/list-repo-notifications-for-authenticated-user"];
  };
  "/repos/{owner}/{repo}/pulls": {
    /**
     * List pull requests
     * @description Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
     */
    get: operations["pulls/list"];
  };
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers": {
    /**
     * Request reviewers for a pull request
     * @description This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
     */
    post: operations["pulls/request-reviewers"];
  };
  "/repos/{owner}/{repo}/releases": {
    /**
     * Create a release
     * @description Users with push access to the repository can create a release.
     *
     * This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
     */
    post: operations["repos/create-release"];
  };
  "/repos/{owner}/{repo}/releases/{release_id}": {
    /**
     * Update a release
     * @description Users with push access to the repository can edit a release.
     */
    patch: operations["repos/update-release"];
  };
  "/repos/{owner}/{repo}/releases/{release_id}/reactions": {
    /**
     * List reactions for a release
     * @description List the reactions to a [release](https://docs.github.com/github-ae@latest/rest/reference/repos#releases).
     */
    get: operations["reactions/list-for-release"];
  };
  "/repos/{owner}/{repo}/secret-scanning/alerts": {
    /**
     * List secret scanning alerts for a repository
     * @description Lists secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
     *
     * GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
     */
    get: operations["secret-scanning/list-alerts-for-repo"];
  };
  "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {
    /**
     * Get a secret scanning alert
     * @description Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
     *
     * GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
     */
    get: operations["secret-scanning/get-alert"];
    /**
     * Update a secret scanning alert
     * @description Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
     *
     * GitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.
     */
    patch: operations["secret-scanning/update-alert"];
  };
  "/repos/{owner}/{repo}/transfer": {
    /**
     * Transfer a repository
     * @description A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).
     */
    post: operations["repos/transfer"];
  };
  "/repos/{template_owner}/{template_repo}/generate": {
    /**
     * Create a repository using a template
     * @description Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/github-ae@latest/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.
     *
     * **OAuth scope requirements**
     *
     * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
     *
     * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
     * *   `repo` scope to create a private repository
     */
    post: operations["repos/create-using-template"];
  };
  "/search/code": {
    /**
     * Search code
     * @description Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
     *
     * When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
     *
     * For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:
     *
     * `q=addClass+in:file+language:js+repo:jquery/jquery`
     *
     * This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.
     *
     * #### Considerations for code search
     *
     * Due to the complexity of searching code, there are a few restrictions on how searches are performed:
     *
     * *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.
     * *   Only files smaller than 384 KB are searchable.
     * *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing
     * language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.
     */
    get: operations["search/code"];
  };
  "/search/commits": {
    /**
     * Search commits
     * @description Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
     *
     * When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
     * metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
     *
     * For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:
     *
     * `q=repo:octocat/Spoon-Knife+css`
     */
    get: operations["search/commits"];
  };
  "/search/issues": {
    /**
     * Search issues and pull requests
     * @description Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
     *
     * When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted
     * search results, see [Text match metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
     *
     * For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.
     *
     * `q=windows+label:bug+language:python+state:open&sort=created&order=asc`
     *
     * This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.
     *
     * **Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
     */
    get: operations["search/issues-and-pull-requests"];
  };
  "/teams/{team_id}/repos": {
    /**
     * List team repositories (Legacy)
     * @deprecated
     * @description **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/github-ae@latest/rest/reference/teams#list-team-repositories) endpoint.
     */
    get: operations["teams/list-repos-legacy"];
  };
  "/teams/{team_id}/repos/{owner}/{repo}": {
    /**
     * Check team permissions for a repository (Legacy)
     * @deprecated
     * @description **Note**: Repositories inherited through a parent team will also be checked.
     *
     * **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/github-ae@latest/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.
     *
     * You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `Accept` header:
     */
    get: operations["teams/check-permissions-for-repo-legacy"];
  };
  "/user/gpg_keys": {
    /**
     * List GPG keys for the authenticated user
     * @description Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
     */
    get: operations["users/list-gpg-keys-for-authenticated-user"];
    /**
     * Create a GPG key for the authenticated user
     * @description Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
     */
    post: operations["users/create-gpg-key-for-authenticated-user"];
  };
  "/user/gpg_keys/{gpg_key_id}": {
    /**
     * Get a GPG key for the authenticated user
     * @description View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
     */
    get: operations["users/get-gpg-key-for-authenticated-user"];
  };
  "/user/installations/{installation_id}/repositories": {
    /**
     * List repositories accessible to the user access token
     * @description List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.
     *
     * The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
     *
     * You must use a [user-to-server OAuth access token](https://docs.github.com/github-ae@latest/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.
     *
     * The access the user has to each repository is included in the hash under the `permissions` key.
     */
    get: operations["apps/list-installation-repos-for-authenticated-user"];
  };
  "/user/issues": {
    /**
     * List user account issues assigned to the authenticated user
     * @description List issues across owned and member repositories assigned to the authenticated user.
     *
     * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
     * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
     * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
     * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
     */
    get: operations["issues/list-for-authenticated-user"];
  };
  "/user/migrations": {
    /**
     * List user migrations
     * @description Lists all migrations a user has started.
     */
    get: operations["migrations/list-for-authenticated-user"];
    /**
     * Start a user migration
     * @description Initiates the generation of a user migration archive.
     */
    post: operations["migrations/start-for-authenticated-user"];
  };
  "/user/migrations/{migration_id}/repositories": {
    /**
     * List repositories for a user migration
     * @description Lists all the repositories for this user migration.
     */
    get: operations["migrations/list-repos-for-authenticated-user"];
  };
  "/user/repos": {
    /**
     * List repositories for the authenticated user
     * @description Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.
     *
     * The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
     */
    get: operations["repos/list-for-authenticated-user"];
    /**
     * Create a repository for the authenticated user
     * @description Creates a new repository for the authenticated user.
     *
     * **OAuth scope requirements**
     *
     * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
     *
     * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
     * *   `repo` scope to create a private repository.
     */
    post: operations["repos/create-for-authenticated-user"];
  };
  "/user/repository_invitations": {
    /**
     * List repository invitations for the authenticated user
     * @description When authenticating as a user, this endpoint will list all currently open repository invitations for that user.
     */
    get: operations["repos/list-invitations-for-authenticated-user"];
  };
  "/user/starred": {
    /**
     * List repositories starred by the authenticated user
     * @description Lists repositories the authenticated user has starred.
     *
     * You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `Accept` header:
     */
    get: operations["activity/list-repos-starred-by-authenticated-user"];
  };
  "/user/subscriptions": {
    /**
     * List repositories watched by the authenticated user
     * @description Lists repositories the authenticated user is watching.
     */
    get: operations["activity/list-watched-repos-for-authenticated-user"];
  };
  "/users/{username}/events": {
    /**
     * List events for the authenticated user
     * @description If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.
     */
    get: operations["activity/list-events-for-authenticated-user"];
  };
  "/users/{username}/events/orgs/{org}": {
    /**
     * List organization events for the authenticated user
     * @description This is the user's organization dashboard. You must be authenticated as the user to view this.
     */
    get: operations["activity/list-org-events-for-authenticated-user"];
  };
  "/users/{username}/gpg_keys": {
    /**
     * List GPG keys for a user
     * @description Lists the GPG keys for a user. This information is accessible by anyone.
     */
    get: operations["users/list-gpg-keys-for-user"];
  };
  "/users/{username}/repos": {
    /**
     * List repositories for a user
     * @description Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.
     */
    get: operations["repos/list-for-user"];
  };
  "/users/{username}/subscriptions": {
    /**
     * List repositories watched by a user
     * @description Lists repositories a user is watching.
     */
    get: operations["activity/list-repos-watched-by-user"];
  };
  "/users/{username}/suspended": {
    /**
     * Suspend a user
     * @description If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.
     *
     * You can suspend any user account except your own.
     *
     * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs)."
     */
    put: operations["enterprise-admin/suspend-user"];
    /**
     * Unsuspend a user
     * @description If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.
     */
    delete: operations["enterprise-admin/unsuspend-user"];
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** List global webhooks */
  "enterprise-admin/list-global-webhooks": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            type?: string;
            id?: number;
            name?: string;
            active?: boolean;
            events?: string[];
            config?: {
              url?: string;
              content_type?: string;
              insecure_ssl?: string;
              secret?: string;
            };
            updated_at?: string;
            created_at?: string;
            url?: string;
            ping_url?: string;
          }[];
        };
      };
    };
  };
  /** Create a global webhook */
  "enterprise-admin/create-global-webhook": {
    requestBody: {
      content: {
        "application/json": {
          /** @description Must be passed as "web". */
          name: string;
          /** @description Key/value pairs to provide settings for this webhook. */
          config: {
            /** @description The URL to which the payloads will be delivered. */
            url: string;
            /** @description The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`. */
            content_type?: string;
            /** @description If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header. */
            secret?: string;
            /** @description Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.** */
            insecure_ssl?: string;
          };
          /** @description The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`. */
          events?: string[];
          /**
           * @description Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
           * @default true
           */
          active?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            type?: string;
            id?: number;
            name?: string;
            active?: boolean;
            events?: string[];
            config?: {
              url?: string;
              content_type?: string;
              insecure_ssl?: string;
              secret?: string;
            };
            updated_at?: string;
            created_at?: string;
            url?: string;
            ping_url?: string;
          };
        };
      };
    };
  };
  /** Get a global webhook */
  "enterprise-admin/get-global-webhook": {
    parameters: {
      path: {
        /** @description The unique identifier of the hook. */
        hook_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            type?: string;
            id?: number;
            name?: string;
            active?: boolean;
            events?: string[];
            config?: {
              url?: string;
              content_type?: string;
              insecure_ssl?: string;
              secret?: string;
            };
            updated_at?: string;
            created_at?: string;
            url?: string;
            ping_url?: string;
          };
        };
      };
    };
  };
  /** Delete a global webhook */
  "enterprise-admin/delete-global-webhook": {
    parameters: {
      path: {
        /** @description The unique identifier of the hook. */
        hook_id: number;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /**
   * Update a global webhook
   * @description Parameters that are not provided will be overwritten with the default value or removed if no default exists.
   */
  "enterprise-admin/update-global-webhook": {
    parameters: {
      path: {
        /** @description The unique identifier of the hook. */
        hook_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Key/value pairs to provide settings for this webhook. */
          config?: {
            /** @description The URL to which the payloads will be delivered. */
            url: string;
            /** @description The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`. */
            content_type?: string;
            /** @description If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header. */
            secret?: string;
            /** @description Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.** */
            insecure_ssl?: string;
          };
          /** @description The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`. */
          events?: string[];
          /**
           * @description Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
           * @default true
           */
          active?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            type?: string;
            id?: number;
            name?: string;
            active?: boolean;
            events?: string[];
            config?: {
              url?: string;
              content_type?: string;
              insecure_ssl?: string;
            };
            updated_at?: string;
            created_at?: string;
            url?: string;
            ping_url?: string;
          };
        };
      };
    };
  };
  /**
   * Ping a global webhook
   * @description This will trigger a [ping event](https://docs.github.com/github-ae@latest/webhooks/#ping-event) to be sent to the webhook.
   */
  "enterprise-admin/ping-global-webhook": {
    parameters: {
      path: {
        /** @description The unique identifier of the hook. */
        hook_id: number;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /** List public keys */
  "enterprise-admin/list-public-keys": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        sort?: "created" | "updated" | "accessed";
        /** @description Only show public keys accessed after the given time. */
        since?: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            key: string;
            user_id: number | null;
            repository_id: number | null;
            url: string;
            title: string;
            read_only: boolean;
            verified: boolean;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            last_used: string | null;
          }[];
        };
      };
    };
  };
  /** Delete a public key */
  "enterprise-admin/delete-public-key": {
    parameters: {
      path: {
        /** @description The unique identifier of the key. */
        key_ids: string;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /** Create an organization */
  "enterprise-admin/create-org": {
    requestBody: {
      content: {
        "application/json": {
          /** @description The organization's username. */
          login: string;
          /** @description The login of the user who will manage this organization. */
          admin: string;
          /** @description The organization's display name. */
          profile_name?: string;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /** @example github */
            login: string;
            /** @example 1 */
            id: number;
            /** @example MDEyOk9yZ2FuaXphdGlvbjE= */
            node_id: string;
            /**
             * Format: uri
             * @example https://api.github.com/orgs/github
             */
            url: string;
            /**
             * Format: uri
             * @example https://api.github.com/orgs/github/repos
             */
            repos_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/orgs/github/events
             */
            events_url: string;
            /** @example https://api.github.com/orgs/github/hooks */
            hooks_url: string;
            /** @example https://api.github.com/orgs/github/issues */
            issues_url: string;
            /** @example https://api.github.com/orgs/github/members{/member} */
            members_url: string;
            /** @example https://api.github.com/orgs/github/public_members{/member} */
            public_members_url: string;
            /** @example https://github.com/images/error/octocat_happy.gif */
            avatar_url: string;
            /** @example A great organization */
            description: string | null;
          };
        };
      };
    };
  };
  /** Update an organization name */
  "enterprise-admin/update-org-name": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The organization's new name. */
          login: string;
        };
      };
    };
    responses: {
      /** @description Response */
      202: {
        content: {
          "application/json": {
            message?: string;
            url?: string;
          };
        };
      };
    };
  };
  /** List pre-receive environments */
  "enterprise-admin/list-pre-receive-environments": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        sort?: "created" | "updated" | "name";
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id?: number;
            name?: string;
            image_url?: string;
            url?: string;
            html_url?: string;
            default_environment?: boolean;
            created_at?: string;
            hooks_count?: number;
            download?: {
              url?: string;
              state?: string;
              downloaded_at?: string | null;
              message?: string | null;
            };
          }[];
        };
      };
    };
  };
  /** Create a pre-receive environment */
  "enterprise-admin/create-pre-receive-environment": {
    requestBody: {
      content: {
        "application/json": {
          /** @description The new pre-receive environment's name. */
          name: string;
          /** @description URL from which to download a tarball of this environment. */
          image_url: string;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            id?: number;
            name?: string;
            image_url?: string;
            url?: string;
            html_url?: string;
            default_environment?: boolean;
            created_at?: string;
            hooks_count?: number;
            download?: {
              url?: string;
              state?: string;
              downloaded_at?: string | null;
              message?: string | null;
            };
          };
        };
      };
    };
  };
  /** Get a pre-receive environment */
  "enterprise-admin/get-pre-receive-environment": {
    parameters: {
      path: {
        /** @description The unique identifier of the pre-receive environment. */
        pre_receive_environment_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id?: number;
            name?: string;
            image_url?: string;
            url?: string;
            html_url?: string;
            default_environment?: boolean;
            created_at?: string;
            hooks_count?: number;
            download?: {
              url?: string;
              state?: string;
              downloaded_at?: string | null;
              message?: string | null;
            };
          };
        };
      };
    };
  };
  /**
   * Delete a pre-receive environment
   * @description If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.
   *
   * The possible error messages are:
   *
   * *   _Cannot modify or delete the default environment_
   * *   _Cannot delete environment that has hooks_
   * *   _Cannot delete environment when download is in progress_
   */
  "enterprise-admin/delete-pre-receive-environment": {
    parameters: {
      path: {
        /** @description The unique identifier of the pre-receive environment. */
        pre_receive_environment_id: number;
      };
    };
    responses: {
      /** @description Response */
      204: never;
      /** @description Client Errors */
      422: {
        content: {
          "application/json": {
            message?: string;
            errors?: {
              resource?: string;
              code?: string;
              message?: string;
            }[];
          };
        };
      };
    };
  };
  /**
   * Update a pre-receive environment
   * @description You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.
   */
  "enterprise-admin/update-pre-receive-environment": {
    parameters: {
      path: {
        /** @description The unique identifier of the pre-receive environment. */
        pre_receive_environment_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description This pre-receive environment's new name. */
          name?: string;
          /** @description URL from which to download a tarball of this environment. */
          image_url?: string;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id?: number;
            name?: string;
            image_url?: string;
            url?: string;
            html_url?: string;
            default_environment?: boolean;
            created_at?: string;
            hooks_count?: number;
            download?: {
              url?: string;
              state?: string;
              downloaded_at?: string | null;
              message?: string | null;
            };
          };
        };
      };
      /** @description Client Errors */
      422: {
        content: {
          "application/json": {
            message?: string;
            errors?: {
              resource?: string;
              code?: string;
              message?: string;
            }[];
          };
        };
      };
    };
  };
  /**
   * Start a pre-receive environment download
   * @description Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.
   *
   * If a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.
   *
   * The possible error messages are:
   *
   * * _Cannot modify or delete the default environment_
   * * _Can not start a new download when a download is in progress_
   */
  "enterprise-admin/start-pre-receive-environment-download": {
    parameters: {
      path: {
        /** @description The unique identifier of the pre-receive environment. */
        pre_receive_environment_id: number;
      };
    };
    responses: {
      /** @description Response */
      202: {
        content: {
          "application/json": {
            url?: string;
            state?: string;
            downloaded_at?: string | null;
            message?: string | null;
          };
        };
      };
      /** @description Client Errors */
      422: {
        content: {
          "application/json": {
            message?: string;
            errors?: {
              resource?: string;
              code?: string;
              message?: string;
            }[];
          };
        };
      };
    };
  };
  /**
   * Get the download status for a pre-receive environment
   * @description In addition to seeing the download status at the "[Get a pre-receive environment](#get-a-pre-receive-environment)" endpoint, there is also this separate endpoint for just the download status.
   */
  "enterprise-admin/get-download-status-for-pre-receive-environment": {
    parameters: {
      path: {
        /** @description The unique identifier of the pre-receive environment. */
        pre_receive_environment_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            url?: string;
            state?: string;
            downloaded_at?: string | null;
            message?: string | null;
          };
        };
      };
    };
  };
  /**
   * List personal access tokens
   * @description Lists personal access tokens for all users, including admin users.
   */
  "enterprise-admin/list-personal-access-tokens": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            /** Format: uri */
            url: string;
            /** @description A list of scopes that this authorization is in. */
            scopes: string[] | null;
            token: string;
            token_last_eight: string | null;
            hashed_token: string | null;
            app: {
              client_id: string;
              name: string;
              /** Format: uri */
              url: string;
            };
            note: string | null;
            /** Format: uri */
            note_url: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: date-time */
            created_at: string;
            fingerprint: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** Scoped Installation */
            installation?: {
              /**
               * App Permissions
               * @description The permissions granted to the user-to-server access token.
               * @example {
               *   "contents": "read",
               *   "issues": "read",
               *   "deployments": "write",
               *   "single_file": "read"
               * }
               */
              permissions: {
                /**
                 * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
                 * @enum {string}
                 */
                actions?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
                 * @enum {string}
                 */
                administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for checks on code.
                 * @enum {string}
                 */
                checks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
                 * @enum {string}
                 */
                contents?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for deployments and deployment statuses.
                 * @enum {string}
                 */
                deployments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for managing repository environments.
                 * @enum {string}
                 */
                environments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
                 * @enum {string}
                 */
                issues?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
                 * @enum {string}
                 */
                metadata?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for packages published to GitHub Packages.
                 * @enum {string}
                 */
                packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
                 * @enum {string}
                 */
                pages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
                 * @enum {string}
                 */
                pull_requests?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
                 * @enum {string}
                 */
                repository_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
                 * @enum {string}
                 */
                repository_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token to view and manage secret scanning alerts.
                 * @enum {string}
                 */
                secret_scanning_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository secrets.
                 * @enum {string}
                 */
                secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
                 * @enum {string}
                 */
                security_events?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage just a single file.
                 * @enum {string}
                 */
                single_file?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for commit statuses.
                 * @enum {string}
                 */
                statuses?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage Dependabot alerts.
                 * @enum {string}
                 */
                vulnerability_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to update GitHub Actions workflow files.
                 * @enum {string}
                 */
                workflows?: "write";
                /**
                 * @description The level of permission to grant the access token for organization teams and members.
                 * @enum {string}
                 */
                members?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage access to an organization.
                 * @enum {string}
                 */
                organization_administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
                 * @enum {string}
                 */
                organization_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for viewing an organization's plan.
                 * @enum {string}
                 */
                organization_plan?: "read";
                /**
                 * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
                 * @enum {string}
                 */
                organization_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
                 * @enum {string}
                 */
                organization_packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage organization secrets.
                 * @enum {string}
                 */
                organization_secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
                 * @enum {string}
                 */
                organization_self_hosted_runners?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage users blocked by the organization.
                 * @enum {string}
                 */
                organization_user_blocking?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage team discussions and related comments.
                 * @enum {string}
                 */
                team_discussions?: "read" | "write";
              };
              /**
               * @description Describe whether all repositories have been selected or there's a selection involved
               * @enum {string}
               */
              repository_selection: "all" | "selected";
              /** @example config.yaml */
              single_file_name: string | null;
              /** @example true */
              has_multiple_single_files?: boolean;
              /**
               * @example [
               *   "config.yml",
               *   ".github/issue_TEMPLATE.md"
               * ]
               */
              single_file_paths?: string[];
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repositories_url: string;
              /**
               * Simple User
               * @description Simple User
               */
              account: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
            } | null;
            /** Format: date-time */
            expires_at: string | null;
          }[];
        };
      };
    };
  };
  /**
   * Delete a personal access token
   * @description Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.
   */
  "enterprise-admin/delete-personal-access-token": {
    parameters: {
      path: {
        /** @description The unique identifier of the token. */
        token_id: number;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /**
   * Delete a user
   * @description Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user) is often a better option.
   *
   * You can delete any user account except your own.
   */
  "enterprise-admin/delete-user": {
    parameters: {
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /** Create an impersonation OAuth token */
  "enterprise-admin/create-impersonation-o-auth-token": {
    parameters: {
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description A list of [scopes](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). */
          scopes?: string[];
        };
      };
    };
    responses: {
      /** @description Response when getting an existing impersonation OAuth token */
      200: {
        content: {
          "application/json": {
            id: number;
            /** Format: uri */
            url: string;
            /** @description A list of scopes that this authorization is in. */
            scopes: string[] | null;
            token: string;
            token_last_eight: string | null;
            hashed_token: string | null;
            app: {
              client_id: string;
              name: string;
              /** Format: uri */
              url: string;
            };
            note: string | null;
            /** Format: uri */
            note_url: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: date-time */
            created_at: string;
            fingerprint: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** Scoped Installation */
            installation?: {
              /**
               * App Permissions
               * @description The permissions granted to the user-to-server access token.
               * @example {
               *   "contents": "read",
               *   "issues": "read",
               *   "deployments": "write",
               *   "single_file": "read"
               * }
               */
              permissions: {
                /**
                 * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
                 * @enum {string}
                 */
                actions?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
                 * @enum {string}
                 */
                administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for checks on code.
                 * @enum {string}
                 */
                checks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
                 * @enum {string}
                 */
                contents?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for deployments and deployment statuses.
                 * @enum {string}
                 */
                deployments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for managing repository environments.
                 * @enum {string}
                 */
                environments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
                 * @enum {string}
                 */
                issues?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
                 * @enum {string}
                 */
                metadata?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for packages published to GitHub Packages.
                 * @enum {string}
                 */
                packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
                 * @enum {string}
                 */
                pages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
                 * @enum {string}
                 */
                pull_requests?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
                 * @enum {string}
                 */
                repository_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
                 * @enum {string}
                 */
                repository_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token to view and manage secret scanning alerts.
                 * @enum {string}
                 */
                secret_scanning_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository secrets.
                 * @enum {string}
                 */
                secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
                 * @enum {string}
                 */
                security_events?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage just a single file.
                 * @enum {string}
                 */
                single_file?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for commit statuses.
                 * @enum {string}
                 */
                statuses?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage Dependabot alerts.
                 * @enum {string}
                 */
                vulnerability_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to update GitHub Actions workflow files.
                 * @enum {string}
                 */
                workflows?: "write";
                /**
                 * @description The level of permission to grant the access token for organization teams and members.
                 * @enum {string}
                 */
                members?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage access to an organization.
                 * @enum {string}
                 */
                organization_administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
                 * @enum {string}
                 */
                organization_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for viewing an organization's plan.
                 * @enum {string}
                 */
                organization_plan?: "read";
                /**
                 * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
                 * @enum {string}
                 */
                organization_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
                 * @enum {string}
                 */
                organization_packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage organization secrets.
                 * @enum {string}
                 */
                organization_secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
                 * @enum {string}
                 */
                organization_self_hosted_runners?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage users blocked by the organization.
                 * @enum {string}
                 */
                organization_user_blocking?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage team discussions and related comments.
                 * @enum {string}
                 */
                team_discussions?: "read" | "write";
              };
              /**
               * @description Describe whether all repositories have been selected or there's a selection involved
               * @enum {string}
               */
              repository_selection: "all" | "selected";
              /** @example config.yaml */
              single_file_name: string | null;
              /** @example true */
              has_multiple_single_files?: boolean;
              /**
               * @example [
               *   "config.yml",
               *   ".github/issue_TEMPLATE.md"
               * ]
               */
              single_file_paths?: string[];
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repositories_url: string;
              /**
               * Simple User
               * @description Simple User
               */
              account: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
            } | null;
            /** Format: date-time */
            expires_at: string | null;
          };
        };
      };
      /** @description Response when creating a new impersonation OAuth token */
      201: {
        content: {
          "application/json": {
            id: number;
            /** Format: uri */
            url: string;
            /** @description A list of scopes that this authorization is in. */
            scopes: string[] | null;
            token: string;
            token_last_eight: string | null;
            hashed_token: string | null;
            app: {
              client_id: string;
              name: string;
              /** Format: uri */
              url: string;
            };
            note: string | null;
            /** Format: uri */
            note_url: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: date-time */
            created_at: string;
            fingerprint: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** Scoped Installation */
            installation?: {
              /**
               * App Permissions
               * @description The permissions granted to the user-to-server access token.
               * @example {
               *   "contents": "read",
               *   "issues": "read",
               *   "deployments": "write",
               *   "single_file": "read"
               * }
               */
              permissions: {
                /**
                 * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
                 * @enum {string}
                 */
                actions?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
                 * @enum {string}
                 */
                administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for checks on code.
                 * @enum {string}
                 */
                checks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
                 * @enum {string}
                 */
                contents?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for deployments and deployment statuses.
                 * @enum {string}
                 */
                deployments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for managing repository environments.
                 * @enum {string}
                 */
                environments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
                 * @enum {string}
                 */
                issues?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
                 * @enum {string}
                 */
                metadata?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for packages published to GitHub Packages.
                 * @enum {string}
                 */
                packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
                 * @enum {string}
                 */
                pages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
                 * @enum {string}
                 */
                pull_requests?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
                 * @enum {string}
                 */
                repository_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
                 * @enum {string}
                 */
                repository_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token to view and manage secret scanning alerts.
                 * @enum {string}
                 */
                secret_scanning_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository secrets.
                 * @enum {string}
                 */
                secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
                 * @enum {string}
                 */
                security_events?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage just a single file.
                 * @enum {string}
                 */
                single_file?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for commit statuses.
                 * @enum {string}
                 */
                statuses?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage Dependabot alerts.
                 * @enum {string}
                 */
                vulnerability_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to update GitHub Actions workflow files.
                 * @enum {string}
                 */
                workflows?: "write";
                /**
                 * @description The level of permission to grant the access token for organization teams and members.
                 * @enum {string}
                 */
                members?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage access to an organization.
                 * @enum {string}
                 */
                organization_administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
                 * @enum {string}
                 */
                organization_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for viewing an organization's plan.
                 * @enum {string}
                 */
                organization_plan?: "read";
                /**
                 * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
                 * @enum {string}
                 */
                organization_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
                 * @enum {string}
                 */
                organization_packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage organization secrets.
                 * @enum {string}
                 */
                organization_secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
                 * @enum {string}
                 */
                organization_self_hosted_runners?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage users blocked by the organization.
                 * @enum {string}
                 */
                organization_user_blocking?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage team discussions and related comments.
                 * @enum {string}
                 */
                team_discussions?: "read" | "write";
              };
              /**
               * @description Describe whether all repositories have been selected or there's a selection involved
               * @enum {string}
               */
              repository_selection: "all" | "selected";
              /** @example config.yaml */
              single_file_name: string | null;
              /** @example true */
              has_multiple_single_files?: boolean;
              /**
               * @example [
               *   "config.yml",
               *   ".github/issue_TEMPLATE.md"
               * ]
               */
              single_file_paths?: string[];
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repositories_url: string;
              /**
               * Simple User
               * @description Simple User
               */
              account: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
            } | null;
            /** Format: date-time */
            expires_at: string | null;
          };
        };
      };
    };
  };
  /** Delete an impersonation OAuth token */
  "enterprise-admin/delete-impersonation-o-auth-token": {
    parameters: {
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /**
   * Create an installation access token for an app
   * @description Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.
   *
   * You must use a [JWT](https://docs.github.com/github-ae@latest/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
   */
  "apps/create-installation-access-token": {
    parameters: {
      path: {
        /** @description The unique identifier of the installation. */
        installation_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description List of repository names that the token should have access to */
          repositories?: string[];
          /**
           * @description List of repository IDs that the token should have access to
           * @example [
           *   1
           * ]
           */
          repository_ids?: number[];
          /**
           * App Permissions
           * @description The permissions granted to the user-to-server access token.
           * @example {
           *   "contents": "read",
           *   "issues": "read",
           *   "deployments": "write",
           *   "single_file": "read"
           * }
           */
          permissions?: {
            /**
             * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
             * @enum {string}
             */
            actions?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
             * @enum {string}
             */
            administration?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for checks on code.
             * @enum {string}
             */
            checks?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
             * @enum {string}
             */
            contents?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for deployments and deployment statuses.
             * @enum {string}
             */
            deployments?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for managing repository environments.
             * @enum {string}
             */
            environments?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
             * @enum {string}
             */
            issues?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
             * @enum {string}
             */
            metadata?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for packages published to GitHub Packages.
             * @enum {string}
             */
            packages?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
             * @enum {string}
             */
            pages?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
             * @enum {string}
             */
            pull_requests?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
             * @enum {string}
             */
            repository_hooks?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
             * @enum {string}
             */
            repository_projects?: "read" | "write" | "admin";
            /**
             * @description The level of permission to grant the access token to view and manage secret scanning alerts.
             * @enum {string}
             */
            secret_scanning_alerts?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage repository secrets.
             * @enum {string}
             */
            secrets?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
             * @enum {string}
             */
            security_events?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage just a single file.
             * @enum {string}
             */
            single_file?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for commit statuses.
             * @enum {string}
             */
            statuses?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage Dependabot alerts.
             * @enum {string}
             */
            vulnerability_alerts?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to update GitHub Actions workflow files.
             * @enum {string}
             */
            workflows?: "write";
            /**
             * @description The level of permission to grant the access token for organization teams and members.
             * @enum {string}
             */
            members?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage access to an organization.
             * @enum {string}
             */
            organization_administration?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
             * @enum {string}
             */
            organization_hooks?: "read" | "write";
            /**
             * @description The level of permission to grant the access token for viewing an organization's plan.
             * @enum {string}
             */
            organization_plan?: "read";
            /**
             * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
             * @enum {string}
             */
            organization_projects?: "read" | "write" | "admin";
            /**
             * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
             * @enum {string}
             */
            organization_packages?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage organization secrets.
             * @enum {string}
             */
            organization_secrets?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
             * @enum {string}
             */
            organization_self_hosted_runners?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to view and manage users blocked by the organization.
             * @enum {string}
             */
            organization_user_blocking?: "read" | "write";
            /**
             * @description The level of permission to grant the access token to manage team discussions and related comments.
             * @enum {string}
             */
            team_discussions?: "read" | "write";
          };
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            token: string;
            expires_at: string;
            /**
             * App Permissions
             * @description The permissions granted to the user-to-server access token.
             * @example {
             *   "contents": "read",
             *   "issues": "read",
             *   "deployments": "write",
             *   "single_file": "read"
             * }
             */
            permissions?: {
              /**
               * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
               * @enum {string}
               */
              actions?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
               * @enum {string}
               */
              administration?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for checks on code.
               * @enum {string}
               */
              checks?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
               * @enum {string}
               */
              contents?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for deployments and deployment statuses.
               * @enum {string}
               */
              deployments?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for managing repository environments.
               * @enum {string}
               */
              environments?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
               * @enum {string}
               */
              issues?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
               * @enum {string}
               */
              metadata?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for packages published to GitHub Packages.
               * @enum {string}
               */
              packages?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
               * @enum {string}
               */
              pages?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
               * @enum {string}
               */
              pull_requests?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
               * @enum {string}
               */
              repository_hooks?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
               * @enum {string}
               */
              repository_projects?: "read" | "write" | "admin";
              /**
               * @description The level of permission to grant the access token to view and manage secret scanning alerts.
               * @enum {string}
               */
              secret_scanning_alerts?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage repository secrets.
               * @enum {string}
               */
              secrets?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
               * @enum {string}
               */
              security_events?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage just a single file.
               * @enum {string}
               */
              single_file?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for commit statuses.
               * @enum {string}
               */
              statuses?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage Dependabot alerts.
               * @enum {string}
               */
              vulnerability_alerts?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to update GitHub Actions workflow files.
               * @enum {string}
               */
              workflows?: "write";
              /**
               * @description The level of permission to grant the access token for organization teams and members.
               * @enum {string}
               */
              members?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage access to an organization.
               * @enum {string}
               */
              organization_administration?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
               * @enum {string}
               */
              organization_hooks?: "read" | "write";
              /**
               * @description The level of permission to grant the access token for viewing an organization's plan.
               * @enum {string}
               */
              organization_plan?: "read";
              /**
               * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
               * @enum {string}
               */
              organization_projects?: "read" | "write" | "admin";
              /**
               * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
               * @enum {string}
               */
              organization_packages?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage organization secrets.
               * @enum {string}
               */
              organization_secrets?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
               * @enum {string}
               */
              organization_self_hosted_runners?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to view and manage users blocked by the organization.
               * @enum {string}
               */
              organization_user_blocking?: "read" | "write";
              /**
               * @description The level of permission to grant the access token to manage team discussions and related comments.
               * @enum {string}
               */
              team_discussions?: "read" | "write";
            };
            /** @enum {string} */
            repository_selection?: "all" | "selected";
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example README.md */
            single_file?: string;
            /** @example true */
            has_multiple_single_files?: boolean;
            /**
             * @example [
             *   "config.yml",
             *   ".github/issue_TEMPLATE.md"
             * ]
             */
            single_file_paths?: string[];
          };
        };
      };
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Reset an authorization
   * @deprecated
   * @description **Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).
   *
   * OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
   */
  "apps/reset-authorization": {
    parameters: {
      path: {
        /** @description The client ID of the GitHub app. */
        client_id: string;
        access_token: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            /** Format: uri */
            url: string;
            /** @description A list of scopes that this authorization is in. */
            scopes: string[] | null;
            token: string;
            token_last_eight: string | null;
            hashed_token: string | null;
            app: {
              client_id: string;
              name: string;
              /** Format: uri */
              url: string;
            };
            note: string | null;
            /** Format: uri */
            note_url: string | null;
            /** Format: date-time */
            updated_at: string;
            /** Format: date-time */
            created_at: string;
            fingerprint: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** Scoped Installation */
            installation?: {
              /**
               * App Permissions
               * @description The permissions granted to the user-to-server access token.
               * @example {
               *   "contents": "read",
               *   "issues": "read",
               *   "deployments": "write",
               *   "single_file": "read"
               * }
               */
              permissions: {
                /**
                 * @description The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
                 * @enum {string}
                 */
                actions?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
                 * @enum {string}
                 */
                administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for checks on code.
                 * @enum {string}
                 */
                checks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
                 * @enum {string}
                 */
                contents?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for deployments and deployment statuses.
                 * @enum {string}
                 */
                deployments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for managing repository environments.
                 * @enum {string}
                 */
                environments?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
                 * @enum {string}
                 */
                issues?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
                 * @enum {string}
                 */
                metadata?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for packages published to GitHub Packages.
                 * @enum {string}
                 */
                packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
                 * @enum {string}
                 */
                pages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
                 * @enum {string}
                 */
                pull_requests?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for a repository.
                 * @enum {string}
                 */
                repository_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository projects, columns, and cards.
                 * @enum {string}
                 */
                repository_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token to view and manage secret scanning alerts.
                 * @enum {string}
                 */
                secret_scanning_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage repository secrets.
                 * @enum {string}
                 */
                secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage security events like code scanning alerts.
                 * @enum {string}
                 */
                security_events?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage just a single file.
                 * @enum {string}
                 */
                single_file?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for commit statuses.
                 * @enum {string}
                 */
                statuses?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage Dependabot alerts.
                 * @enum {string}
                 */
                vulnerability_alerts?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to update GitHub Actions workflow files.
                 * @enum {string}
                 */
                workflows?: "write";
                /**
                 * @description The level of permission to grant the access token for organization teams and members.
                 * @enum {string}
                 */
                members?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage access to an organization.
                 * @enum {string}
                 */
                organization_administration?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage the post-receive hooks for an organization.
                 * @enum {string}
                 */
                organization_hooks?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token for viewing an organization's plan.
                 * @enum {string}
                 */
                organization_plan?: "read";
                /**
                 * @description The level of permission to grant the access token to manage organization projects and projects beta (where available).
                 * @enum {string}
                 */
                organization_projects?: "read" | "write" | "admin";
                /**
                 * @description The level of permission to grant the access token for organization packages published to GitHub Packages.
                 * @enum {string}
                 */
                organization_packages?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage organization secrets.
                 * @enum {string}
                 */
                organization_secrets?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
                 * @enum {string}
                 */
                organization_self_hosted_runners?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to view and manage users blocked by the organization.
                 * @enum {string}
                 */
                organization_user_blocking?: "read" | "write";
                /**
                 * @description The level of permission to grant the access token to manage team discussions and related comments.
                 * @enum {string}
                 */
                team_discussions?: "read" | "write";
              };
              /**
               * @description Describe whether all repositories have been selected or there's a selection involved
               * @enum {string}
               */
              repository_selection: "all" | "selected";
              /** @example config.yaml */
              single_file_name: string | null;
              /** @example true */
              has_multiple_single_files?: boolean;
              /**
               * @example [
               *   "config.yml",
               *   ".github/issue_TEMPLATE.md"
               * ]
               */
              single_file_paths?: string[];
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repositories_url: string;
              /**
               * Simple User
               * @description Simple User
               */
              account: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
            } | null;
            /** Format: date-time */
            expires_at: string | null;
          };
        };
      };
    };
  };
  /**
   * Get the global announcement banner
   * @description Gets the current message and expiration date of the global announcement banner in your enterprise.
   */
  "enterprise-admin/get-announcement": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see "[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)."
             * @example Very **important** announcement about _nothing_.
             */
            announcement: string;
            /**
             * Format: date-time
             * @description The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.
             * @example "2021-01-01T00:00:00.000-07:00"
             */
            expires_at?: string | null;
          };
        };
      };
    };
  };
  /**
   * Remove the global announcement banner
   * @description Removes the global announcement banner in your enterprise.
   */
  "enterprise-admin/remove-announcement": {
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /**
   * Set the global announcement banner
   * @description Sets the message and expiration time for the global announcement banner in your enterprise.
   */
  "enterprise-admin/set-announcement": {
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see "[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)."
           * @example Very **important** announcement about _nothing_.
           */
          announcement: string;
          /**
           * Format: date-time
           * @description The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.
           * @example "2021-01-01T00:00:00.000-07:00"
           */
          expires_at?: string | null;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see "[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)."
             * @example Very **important** announcement about _nothing_.
             */
            announcement: string;
            /**
             * Format: date-time
             * @description The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.
             * @example "2021-01-01T00:00:00.000-07:00"
             */
            expires_at?: string | null;
          };
        };
      };
    };
  };
  /** Get license information */
  "enterprise-admin/get-license-information": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            seats?: string | number;
            seats_used?: number;
            seats_available?: string | number;
            kind?: string;
            days_until_expiration?: number;
            expire_at?: string;
          };
        };
      };
    };
  };
  /** Get all statistics */
  "enterprise-admin/get-all-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** Repository Enterprise Stats */
            repos?: {
              total_repos: number;
              root_repos: number;
              fork_repos: number;
              org_repos: number;
              total_pushes: number;
              total_wikis: number;
            };
            /** Hooks Enterprise Stats */
            hooks?: {
              total_hooks: number;
              active_hooks: number;
              inactive_hooks: number;
            };
            /** Enterprise Pages Stats */
            pages?: {
              total_pages: number;
            };
            /** Enterprise Organization Stats */
            orgs?: {
              total_orgs: number;
              disabled_orgs: number;
              total_teams: number;
              total_team_members: number;
            };
            /** Enterprise User Stats */
            users?: {
              total_users: number;
              admin_users: number;
              suspended_users: number;
            };
            /** Enterprise Pull Request Stats */
            pulls?: {
              total_pulls: number;
              merged_pulls: number;
              mergeable_pulls: number;
              unmergeable_pulls: number;
            };
            /** Enterprise Issue Stats */
            issues?: {
              total_issues: number;
              open_issues: number;
              closed_issues: number;
            };
            /** Enterprise Milestone Stats */
            milestones?: {
              total_milestones: number;
              open_milestones: number;
              closed_milestones: number;
            };
            /** Enterprise Gist Stats */
            gists?: {
              total_gists: number;
              private_gists: number;
              public_gists: number;
            };
            /** Enterprise Comment Stats */
            comments?: {
              total_commit_comments: number;
              total_gist_comments: number;
              total_issue_comments: number;
              total_pull_request_comments: number;
            };
          };
        };
      };
    };
  };
  /** Get comment statistics */
  "enterprise-admin/get-comment-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_commit_comments: number;
            total_gist_comments: number;
            total_issue_comments: number;
            total_pull_request_comments: number;
          };
        };
      };
    };
  };
  /** Get gist statistics */
  "enterprise-admin/get-gist-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_gists: number;
            private_gists: number;
            public_gists: number;
          };
        };
      };
    };
  };
  /** Get hooks statistics */
  "enterprise-admin/get-hooks-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_hooks: number;
            active_hooks: number;
            inactive_hooks: number;
          };
        };
      };
    };
  };
  /** Get issue statistics */
  "enterprise-admin/get-issue-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_issues: number;
            open_issues: number;
            closed_issues: number;
          };
        };
      };
    };
  };
  /** Get milestone statistics */
  "enterprise-admin/get-milestone-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_milestones: number;
            open_milestones: number;
            closed_milestones: number;
          };
        };
      };
    };
  };
  /** Get organization statistics */
  "enterprise-admin/get-org-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_orgs: number;
            disabled_orgs: number;
            total_teams: number;
            total_team_members: number;
          };
        };
      };
    };
  };
  /** Get pages statistics */
  "enterprise-admin/get-pages-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_pages: number;
          };
        };
      };
    };
  };
  /** Get pull request statistics */
  "enterprise-admin/get-pull-request-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_pulls: number;
            merged_pulls: number;
            mergeable_pulls: number;
            unmergeable_pulls: number;
          };
        };
      };
    };
  };
  /** Get repository statistics */
  "enterprise-admin/get-repo-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_repos: number;
            root_repos: number;
            fork_repos: number;
            org_repos: number;
            total_pushes: number;
            total_wikis: number;
          };
        };
      };
    };
  };
  /** Get users statistics */
  "enterprise-admin/get-user-stats": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_users: number;
            admin_users: number;
            suspended_users: number;
          };
        };
      };
    };
  };
  /**
   * List self-hosted runner groups for an enterprise
   * @description Lists all self-hosted runner groups for an enterprise.
   *
   * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
   */
  "enterprise-admin/list-self-hosted-runner-groups-for-enterprise": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            runner_groups: {
              id: number;
              name: string;
              visibility: string;
              default: boolean;
              selected_organizations_url?: string;
              runners_url: string;
              allows_public_repositories: boolean;
            }[];
          };
        };
      };
    };
  };
  /**
   * Create a self-hosted runner group for an enterprise
   * @description Creates a new self-hosted runner group for an enterprise.
   *
   * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
   */
  "enterprise-admin/create-self-hosted-runner-group-for-enterprise": {
    parameters: {
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Name of the runner group. */
          name: string;
          /**
           * @description Visibility of a runner group. You can select all organizations or select individual organization.
           * @enum {string}
           */
          visibility?: "selected" | "all";
          /** @description List of organization IDs that can access the runner group. */
          selected_organization_ids?: number[];
          /** @description List of runner IDs to add to the runner group. */
          runners?: number[];
          /**
           * @description Whether the runner group can be used by `public` repositories.
           * @default false
           */
          allows_public_repositories?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            selected_organizations_url?: string;
            runners_url: string;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Get a self-hosted runner group for an enterprise
   * @description Gets a specific self-hosted runner group for an enterprise.
   *
   * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
   */
  "enterprise-admin/get-self-hosted-runner-group-for-enterprise": {
    parameters: {
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
        /** @description Unique identifier of the self-hosted runner group. */
        runner_group_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            selected_organizations_url?: string;
            runners_url: string;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Update a self-hosted runner group for an enterprise
   * @description Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.
   *
   * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
   */
  "enterprise-admin/update-self-hosted-runner-group-for-enterprise": {
    parameters: {
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
        /** @description Unique identifier of the self-hosted runner group. */
        runner_group_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Name of the runner group. */
          name?: string;
          /**
           * @description Visibility of a runner group. You can select all organizations or select individual organizations.
           * @default all
           * @enum {string}
           */
          visibility?: "selected" | "all";
          /**
           * @description Whether the runner group can be used by `public` repositories.
           * @default false
           */
          allows_public_repositories?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            selected_organizations_url?: string;
            runners_url: string;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Create a registration token for an enterprise
   * @description Returns a token that you can pass to the `config` script. The token expires after one hour.
   *
   * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
   *
   * #### Example using registration token
   *
   * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
   *
   * ```
   * ./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN
   * ```
   */
  "enterprise-admin/create-registration-token-for-enterprise": {
    parameters: {
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * Create a remove token for an enterprise
   * @description Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.
   *
   * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
   *
   * #### Example using remove token
   *
   * To remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this
   * endpoint.
   *
   * ```
   * ./config.sh remove --token TOKEN
   * ```
   */
  "enterprise-admin/create-remove-token-for-enterprise": {
    parameters: {
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * Get the audit log for an enterprise
   * @description Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.
   */
  "enterprise-admin/get-audit-log": {
    parameters: {
      query: {
        /** @description A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log). */
        phrase?: string;
        /** @description A cursor, as given in the [Link header](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor. */
        after?: string;
        /** @description A cursor, as given in the [Link header](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor. */
        before?: string;
        /**
         * @description The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.
         *
         * The default is `desc`.
         */
        order?: "desc" | "asc";
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The number of results per page (max 100). */
        per_page?: number;
      };
      path: {
        /** @description The slug version of the enterprise name. You can also substitute this value with the enterprise id. */
        enterprise: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time). */
            "@timestamp"?: number;
            /** @description The name of the action that was performed, for example `user.login` or `repo.create`. */
            action?: string;
            active?: boolean;
            active_was?: boolean;
            /** @description The actor who performed the action. */
            actor?: string;
            /** @description The id of the actor who performed the action. */
            actor_id?: number;
            actor_location?: {
              country_name?: string;
            };
            data?: {
              [key: string]: unknown | undefined;
            };
            org_id?: number;
            /** @description The username of the account being blocked. */
            blocked_user?: string;
            business?: string;
            config?: Record<string, never>[];
            config_was?: Record<string, never>[];
            content_type?: string;
            /** @description The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time). */
            created_at?: number;
            deploy_key_fingerprint?: string;
            /** @description A unique identifier for an audit event. */
            _document_id?: string;
            emoji?: string;
            events?: Record<string, never>[];
            events_were?: Record<string, never>[];
            explanation?: string;
            fingerprint?: string;
            hook_id?: number;
            limited_availability?: boolean;
            message?: string;
            name?: string;
            old_user?: string;
            openssh_public_key?: string;
            org?: string;
            previous_visibility?: string;
            read_only?: boolean;
            /** @description The name of the repository. */
            repo?: string;
            /** @description The name of the repository. */
            repository?: string;
            repository_public?: boolean;
            target_login?: string;
            team?: string;
            /** @description The type of protocol (for example, HTTP or SSH) used to transfer Git data. */
            transport_protocol?: number;
            /** @description A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data. */
            transport_protocol_name?: string;
            /** @description The user that was affected by the action performed (if available). */
            user?: string;
            /** @description The repository visibility, for example `public` or `private`. */
            visibility?: string;
          }[];
        };
      };
    };
  };
  /**
   * List repositories accessible to the app installation
   * @description List repositories that an app installation can access.
   *
   * You must use an [installation access token](https://docs.github.com/github-ae@latest/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
   */
  "apps/list-repos-accessible-to-installation": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            total_count: number;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example selected */
            repository_selection?: string;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List issues assigned to the authenticated user
   * @description List issues assigned to the authenticated user across all visible repositories including owned repositories, member
   * repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not
   * necessarily assigned to you.
   *
   *
   * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
   * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
   * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
   * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
   */
  "issues/list": {
    parameters: {
      query: {
        /** @description Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation. */
        filter?:
          | "assigned"
          | "created"
          | "mentioned"
          | "subscribed"
          | "repos"
          | "all";
        /** @description Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`. */
        state?: "open" | "closed" | "all";
        /** @description A list of comma separated label names. Example: `bug,ui,@high` */
        labels?: string;
        /** @description What to sort results by. Can be either `created`, `updated`, `comments`. */
        sort?: "created" | "updated" | "comments";
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        collab?: boolean;
        orgs?: boolean;
        owned?: boolean;
        pulls?: boolean;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Get GitHub AE meta information
   * @description Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see "[About GitHub's IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/)."
   *
   * **Note:** The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses.
   */
  "meta/get": {
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example true */
            verifiable_password_authentication: boolean;
            ssh_key_fingerprints?: {
              SHA256_RSA?: string;
              SHA256_DSA?: string;
              SHA256_ECDSA?: string;
              SHA256_ED25519?: string;
            };
            /**
             * @example [
             *   "127.0.0.1/32"
             * ]
             */
            hooks?: string[];
            /**
             * @example [
             *   "127.0.0.1/32"
             * ]
             */
            web?: string[];
            /**
             * @example [
             *   "127.0.0.1/32"
             * ]
             */
            api?: string[];
            /**
             * @example [
             *   "127.0.0.1/32"
             * ]
             */
            git?: string[];
            /**
             * @example [
             *   "13.65.0.0/16",
             *   "157.55.204.33/32",
             *   "2a01:111:f403:f90c::/62"
             * ]
             */
            packages?: string[];
            /**
             * @example [
             *   "192.30.252.153/32",
             *   "192.30.252.154/32"
             * ]
             */
            pages?: string[];
            /**
             * @example [
             *   "54.158.161.132",
             *   "54.226.70.38"
             * ]
             */
            importer?: string[];
            /**
             * @example [
             *   "13.64.0.0/16",
             *   "13.65.0.0/16"
             * ]
             */
            actions?: string[];
            /**
             * @example [
             *   "192.168.7.15/32",
             *   "192.168.7.16/32"
             * ]
             */
            dependabot?: string[];
          };
        };
      };
      /** @description Not modified */
      304: never;
    };
  };
  /**
   * List notifications for the authenticated user
   * @description List all notifications for the current user, sorted by most recently updated.
   */
  "activity/list-notifications-for-authenticated-user": {
    parameters: {
      query: {
        /** @description If `true`, show notifications marked as read. */
        all?: boolean;
        /** @description If `true`, only shows notifications in which the user is directly participating or mentioned. */
        participating?: boolean;
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        before?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: string;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            subject: {
              title: string;
              url: string;
              latest_comment_url: string;
              type: string;
            };
            reason: string;
            unread: boolean;
            updated_at: string;
            last_read_at: string | null;
            url: string;
            /** @example https://api.github.com/notifications/threads/2/subscription */
            subscription_url: string;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /** Get a thread */
  "activity/get-thread": {
    parameters: {
      path: {
        /** @description The unique identifier of the pull request thread. */
        thread_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: string;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            subject: {
              title: string;
              url: string;
              latest_comment_url: string;
              type: string;
            };
            reason: string;
            unread: boolean;
            updated_at: string;
            last_read_at: string | null;
            url: string;
            /** @example https://api.github.com/notifications/threads/2/subscription */
            subscription_url: string;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List selected repositories enabled for GitHub Actions in an organization
   * @description Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."
   *
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
   */
  "actions/list-selected-repositories-enabled-github-actions-organization": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
          };
        };
      };
    };
  };
  /**
   * List self-hosted runner groups for an organization
   * @description Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   */
  "actions/list-self-hosted-runner-groups-for-org": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            runner_groups: {
              id: number;
              name: string;
              visibility: string;
              default: boolean;
              /** @description Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected` */
              selected_repositories_url?: string;
              runners_url: string;
              inherited: boolean;
              inherited_allows_public_repositories?: boolean;
              allows_public_repositories: boolean;
            }[];
          };
        };
      };
    };
  };
  /**
   * Create a self-hosted runner group for an organization
   * @description The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."
   *
   * Creates a new self-hosted runner group for an organization.
   *
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   */
  "actions/create-self-hosted-runner-group-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Name of the runner group. */
          name: string;
          /**
           * @description Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories.
           * @default all
           * @enum {string}
           */
          visibility?: "selected" | "all" | "private";
          /** @description List of repository IDs that can access the runner group. */
          selected_repository_ids?: number[];
          /** @description List of runner IDs to add to the runner group. */
          runners?: number[];
          /**
           * @description Whether the runner group can be used by `public` repositories.
           * @default false
           */
          allows_public_repositories?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            /** @description Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected` */
            selected_repositories_url?: string;
            runners_url: string;
            inherited: boolean;
            inherited_allows_public_repositories?: boolean;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Get a self-hosted runner group for an organization
   * @description Gets a specific self-hosted runner group for an organization.
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   */
  "actions/get-self-hosted-runner-group-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description Unique identifier of the self-hosted runner group. */
        runner_group_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            /** @description Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected` */
            selected_repositories_url?: string;
            runners_url: string;
            inherited: boolean;
            inherited_allows_public_repositories?: boolean;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Update a self-hosted runner group for an organization
   * @description The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."
   *
   * Updates the `name` and `visibility` of a self-hosted runner group in an organization.
   *
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   */
  "actions/update-self-hosted-runner-group-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description Unique identifier of the self-hosted runner group. */
        runner_group_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Name of the runner group. */
          name: string;
          /**
           * @description Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.
           * @enum {string}
           */
          visibility?: "selected" | "all" | "private";
          /**
           * @description Whether the runner group can be used by `public` repositories.
           * @default false
           */
          allows_public_repositories?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            name: string;
            visibility: string;
            default: boolean;
            /** @description Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected` */
            selected_repositories_url?: string;
            runners_url: string;
            inherited: boolean;
            inherited_allows_public_repositories?: boolean;
            allows_public_repositories: boolean;
          };
        };
      };
    };
  };
  /**
   * Create a registration token for an organization
   * @description Returns a token that you can pass to the `config` script. The token expires after one hour.
   *
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   *
   * #### Example using registration token
   *
   * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
   *
   * ```
   * ./config.sh --url https://github.com/octo-org --token TOKEN
   * ```
   */
  "actions/create-registration-token-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * Create a remove token for an organization
   * @description Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.
   *
   * You must authenticate using an access token with the `admin:org` scope to use this endpoint.
   *
   * #### Example using remove token
   *
   * To remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this
   * endpoint.
   *
   * ```
   * ./config.sh remove --token TOKEN
   * ```
   */
  "actions/create-remove-token-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * Create or update an organization secret
   * @description Creates or updates an organization secret with an encrypted value. Encrypt your secret using
   * [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
   * token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to
   * use this endpoint.
   *
   * #### Example encrypting a secret using Node.js
   *
   * Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.
   *
   * ```
   * const sodium = require('tweetsodium');
   *
   * const key = "base64-encoded-public-key";
   * const value = "plain-text-secret";
   *
   * // Convert the message and key to Uint8Array's (Buffer implements that interface)
   * const messageBytes = Buffer.from(value);
   * const keyBytes = Buffer.from(key, 'base64');
   *
   * // Encrypt using LibSodium.
   * const encryptedBytes = sodium.seal(messageBytes, keyBytes);
   *
   * // Base64 the encrypted secret
   * const encrypted = Buffer.from(encryptedBytes).toString('base64');
   *
   * console.log(encrypted);
   * ```
   *
   *
   * #### Example encrypting a secret using Python
   *
   * Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.
   *
   * ```
   * from base64 import b64encode
   * from nacl import encoding, public
   *
   * def encrypt(public_key: str, secret_value: str) -> str:
   *   """Encrypt a Unicode string using the public key."""
   *   public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
   *   sealed_box = public.SealedBox(public_key)
   *   encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
   *   return b64encode(encrypted).decode("utf-8")
   * ```
   *
   * #### Example encrypting a secret using C#
   *
   * Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.
   *
   * ```
   * var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
   * var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");
   *
   * var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);
   *
   * Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
   * ```
   *
   * #### Example encrypting a secret using Ruby
   *
   * Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.
   *
   * ```ruby
   * require "rbnacl"
   * require "base64"
   *
   * key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
   * public_key = RbNaCl::PublicKey.new(key)
   *
   * box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
   * encrypted_secret = box.encrypt("my_secret")
   *
   * # Print the base64 encoded secret
   * puts Base64.strict_encode64(encrypted_secret)
   * ```
   */
  "actions/create-or-update-org-secret": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description The name of the secret. */
        secret_name: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/github-ae@latest/rest/reference/actions#get-an-organization-public-key) endpoint. */
          encrypted_value?: string;
          /** @description ID of the key you used to encrypt the secret. */
          key_id?: string;
          /**
           * @description Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.
           * @enum {string}
           */
          visibility: "all" | "private" | "selected";
          /** @description An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/github-ae@latest/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/github-ae@latest/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/github-ae@latest/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints. */
          selected_repository_ids?: number[];
        };
      };
    };
    responses: {
      /** @description Response when creating a secret */
      201: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Response when updating a secret */
      204: never;
    };
  };
  /**
   * List selected repositories for an organization secret
   * @description Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
   */
  "actions/list-selected-repos-for-org-secret": {
    parameters: {
      query: {
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The number of results per page (max 100). */
        per_page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description The name of the secret. */
        secret_name: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            repositories: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            }[];
          };
        };
      };
    };
  };
  /**
   * Get the audit log for an organization
   * @description Gets the audit log for an organization. For more information, see "[Reviewing the audit log for your organization](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization)."
   *
   * This endpoint is available for organizations on GitHub Enterprise Cloud. To use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.
   *
   * By default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see "[Reviewing the audit log for your organization](https://docs.github.com/github-ae@latest/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log)."
   *
   * Use pagination to retrieve fewer or more than 30 events. For more information, see "[Resources in the REST API](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination)."
   */
  "orgs/get-audit-log": {
    parameters: {
      query: {
        /** @description A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log). */
        phrase?: string;
        /** @description A cursor, as given in the [Link header](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor. */
        after?: string;
        /** @description A cursor, as given in the [Link header](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor. */
        before?: string;
        /**
         * @description The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.
         *
         * The default is `desc`.
         */
        order?: "desc" | "asc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time). */
            "@timestamp"?: number;
            /** @description The name of the action that was performed, for example `user.login` or `repo.create`. */
            action?: string;
            active?: boolean;
            active_was?: boolean;
            /** @description The actor who performed the action. */
            actor?: string;
            /** @description The id of the actor who performed the action. */
            actor_id?: number;
            actor_location?: {
              country_name?: string;
            };
            data?: {
              [key: string]: unknown | undefined;
            };
            org_id?: number;
            /** @description The username of the account being blocked. */
            blocked_user?: string;
            business?: string;
            config?: Record<string, never>[];
            config_was?: Record<string, never>[];
            content_type?: string;
            /** @description The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time). */
            created_at?: number;
            deploy_key_fingerprint?: string;
            /** @description A unique identifier for an audit event. */
            _document_id?: string;
            emoji?: string;
            events?: Record<string, never>[];
            events_were?: Record<string, never>[];
            explanation?: string;
            fingerprint?: string;
            hook_id?: number;
            limited_availability?: boolean;
            message?: string;
            name?: string;
            old_user?: string;
            openssh_public_key?: string;
            org?: string;
            previous_visibility?: string;
            read_only?: boolean;
            /** @description The name of the repository. */
            repo?: string;
            /** @description The name of the repository. */
            repository?: string;
            repository_public?: boolean;
            target_login?: string;
            team?: string;
            /** @description The type of protocol (for example, HTTP or SSH) used to transfer Git data. */
            transport_protocol?: number;
            /** @description A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data. */
            transport_protocol_name?: string;
            /** @description The user that was affected by the action performed (if available). */
            user?: string;
            /** @description The repository visibility, for example `public` or `private`. */
            visibility?: string;
          }[];
        };
      };
    };
  };
  /**
   * List organization issues assigned to the authenticated user
   * @description List issues in an organization assigned to the authenticated user.
   *
   * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
   * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
   * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
   * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
   */
  "issues/list-for-org": {
    parameters: {
      query: {
        /** @description Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation. */
        filter?:
          | "assigned"
          | "created"
          | "mentioned"
          | "subscribed"
          | "repos"
          | "all";
        /** @description Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`. */
        state?: "open" | "closed" | "all";
        /** @description A list of comma separated label names. Example: `bug,ui,@high` */
        labels?: string;
        /** @description What to sort results by. Can be either `created`, `updated`, `comments`. */
        sort?: "created" | "updated" | "comments";
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          }[];
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List organization migrations
   * @description Lists the most recent migrations.
   */
  "migrations/list-for-org": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description Exclude attributes from the API response to improve performance */
        exclude?: "repositories"[];
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 79 */
            id: number;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example 0b989ba4-242f-11e5-81e1-c7b6966d2516 */
            guid: string;
            /** @example pending */
            state: string;
            /** @example true */
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /**
             * Format: uri
             * @example https://api.github.com/orgs/octo-org/migrations/79
             */
            url: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            updated_at: string;
            node_id: string;
            /** Format: uri */
            archive_url?: string;
            exclude?: Record<string, never>[];
          }[];
        };
      };
    };
  };
  /**
   * Start an organization migration
   * @description Initiates the generation of a migration archive.
   */
  "migrations/start-for-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description A list of arrays indicating which repositories should be migrated. */
          repositories: string[];
          /**
           * @description Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
           * @default false
           * @example true
           */
          lock_repositories?: boolean;
          /**
           * @description Indicates whether metadata should be excluded and only git source should be included for the migration.
           * @default false
           */
          exclude_metadata?: boolean;
          /**
           * @description Indicates whether the repository git data should be excluded from the migration.
           * @default false
           */
          exclude_git_data?: boolean;
          /**
           * @description Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
           * @default false
           * @example true
           */
          exclude_attachments?: boolean;
          /**
           * @description Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
           * @default false
           * @example true
           */
          exclude_releases?: boolean;
          /**
           * @description Indicates whether projects owned by the organization or users should be excluded. from the migration.
           * @default false
           * @example true
           */
          exclude_owner_projects?: boolean;
          /**
           * @description Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
           * @default false
           * @example true
           */
          org_metadata_only?: boolean;
          exclude?: "repositories"[];
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /** @example 79 */
            id: number;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example 0b989ba4-242f-11e5-81e1-c7b6966d2516 */
            guid: string;
            /** @example pending */
            state: string;
            /** @example true */
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /**
             * Format: uri
             * @example https://api.github.com/orgs/octo-org/migrations/79
             */
            url: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            updated_at: string;
            node_id: string;
            /** Format: uri */
            archive_url?: string;
            exclude?: Record<string, never>[];
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Get an organization migration status
   * @description Fetches the status of a migration.
   *
   * The `state` of a migration can be one of the following values:
   *
   * *   `pending`, which means the migration hasn't started yet.
   * *   `exporting`, which means the migration is in progress.
   * *   `exported`, which means the migration finished successfully.
   * *   `failed`, which means the migration failed.
   */
  "migrations/get-status-for-org": {
    parameters: {
      query: {
        /** @description Exclude attributes from the API response to improve performance */
        exclude?: "repositories"[];
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description The unique identifier of the migration. */
        migration_id: number;
      };
    };
    responses: {
      /**
       * @description *   `pending`, which means the migration hasn't started yet.
       * *   `exporting`, which means the migration is in progress.
       * *   `exported`, which means the migration finished successfully.
       * *   `failed`, which means the migration failed.
       */
      200: {
        content: {
          "application/json": {
            /** @example 79 */
            id: number;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example 0b989ba4-242f-11e5-81e1-c7b6966d2516 */
            guid: string;
            /** @example pending */
            state: string;
            /** @example true */
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /**
             * Format: uri
             * @example https://api.github.com/orgs/octo-org/migrations/79
             */
            url: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            updated_at: string;
            node_id: string;
            /** Format: uri */
            archive_url?: string;
            exclude?: Record<string, never>[];
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List organization repositories
   * @description Lists repositories for the specified organization.
   */
  "repos/list-for-org": {
    parameters: {
      query: {
        /** @description Specifies the types of repositories you want returned. The `internal` value is not yet supported when a GitHub App calls this API with an installation access token. */
        type?: "all" | "private" | "forks" | "sources" | "member" | "internal";
        /** @description The property to sort the results by. */
        sort?: "created" | "updated" | "pushed" | "full_name";
        /** @description The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`. */
        direction?: "asc" | "desc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
    };
  };
  /**
   * Create an organization repository
   * @description Creates a new repository in the specified organization. The authenticated user must be a member of the organization.
   *
   * **OAuth scope requirements**
   *
   * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
   *
   * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
   * *   `repo` scope to create a private repository
   */
  "repos/create-in-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The name of the repository. */
          name: string;
          /** @description A short description of the repository. */
          description?: string;
          /** @description A URL with more information about the repository. */
          homepage?: string;
          /**
           * @description Whether the repository is private.
           * @default false
           */
          private?: boolean;
          /**
           * @description Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see "[Creating an internal repository](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)" in the GitHub Help documentation.
           * @enum {string}
           */
          visibility?: "public" | "private" | "internal";
          /**
           * @description Either `true` to enable issues for this repository or `false` to disable them.
           * @default true
           */
          has_issues?: boolean;
          /**
           * @description Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
           * @default true
           */
          has_projects?: boolean;
          /**
           * @description Either `true` to enable the wiki for this repository or `false` to disable it.
           * @default true
           */
          has_wiki?: boolean;
          /**
           * @description Either `true` to make this repo available as a template repository or `false` to prevent it.
           * @default false
           */
          is_template?: boolean;
          /** @description The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization. */
          team_id?: number;
          /**
           * @description Pass `true` to create an initial commit with empty README.
           * @default false
           */
          auto_init?: boolean;
          /** @description Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, "Haskell". */
          gitignore_template?: string;
          /** @description Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://docs.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, "mit" or "mpl-2.0". */
          license_template?: string;
          /**
           * @description Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
           * @default true
           */
          allow_squash_merge?: boolean;
          /**
           * @description Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
           * @default true
           */
          allow_merge_commit?: boolean;
          /**
           * @description Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
           * @default true
           */
          allow_rebase_merge?: boolean;
          /**
           * @description Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
           * @default false
           */
          allow_auto_merge?: boolean;
          /**
           * @description Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
           * @default false
           */
          delete_branch_on_merge?: boolean;
          /**
           * @description Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message.
           * @default false
           */
          use_squash_pr_title_as_default?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            template_repository?: {
              id?: number;
              node_id?: string;
              name?: string;
              full_name?: string;
              owner?: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
              };
              private?: boolean;
              html_url?: string;
              description?: string;
              fork?: boolean;
              url?: string;
              archive_url?: string;
              assignees_url?: string;
              blobs_url?: string;
              branches_url?: string;
              collaborators_url?: string;
              comments_url?: string;
              commits_url?: string;
              compare_url?: string;
              contents_url?: string;
              contributors_url?: string;
              deployments_url?: string;
              downloads_url?: string;
              events_url?: string;
              forks_url?: string;
              git_commits_url?: string;
              git_refs_url?: string;
              git_tags_url?: string;
              git_url?: string;
              issue_comment_url?: string;
              issue_events_url?: string;
              issues_url?: string;
              keys_url?: string;
              labels_url?: string;
              languages_url?: string;
              merges_url?: string;
              milestones_url?: string;
              notifications_url?: string;
              pulls_url?: string;
              releases_url?: string;
              ssh_url?: string;
              stargazers_url?: string;
              statuses_url?: string;
              subscribers_url?: string;
              subscription_url?: string;
              tags_url?: string;
              teams_url?: string;
              trees_url?: string;
              clone_url?: string;
              mirror_url?: string;
              hooks_url?: string;
              svn_url?: string;
              homepage?: string;
              language?: string;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              pushed_at?: string;
              created_at?: string;
              updated_at?: string;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              allow_rebase_merge?: boolean;
              temp_clone_token?: string;
              allow_squash_merge?: boolean;
              allow_auto_merge?: boolean;
              delete_branch_on_merge?: boolean;
              allow_update_branch?: boolean;
              allow_merge_commit?: boolean;
              subscribers_count?: number;
              network_count?: number;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
             * @default false
             * @example false
             */
            allow_update_branch?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /** @description Whether to allow forking this repo */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            /** @example "2020-07-09T00:17:42Z" */
            starred_at?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * List team repositories
   * @description Lists a team's repositories visible to the authenticated user.
   *
   * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.
   */
  "teams/list-repos-in-org": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description The slug of the team name. */
        team_slug: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
    };
  };
  /**
   * Check team permissions for a repository
   * @description Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.
   *
   * You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.
   *
   * If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.
   *
   * **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
   */
  "teams/check-permissions-for-repo-in-org": {
    parameters: {
      path: {
        /** @description The organization name. The name is not case sensitive. */
        org: string;
        /** @description The slug of the team name. */
        team_slug: string;
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Alternative response with repository permissions */
      200: {
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /**
             * @description Whether to allow forking this repo
             * @default false
             * @example false
             */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
          };
        };
      };
      /** @description Response if team has permission for the repository. This is the response when the repository media type hasn't been provded in the Accept header. */
      204: never;
      /** @description Not Found if team does not have permission for the repository */
      404: never;
    };
  };
  /**
   * Get rate limit status for the authenticated user
   * @description **Note:** Accessing this endpoint does not count against your REST API rate limit.
   *
   * **Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.
   */
  "rate-limit/get": {
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example 5000 */
          "X-RateLimit-Limit"?: number;
          /** @example 4999 */
          "X-RateLimit-Remaining"?: number;
          /** @example 1590701888 */
          "X-RateLimit-Reset"?: number;
        };
        content: {
          "application/json": {
            resources: {
              /** Rate Limit */
              core: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              graphql?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              search: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              source_import?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              integration_manifest?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              code_scanning_upload?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              actions_runner_registration?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
              /** Rate Limit */
              scim?: {
                limit: number;
                remaining: number;
                reset: number;
                used: number;
              };
            };
            /** Rate Limit */
            rate: {
              limit: number;
              remaining: number;
              reset: number;
              used: number;
            };
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Get a repository
   * @description The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.
   */
  "repos/get": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /** @example master */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /** @example true */
            is_template?: boolean;
            /**
             * @example [
             *   "octocat",
             *   "atom",
             *   "electron",
             *   "API"
             * ]
             */
            topics?: string[];
            /** @example true */
            has_issues: boolean;
            /** @example true */
            has_projects: boolean;
            /** @example true */
            has_wiki: boolean;
            has_pages: boolean;
            /** @example true */
            has_downloads: boolean;
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @example public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string;
            permissions?: {
              admin: boolean;
              maintain?: boolean;
              push: boolean;
              triage?: boolean;
              pull: boolean;
            };
            /** @example true */
            allow_rebase_merge?: boolean;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string | null;
            /** @example true */
            allow_squash_merge?: boolean;
            /** @example false */
            allow_auto_merge?: boolean;
            /** @example false */
            delete_branch_on_merge?: boolean;
            /** @example true */
            allow_merge_commit?: boolean;
            /** @example true */
            allow_update_branch?: boolean;
            /** @default false */
            use_squash_pr_title_as_default?: boolean;
            /** @example true */
            allow_forking?: boolean;
            /** @example 42 */
            subscribers_count: number;
            /** @example 0 */
            network_count: number;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Repository
             * @description A git repository
             */
            parent?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * Repository
             * @description A git repository
             */
            source?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            forks: number;
            master_branch?: string;
            open_issues: number;
            watchers: number;
            /**
             * @description Whether anonymous git access is allowed.
             * @default true
             */
            anonymous_access_enabled?: boolean;
            /**
             * Code Of Conduct Simple
             * @description Code of Conduct Simple
             */
            code_of_conduct?: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/github/docs/community/code_of_conduct
               */
              url: string;
              /** @example citizen_code_of_conduct */
              key: string;
              /** @example Citizen Code of Conduct */
              name: string;
              /**
               * Format: uri
               * @example https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
               */
              html_url: string | null;
            };
            security_and_analysis?: {
              advanced_security?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning_push_protection?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
            } | null;
          };
        };
      };
      /** @description Moved permanently */
      301: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Update a repository
   * @description **Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/github-ae@latest/rest/reference/repos#replace-all-repository-topics) endpoint.
   */
  "repos/update": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description The name of the repository. */
          name?: string;
          /** @description A short description of the repository. */
          description?: string;
          /** @description A URL with more information about the repository. */
          homepage?: string;
          /**
           * @description Either `true` to make the repository private or `false` to make it public. Default: `false`.
           * **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.
           * @default false
           */
          private?: boolean;
          /**
           * @description Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`."
           * @enum {string}
           */
          visibility?: "public" | "private" | "internal";
          /** @description Specify which security and analysis features to enable or disable. For example, to enable GitHub Advanced Security, use this data in the body of the PATCH request: `{"security_and_analysis": {"advanced_security": {"status": "enabled"}}}`. If you have admin permissions for a private repository covered by an Advanced Security license, you can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request. */
          security_and_analysis?: {
            /** @description Use the `status` property to enable or disable GitHub Advanced Security for this repository. For more information, see "[About GitHub Advanced Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security)." */
            advanced_security?: {
              /** @description Can be `enabled` or `disabled`. */
              status?: string;
            };
            /** @description Use the `status` property to enable or disable secret scanning for this repository. For more information, see "[About secret scanning](/code-security/secret-security/about-secret-scanning)." */
            secret_scanning?: {
              /** @description Can be `enabled` or `disabled`. */
              status?: string;
            };
            /** @description Use the `status` property to enable or disable secret scanning push protection for this repository. For more information, see "[Protecting pushes with secret scanning](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)." */
            secret_scanning_push_protection?: {
              /** @description Can be `enabled` or `disabled`. */
              status?: string;
            };
          } | null;
          /**
           * @description Either `true` to enable issues for this repository or `false` to disable them.
           * @default true
           */
          has_issues?: boolean;
          /**
           * @description Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
           * @default true
           */
          has_projects?: boolean;
          /**
           * @description Either `true` to enable the wiki for this repository or `false` to disable it.
           * @default true
           */
          has_wiki?: boolean;
          /**
           * @description Either `true` to make this repo available as a template repository or `false` to prevent it.
           * @default false
           */
          is_template?: boolean;
          /** @description Updates the default branch for this repository. */
          default_branch?: string;
          /**
           * @description Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
           * @default true
           */
          allow_squash_merge?: boolean;
          /**
           * @description Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
           * @default true
           */
          allow_merge_commit?: boolean;
          /**
           * @description Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
           * @default true
           */
          allow_rebase_merge?: boolean;
          /**
           * @description Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
           * @default false
           */
          allow_auto_merge?: boolean;
          /**
           * @description Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
           * @default false
           */
          delete_branch_on_merge?: boolean;
          /**
           * @description Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.
           * @default false
           */
          allow_update_branch?: boolean;
          /**
           * @description Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message.
           * @default false
           */
          use_squash_pr_title_as_default?: boolean;
          /**
           * @description `true` to archive this repository. **Note**: You cannot unarchive repositories through the API.
           * @default false
           */
          archived?: boolean;
          /**
           * @description Either `true` to allow private forks, or `false` to prevent private forks.
           * @default false
           */
          allow_forking?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /** @example master */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /** @example true */
            is_template?: boolean;
            /**
             * @example [
             *   "octocat",
             *   "atom",
             *   "electron",
             *   "API"
             * ]
             */
            topics?: string[];
            /** @example true */
            has_issues: boolean;
            /** @example true */
            has_projects: boolean;
            /** @example true */
            has_wiki: boolean;
            has_pages: boolean;
            /** @example true */
            has_downloads: boolean;
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @example public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string;
            permissions?: {
              admin: boolean;
              maintain?: boolean;
              push: boolean;
              triage?: boolean;
              pull: boolean;
            };
            /** @example true */
            allow_rebase_merge?: boolean;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string | null;
            /** @example true */
            allow_squash_merge?: boolean;
            /** @example false */
            allow_auto_merge?: boolean;
            /** @example false */
            delete_branch_on_merge?: boolean;
            /** @example true */
            allow_merge_commit?: boolean;
            /** @example true */
            allow_update_branch?: boolean;
            /** @default false */
            use_squash_pr_title_as_default?: boolean;
            /** @example true */
            allow_forking?: boolean;
            /** @example 42 */
            subscribers_count: number;
            /** @example 0 */
            network_count: number;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Repository
             * @description A git repository
             */
            parent?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * Repository
             * @description A git repository
             */
            source?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            forks: number;
            master_branch?: string;
            open_issues: number;
            watchers: number;
            /**
             * @description Whether anonymous git access is allowed.
             * @default true
             */
            anonymous_access_enabled?: boolean;
            /**
             * Code Of Conduct Simple
             * @description Code of Conduct Simple
             */
            code_of_conduct?: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/github/docs/community/code_of_conduct
               */
              url: string;
              /** @example citizen_code_of_conduct */
              key: string;
              /** @example Citizen Code of Conduct */
              name: string;
              /**
               * Format: uri
               * @example https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
               */
              html_url: string | null;
            };
            security_and_analysis?: {
              advanced_security?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning_push_protection?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
            } | null;
          };
        };
      };
      /** @description Temporary Redirect */
      307: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Create a registration token for a repository
   * @description Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate
   * using an access token with the `repo` scope to use this endpoint.
   *
   * #### Example using registration token
   *
   * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
   *
   * ```
   * ./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN
   * ```
   */
  "actions/create-registration-token-for-repo": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * Create a remove token for a repository
   * @description Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.
   * You must authenticate using an access token with the `repo` scope to use this endpoint.
   *
   * #### Example using remove token
   *
   * To remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.
   *
   * ```
   * ./config.sh remove --token TOKEN
   * ```
   */
  "actions/create-remove-token-for-repo": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * @description The token used for authentication
             * @example v1.1f699f1069f60xxx
             */
            token: string;
            /**
             * Format: date-time
             * @description The time this token expires
             * @example 2016-07-11T22:14:10Z
             */
            expires_at: string;
            /**
             * @example {
             *   "issues": "read",
             *   "deployments": "write"
             * }
             */
            permissions?: Record<string, never>;
            /** @description The repositories this token has access to */
            repositories?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /** @example config.yaml */
            single_file?: string | null;
            /**
             * @description Describe whether all repositories have been selected or there's a selection involved
             * @enum {string}
             */
            repository_selection?: "all" | "selected";
          };
        };
      };
    };
  };
  /**
   * List workflow runs for a repository
   * @description Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#parameters).
   *
   * Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
   */
  "actions/list-workflow-runs-for-repo": {
    parameters: {
      query: {
        /** @description Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run. */
        actor?: string;
        /** @description Returns workflow runs associated with a branch. Use the name of the branch of the `push`. */
        branch?: string;
        /** @description Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see "[Events that trigger workflows](https://docs.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)." */
        event?: string;
        /** @description Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see "[Create a check run](https://docs.github.com/github-ae@latest/rest/reference/checks#create-a-check-run)." */
        status?:
          | "completed"
          | "action_required"
          | "cancelled"
          | "failure"
          | "neutral"
          | "skipped"
          | "stale"
          | "success"
          | "timed_out"
          | "in_progress"
          | "queued"
          | "requested"
          | "waiting";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description Returns workflow runs created within the given date-time range. For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/github-ae@latest/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)." */
        created?: string;
        /** @description If `true` pull requests are omitted from the response (empty array). */
        exclude_pull_requests?: boolean;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            total_count: number;
            workflow_runs: {
              /**
               * @description The ID of the workflow run.
               * @example 5
               */
              id: number;
              /**
               * @description The name of the workflow run.
               * @example Build
               */
              name?: string | null;
              /** @example MDEwOkNoZWNrU3VpdGU1 */
              node_id: string;
              /**
               * @description The ID of the associated check suite.
               * @example 42
               */
              check_suite_id?: number;
              /**
               * @description The node ID of the associated check suite.
               * @example MDEwOkNoZWNrU3VpdGU0Mg==
               */
              check_suite_node_id?: string;
              /** @example master */
              head_branch: string | null;
              /**
               * @description The SHA of the head commit that points to the version of the workflow being run.
               * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
               */
              head_sha: string;
              /**
               * @description The full path of the workflow
               * @example octocat/octo-repo/.github/workflows/ci.yml@main
               */
              path: string;
              /**
               * @description The auto incrementing run number for the workflow run.
               * @example 106
               */
              run_number: number;
              /**
               * @description Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
               * @example 1
               */
              run_attempt?: number;
              referenced_workflows?:
                | {
                    path: string;
                    sha: string;
                    ref?: string;
                  }[]
                | null;
              /** @example push */
              event: string;
              /** @example completed */
              status: string | null;
              /** @example neutral */
              conclusion: string | null;
              /**
               * @description The ID of the parent workflow.
               * @example 5
               */
              workflow_id: number;
              /**
               * @description The URL to the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5
               */
              url: string;
              /** @example https://github.com/github/hello-world/suites/4 */
              html_url: string;
              pull_requests:
                | {
                    id: number;
                    number: number;
                    url: string;
                    head: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                    base: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                  }[]
                | null;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              /**
               * Simple User
               * @description Simple User
               */
              actor?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * Simple User
               * @description Simple User
               */
              triggering_actor?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * Format: date-time
               * @description The start time of the latest run. Resets on re-run.
               */
              run_started_at?: string;
              /**
               * @description The URL to the jobs for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
               */
              jobs_url: string;
              /**
               * @description The URL to download the logs for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/logs
               */
              logs_url: string;
              /**
               * @description The URL to the associated check suite.
               * @example https://api.github.com/repos/github/hello-world/check-suites/12
               */
              check_suite_url: string;
              /**
               * @description The URL to the artifacts for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
               */
              artifacts_url: string;
              /**
               * @description The URL to cancel the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
               */
              cancel_url: string;
              /**
               * @description The URL to rerun the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
               */
              rerun_url: string;
              /**
               * @description The URL to the previous attempted run of this workflow, if one exists.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
               */
              previous_attempt_url?: string | null;
              /**
               * @description The URL to the workflow.
               * @example https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
               */
              workflow_url: string;
              /**
               * Simple Commit
               * @description Simple Commit
               */
              head_commit: {
                id: string;
                tree_id: string;
                message: string;
                /** Format: date-time */
                timestamp: string;
                author: {
                  name: string;
                  email: string;
                } | null;
                committer: {
                  name: string;
                  email: string;
                } | null;
              } | null;
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              head_repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              /** @example 5 */
              head_repository_id?: number;
            }[];
          };
        };
      };
    };
  };
  /**
   * Get a workflow run
   * @description Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
   */
  "actions/get-workflow-run": {
    parameters: {
      query: {
        /** @description If `true` pull requests are omitted from the response (empty array). */
        exclude_pull_requests?: boolean;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the workflow run. */
        run_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The ID of the workflow run.
             * @example 5
             */
            id: number;
            /**
             * @description The name of the workflow run.
             * @example Build
             */
            name?: string | null;
            /** @example MDEwOkNoZWNrU3VpdGU1 */
            node_id: string;
            /**
             * @description The ID of the associated check suite.
             * @example 42
             */
            check_suite_id?: number;
            /**
             * @description The node ID of the associated check suite.
             * @example MDEwOkNoZWNrU3VpdGU0Mg==
             */
            check_suite_node_id?: string;
            /** @example master */
            head_branch: string | null;
            /**
             * @description The SHA of the head commit that points to the version of the workflow being run.
             * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
             */
            head_sha: string;
            /**
             * @description The full path of the workflow
             * @example octocat/octo-repo/.github/workflows/ci.yml@main
             */
            path: string;
            /**
             * @description The auto incrementing run number for the workflow run.
             * @example 106
             */
            run_number: number;
            /**
             * @description Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
             * @example 1
             */
            run_attempt?: number;
            referenced_workflows?:
              | {
                  path: string;
                  sha: string;
                  ref?: string;
                }[]
              | null;
            /** @example push */
            event: string;
            /** @example completed */
            status: string | null;
            /** @example neutral */
            conclusion: string | null;
            /**
             * @description The ID of the parent workflow.
             * @example 5
             */
            workflow_id: number;
            /**
             * @description The URL to the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5
             */
            url: string;
            /** @example https://github.com/github/hello-world/suites/4 */
            html_url: string;
            pull_requests:
              | {
                  id: number;
                  number: number;
                  url: string;
                  head: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                  base: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                }[]
              | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            /**
             * Simple User
             * @description Simple User
             */
            actor?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * Simple User
             * @description Simple User
             */
            triggering_actor?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * Format: date-time
             * @description The start time of the latest run. Resets on re-run.
             */
            run_started_at?: string;
            /**
             * @description The URL to the jobs for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
             */
            jobs_url: string;
            /**
             * @description The URL to download the logs for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/logs
             */
            logs_url: string;
            /**
             * @description The URL to the associated check suite.
             * @example https://api.github.com/repos/github/hello-world/check-suites/12
             */
            check_suite_url: string;
            /**
             * @description The URL to the artifacts for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
             */
            artifacts_url: string;
            /**
             * @description The URL to cancel the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
             */
            cancel_url: string;
            /**
             * @description The URL to rerun the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
             */
            rerun_url: string;
            /**
             * @description The URL to the previous attempted run of this workflow, if one exists.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
             */
            previous_attempt_url?: string | null;
            /**
             * @description The URL to the workflow.
             * @example https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
             */
            workflow_url: string;
            /**
             * Simple Commit
             * @description Simple Commit
             */
            head_commit: {
              id: string;
              tree_id: string;
              message: string;
              /** Format: date-time */
              timestamp: string;
              author: {
                name: string;
                email: string;
              } | null;
              committer: {
                name: string;
                email: string;
              } | null;
            } | null;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            head_repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** @example 5 */
            head_repository_id?: number;
          };
        };
      };
    };
  };
  /**
   * Get a workflow run attempt
   * @description Gets a specific workflow run attempt. Anyone with read access to the repository
   * can use this endpoint. If the repository is private you must use an access token
   * with the `repo` scope. GitHub Apps must have the `actions:read` permission to
   * use this endpoint.
   */
  "actions/get-workflow-run-attempt": {
    parameters: {
      query: {
        /** @description If `true` pull requests are omitted from the response (empty array). */
        exclude_pull_requests?: boolean;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the workflow run. */
        run_id: number;
        /** @description The attempt number of the workflow run. */
        attempt_number: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The ID of the workflow run.
             * @example 5
             */
            id: number;
            /**
             * @description The name of the workflow run.
             * @example Build
             */
            name?: string | null;
            /** @example MDEwOkNoZWNrU3VpdGU1 */
            node_id: string;
            /**
             * @description The ID of the associated check suite.
             * @example 42
             */
            check_suite_id?: number;
            /**
             * @description The node ID of the associated check suite.
             * @example MDEwOkNoZWNrU3VpdGU0Mg==
             */
            check_suite_node_id?: string;
            /** @example master */
            head_branch: string | null;
            /**
             * @description The SHA of the head commit that points to the version of the workflow being run.
             * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
             */
            head_sha: string;
            /**
             * @description The full path of the workflow
             * @example octocat/octo-repo/.github/workflows/ci.yml@main
             */
            path: string;
            /**
             * @description The auto incrementing run number for the workflow run.
             * @example 106
             */
            run_number: number;
            /**
             * @description Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
             * @example 1
             */
            run_attempt?: number;
            referenced_workflows?:
              | {
                  path: string;
                  sha: string;
                  ref?: string;
                }[]
              | null;
            /** @example push */
            event: string;
            /** @example completed */
            status: string | null;
            /** @example neutral */
            conclusion: string | null;
            /**
             * @description The ID of the parent workflow.
             * @example 5
             */
            workflow_id: number;
            /**
             * @description The URL to the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5
             */
            url: string;
            /** @example https://github.com/github/hello-world/suites/4 */
            html_url: string;
            pull_requests:
              | {
                  id: number;
                  number: number;
                  url: string;
                  head: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                  base: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                }[]
              | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            /**
             * Simple User
             * @description Simple User
             */
            actor?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * Simple User
             * @description Simple User
             */
            triggering_actor?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * Format: date-time
             * @description The start time of the latest run. Resets on re-run.
             */
            run_started_at?: string;
            /**
             * @description The URL to the jobs for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
             */
            jobs_url: string;
            /**
             * @description The URL to download the logs for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/logs
             */
            logs_url: string;
            /**
             * @description The URL to the associated check suite.
             * @example https://api.github.com/repos/github/hello-world/check-suites/12
             */
            check_suite_url: string;
            /**
             * @description The URL to the artifacts for the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
             */
            artifacts_url: string;
            /**
             * @description The URL to cancel the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
             */
            cancel_url: string;
            /**
             * @description The URL to rerun the workflow run.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
             */
            rerun_url: string;
            /**
             * @description The URL to the previous attempted run of this workflow, if one exists.
             * @example https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
             */
            previous_attempt_url?: string | null;
            /**
             * @description The URL to the workflow.
             * @example https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
             */
            workflow_url: string;
            /**
             * Simple Commit
             * @description Simple Commit
             */
            head_commit: {
              id: string;
              tree_id: string;
              message: string;
              /** Format: date-time */
              timestamp: string;
              author: {
                name: string;
                email: string;
              } | null;
              committer: {
                name: string;
                email: string;
              } | null;
            } | null;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            head_repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** @example 5 */
            head_repository_id?: number;
          };
        };
      };
    };
  };
  /**
   * Re-run a workflow
   * @description Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
   */
  "actions/re-run-workflow": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the workflow run. */
        run_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": Record<string, unknown> | null;
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /**
   * List workflow runs
   * @description List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#parameters).
   *
   * Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
   */
  "actions/list-workflow-runs": {
    parameters: {
      query: {
        /** @description Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run. */
        actor?: string;
        /** @description Returns workflow runs associated with a branch. Use the name of the branch of the `push`. */
        branch?: string;
        /** @description Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see "[Events that trigger workflows](https://docs.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)." */
        event?: string;
        /** @description Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see "[Create a check run](https://docs.github.com/github-ae@latest/rest/reference/checks#create-a-check-run)." */
        status?:
          | "completed"
          | "action_required"
          | "cancelled"
          | "failure"
          | "neutral"
          | "skipped"
          | "stale"
          | "success"
          | "timed_out"
          | "in_progress"
          | "queued"
          | "requested"
          | "waiting";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description Returns workflow runs created within the given date-time range. For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/github-ae@latest/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)." */
        created?: string;
        /** @description If `true` pull requests are omitted from the response (empty array). */
        exclude_pull_requests?: boolean;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The ID of the workflow. You can also pass the workflow file name as a string. */
        workflow_id: number | string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            total_count: number;
            workflow_runs: {
              /**
               * @description The ID of the workflow run.
               * @example 5
               */
              id: number;
              /**
               * @description The name of the workflow run.
               * @example Build
               */
              name?: string | null;
              /** @example MDEwOkNoZWNrU3VpdGU1 */
              node_id: string;
              /**
               * @description The ID of the associated check suite.
               * @example 42
               */
              check_suite_id?: number;
              /**
               * @description The node ID of the associated check suite.
               * @example MDEwOkNoZWNrU3VpdGU0Mg==
               */
              check_suite_node_id?: string;
              /** @example master */
              head_branch: string | null;
              /**
               * @description The SHA of the head commit that points to the version of the workflow being run.
               * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
               */
              head_sha: string;
              /**
               * @description The full path of the workflow
               * @example octocat/octo-repo/.github/workflows/ci.yml@main
               */
              path: string;
              /**
               * @description The auto incrementing run number for the workflow run.
               * @example 106
               */
              run_number: number;
              /**
               * @description Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
               * @example 1
               */
              run_attempt?: number;
              referenced_workflows?:
                | {
                    path: string;
                    sha: string;
                    ref?: string;
                  }[]
                | null;
              /** @example push */
              event: string;
              /** @example completed */
              status: string | null;
              /** @example neutral */
              conclusion: string | null;
              /**
               * @description The ID of the parent workflow.
               * @example 5
               */
              workflow_id: number;
              /**
               * @description The URL to the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5
               */
              url: string;
              /** @example https://github.com/github/hello-world/suites/4 */
              html_url: string;
              pull_requests:
                | {
                    id: number;
                    number: number;
                    url: string;
                    head: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                    base: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                  }[]
                | null;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              /**
               * Simple User
               * @description Simple User
               */
              actor?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * Simple User
               * @description Simple User
               */
              triggering_actor?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * Format: date-time
               * @description The start time of the latest run. Resets on re-run.
               */
              run_started_at?: string;
              /**
               * @description The URL to the jobs for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
               */
              jobs_url: string;
              /**
               * @description The URL to download the logs for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/logs
               */
              logs_url: string;
              /**
               * @description The URL to the associated check suite.
               * @example https://api.github.com/repos/github/hello-world/check-suites/12
               */
              check_suite_url: string;
              /**
               * @description The URL to the artifacts for the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
               */
              artifacts_url: string;
              /**
               * @description The URL to cancel the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
               */
              cancel_url: string;
              /**
               * @description The URL to rerun the workflow run.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
               */
              rerun_url: string;
              /**
               * @description The URL to the previous attempted run of this workflow, if one exists.
               * @example https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
               */
              previous_attempt_url?: string | null;
              /**
               * @description The URL to the workflow.
               * @example https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
               */
              workflow_url: string;
              /**
               * Simple Commit
               * @description Simple Commit
               */
              head_commit: {
                id: string;
                tree_id: string;
                message: string;
                /** Format: date-time */
                timestamp: string;
                author: {
                  name: string;
                  email: string;
                } | null;
                committer: {
                  name: string;
                  email: string;
                } | null;
              } | null;
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              head_repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              /** @example 5 */
              head_repository_id?: number;
            }[];
          };
        };
      };
    };
  };
  /**
   * List all autolinks of a repository
   * @description This returns a list of autolinks configured for the given repository.
   *
   * Information about autolinks are only available to repository administrators.
   */
  "repos/list-autolinks": {
    parameters: {
      query: {
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            /**
             * @description The prefix of a key that is linkified.
             * @example TICKET-
             */
            key_prefix: string;
            /**
             * @description A template for the target URL that is generated if a key was found.
             * @example https://example.com/TICKET?query=<num>
             */
            url_template: string;
          }[];
        };
      };
    };
  };
  /**
   * Create an autolink reference for a repository
   * @description Users with admin access to the repository can create an autolink.
   */
  "repos/create-autolink": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit. */
          key_prefix: string;
          /** @description The URL must contain `<num>` for the reference number. */
          url_template: string;
        };
      };
    };
    responses: {
      /** @description response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World/autolinks/1 */
          Location?: string;
        };
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            /**
             * @description The prefix of a key that is linkified.
             * @example TICKET-
             */
            key_prefix: string;
            /**
             * @description A template for the target URL that is generated if a key was found.
             * @example https://example.com/TICKET?query=<num>
             */
            url_template: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Get an autolink reference of a repository
   * @description This returns a single autolink reference by ID that was configured for the given repository.
   *
   * Information about autolinks are only available to repository administrators.
   */
  "repos/get-autolink": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the autolink. */
        autolink_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            /**
             * @description The prefix of a key that is linkified.
             * @example TICKET-
             */
            key_prefix: string;
            /**
             * @description A template for the target URL that is generated if a key was found.
             * @example https://example.com/TICKET?query=<num>
             */
            url_template: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Create a check suite
   * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
   *
   * By default, check suites are automatically created when you create a [check run](https://docs.github.com/github-ae@latest/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using "[Update repository preferences for check suites](https://docs.github.com/github-ae@latest/rest/reference/checks#update-repository-preferences-for-check-suites)". Your GitHub App must have the `checks:write` permission to create check suites.
   */
  "checks/create-suite": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The sha of the head commit. */
          head_sha: string;
        };
      };
    };
    responses: {
      /** @description Response when the suite already exists */
      200: {
        content: {
          "application/json": {
            /** @example 5 */
            id: number;
            /** @example MDEwOkNoZWNrU3VpdGU1 */
            node_id: string;
            /** @example master */
            head_branch: string | null;
            /**
             * @description The SHA of the head commit that is being checked.
             * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
             */
            head_sha: string;
            /**
             * @example completed
             * @enum {string|null}
             */
            status: "queued" | "in_progress" | "completed" | null;
            /**
             * @example neutral
             * @enum {string|null}
             */
            conclusion:
              | "success"
              | "failure"
              | "neutral"
              | "cancelled"
              | "skipped"
              | "timed_out"
              | "action_required"
              | null;
            /** @example https://api.github.com/repos/github/hello-world/check-suites/5 */
            url: string | null;
            /** @example 146e867f55c26428e5f9fade55a9bbf5e95a7912 */
            before: string | null;
            /** @example d6fde92930d4715a2b49857d24b940956b26d2d3 */
            after: string | null;
            pull_requests:
              | {
                  id: number;
                  number: number;
                  url: string;
                  head: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                  base: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                }[]
              | null;
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            app: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** Format: date-time */
            created_at: string | null;
            /** Format: date-time */
            updated_at: string | null;
            /**
             * Simple Commit
             * @description Simple Commit
             */
            head_commit: {
              id: string;
              tree_id: string;
              message: string;
              /** Format: date-time */
              timestamp: string;
              author: {
                name: string;
                email: string;
              } | null;
              committer: {
                name: string;
                email: string;
              } | null;
            };
            latest_check_runs_count: number;
            check_runs_url: string;
            rerequestable?: boolean;
            runs_rerequestable?: boolean;
          };
        };
      };
      /** @description Response when the suite was created */
      201: {
        content: {
          "application/json": {
            /** @example 5 */
            id: number;
            /** @example MDEwOkNoZWNrU3VpdGU1 */
            node_id: string;
            /** @example master */
            head_branch: string | null;
            /**
             * @description The SHA of the head commit that is being checked.
             * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
             */
            head_sha: string;
            /**
             * @example completed
             * @enum {string|null}
             */
            status: "queued" | "in_progress" | "completed" | null;
            /**
             * @example neutral
             * @enum {string|null}
             */
            conclusion:
              | "success"
              | "failure"
              | "neutral"
              | "cancelled"
              | "skipped"
              | "timed_out"
              | "action_required"
              | null;
            /** @example https://api.github.com/repos/github/hello-world/check-suites/5 */
            url: string | null;
            /** @example 146e867f55c26428e5f9fade55a9bbf5e95a7912 */
            before: string | null;
            /** @example d6fde92930d4715a2b49857d24b940956b26d2d3 */
            after: string | null;
            pull_requests:
              | {
                  id: number;
                  number: number;
                  url: string;
                  head: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                  base: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                }[]
              | null;
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            app: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** Format: date-time */
            created_at: string | null;
            /** Format: date-time */
            updated_at: string | null;
            /**
             * Simple Commit
             * @description Simple Commit
             */
            head_commit: {
              id: string;
              tree_id: string;
              message: string;
              /** Format: date-time */
              timestamp: string;
              author: {
                name: string;
                email: string;
              } | null;
              committer: {
                name: string;
                email: string;
              } | null;
            };
            latest_check_runs_count: number;
            check_runs_url: string;
            rerequestable?: boolean;
            runs_rerequestable?: boolean;
          };
        };
      };
    };
  };
  /**
   * Update repository preferences for check suites
   * @description Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/github-ae@latest/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.
   */
  "checks/set-suites-preferences": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/github-ae@latest/rest/reference/checks#auto_trigger_checks-object) description for details. */
          auto_trigger_checks?: {
            /** @description The `id` of the GitHub App. */
            app_id: number;
            /**
             * @description Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.
             * @default true
             */
            setting: boolean;
          }[];
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            preferences: {
              auto_trigger_checks?: {
                app_id: number;
                setting: boolean;
              }[];
            };
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
          };
        };
      };
    };
  };
  /**
   * Get a check suite
   * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
   *
   * Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
   */
  "checks/get-suite": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the check suite. */
        check_suite_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 5 */
            id: number;
            /** @example MDEwOkNoZWNrU3VpdGU1 */
            node_id: string;
            /** @example master */
            head_branch: string | null;
            /**
             * @description The SHA of the head commit that is being checked.
             * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
             */
            head_sha: string;
            /**
             * @example completed
             * @enum {string|null}
             */
            status: "queued" | "in_progress" | "completed" | null;
            /**
             * @example neutral
             * @enum {string|null}
             */
            conclusion:
              | "success"
              | "failure"
              | "neutral"
              | "cancelled"
              | "skipped"
              | "timed_out"
              | "action_required"
              | null;
            /** @example https://api.github.com/repos/github/hello-world/check-suites/5 */
            url: string | null;
            /** @example 146e867f55c26428e5f9fade55a9bbf5e95a7912 */
            before: string | null;
            /** @example d6fde92930d4715a2b49857d24b940956b26d2d3 */
            after: string | null;
            pull_requests:
              | {
                  id: number;
                  number: number;
                  url: string;
                  head: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                  base: {
                    ref: string;
                    sha: string;
                    repo: {
                      id: number;
                      url: string;
                      name: string;
                    };
                  };
                }[]
              | null;
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            app: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** Format: date-time */
            created_at: string | null;
            /** Format: date-time */
            updated_at: string | null;
            /**
             * Simple Commit
             * @description Simple Commit
             */
            head_commit: {
              id: string;
              tree_id: string;
              message: string;
              /** Format: date-time */
              timestamp: string;
              author: {
                name: string;
                email: string;
              } | null;
              committer: {
                name: string;
                email: string;
              } | null;
            };
            latest_check_runs_count: number;
            check_runs_url: string;
            rerequestable?: boolean;
            runs_rerequestable?: boolean;
          };
        };
      };
    };
  };
  /**
   * List code scanning alerts for a repository
   * @description Lists all open code scanning alerts for the default branch (usually `main`
   * or `master`). You must use an access token with the `security_events` scope to use
   * this endpoint. GitHub Apps must have the `security_events` read permission to use
   * this endpoint.
   *
   * The response includes a `most_recent_instance` object.
   * This provides details of the most recent instance of this alert
   * for the default branch or for the specified Git reference
   * (if you used `ref` in the request).
   */
  "code-scanning/list-alerts-for-repo": {
    parameters: {
      query: {
        /** @description The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both. */
        tool_name?: string;
        /** @description The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both. */
        tool_guid?: string | null;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`. */
        ref?: string;
        /** @description Set to `open`, `fixed`, or `dismissed` to list code scanning alerts in a specific state. */
        state?: "open" | "closed" | "dismissed" | "fixed";
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url: string;
            /**
             * Format: uri
             * @description The REST API URL for fetching the list of instances for an alert.
             */
            instances_url: string;
            /**
             * @description State of a code scanning alert.
             * @enum {string}
             */
            state: "open" | "closed" | "dismissed" | "fixed";
            /**
             * Simple User
             * @description Simple User
             */
            dismissed_by: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Format: date-time
             * @description The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            dismissed_at: string | null;
            /**
             * @description **Required when the state is dismissed.** The reason for dismissing or closing the alert.
             * @enum {string|null}
             */
            dismissed_reason:
              | ""
              | "false positive"
              | "won't fix"
              | "used in tests"
              | null;
            rule: {
              /** @description A unique identifier for the rule used to detect the alert. */
              id?: string | null;
              /** @description The name of the rule used to detect the alert. */
              name?: string;
              /**
               * @description The severity of the alert.
               * @enum {string|null}
               */
              severity?: "none" | "note" | "warning" | "error" | null;
              /** @description A short description of the rule used to detect the alert. */
              description?: string;
            };
            tool: {
              /** @description The name of the tool used to generate the code scanning analysis. */
              name?: string;
              /** @description The version of the tool used to generate the code scanning analysis. */
              version?: string | null;
              /** @description The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data. */
              guid?: string | null;
            };
            most_recent_instance: {
              /**
               * @description The full Git reference, formatted as `refs/heads/<branch name>`,
               * `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
               */
              ref?: string;
              /** @description Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name. */
              analysis_key?: string;
              /** @description Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed. */
              environment?: string;
              /** @description Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code. */
              category?: string;
              /**
               * @description State of a code scanning alert.
               * @enum {string}
               */
              state?: "open" | "closed" | "dismissed" | "fixed";
              commit_sha?: string;
              message?: {
                text?: string;
              };
              /** @description Describe a region within a file for the alert. */
              location?: {
                path?: string;
                start_line?: number;
                end_line?: number;
                start_column?: number;
                end_column?: number;
              };
              html_url?: string;
              /**
               * @description Classifications that have been applied to the file that triggered the alert.
               * For example identifying it as documentation, or a generated file.
               */
              classifications?: (
                | "source"
                | "generated"
                | "test"
                | "library"
                | null
              )[];
            };
          }[];
        };
      };
      /** @description Response if GitHub Advanced Security is not enabled for this repository */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Get a code scanning alert
   * @description Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.
   *
   * **Deprecation notice**:
   * The instances field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The same information can now be retrieved via a GET request to the URL specified by `instances_url`.
   */
  "code-scanning/get-alert": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation. */
        alert_number: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url: string;
            /**
             * Format: uri
             * @description The REST API URL for fetching the list of instances for an alert.
             */
            instances_url: string;
            /**
             * @description State of a code scanning alert.
             * @enum {string}
             */
            state: "open" | "closed" | "dismissed" | "fixed";
            /**
             * Simple User
             * @description Simple User
             */
            dismissed_by: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Format: date-time
             * @description The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            dismissed_at: string | null;
            /**
             * @description **Required when the state is dismissed.** The reason for dismissing or closing the alert.
             * @enum {string|null}
             */
            dismissed_reason:
              | ""
              | "false positive"
              | "won't fix"
              | "used in tests"
              | null;
            rule: {
              /** @description A unique identifier for the rule used to detect the alert. */
              id?: string | null;
              /** @description The name of the rule used to detect the alert. */
              name?: string;
              /**
               * @description The severity of the alert.
               * @enum {string|null}
               */
              severity?: "none" | "note" | "warning" | "error" | null;
              /**
               * @description The security severity of the alert.
               * @enum {string|null}
               */
              security_severity_level?:
                | "low"
                | "medium"
                | "high"
                | "critical"
                | null;
              /** @description A short description of the rule used to detect the alert. */
              description?: string;
              /** @description description of the rule used to detect the alert. */
              full_description?: string;
              /** @description A set of tags applicable for the rule. */
              tags?: string[] | null;
              /** @description Detailed documentation for the rule as GitHub Flavored Markdown. */
              help?: string | null;
            };
            tool: {
              /** @description The name of the tool used to generate the code scanning analysis. */
              name?: string;
              /** @description The version of the tool used to generate the code scanning analysis. */
              version?: string | null;
              /** @description The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data. */
              guid?: string | null;
            };
            most_recent_instance: {
              /**
               * @description The full Git reference, formatted as `refs/heads/<branch name>`,
               * `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
               */
              ref?: string;
              /** @description Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name. */
              analysis_key?: string;
              /** @description Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed. */
              environment?: string;
              /** @description Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code. */
              category?: string;
              /**
               * @description State of a code scanning alert.
               * @enum {string}
               */
              state?: "open" | "closed" | "dismissed" | "fixed";
              commit_sha?: string;
              message?: {
                text?: string;
              };
              /** @description Describe a region within a file for the alert. */
              location?: {
                path?: string;
                start_line?: number;
                end_line?: number;
                start_column?: number;
                end_column?: number;
              };
              html_url?: string;
              /**
               * @description Classifications that have been applied to the file that triggered the alert.
               * For example identifying it as documentation, or a generated file.
               */
              classifications?: (
                | "source"
                | "generated"
                | "test"
                | "library"
                | null
              )[];
            };
          };
        };
      };
      /** @description Response if GitHub Advanced Security is not enabled for this repository */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Update a code scanning alert
   * @description Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.
   */
  "code-scanning/update-alert": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation. */
        alert_number: number;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`.
           * @enum {string}
           */
          state: "open" | "dismissed";
          /**
           * @description **Required when the state is dismissed.** The reason for dismissing or closing the alert.
           * @enum {string|null}
           */
          dismissed_reason?:
            | ""
            | "false positive"
            | "won't fix"
            | "used in tests"
            | null;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url: string;
            /**
             * Format: uri
             * @description The REST API URL for fetching the list of instances for an alert.
             */
            instances_url: string;
            /**
             * @description State of a code scanning alert.
             * @enum {string}
             */
            state: "open" | "closed" | "dismissed" | "fixed";
            /**
             * Simple User
             * @description Simple User
             */
            dismissed_by: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Format: date-time
             * @description The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            dismissed_at: string | null;
            /**
             * @description **Required when the state is dismissed.** The reason for dismissing or closing the alert.
             * @enum {string|null}
             */
            dismissed_reason:
              | ""
              | "false positive"
              | "won't fix"
              | "used in tests"
              | null;
            rule: {
              /** @description A unique identifier for the rule used to detect the alert. */
              id?: string | null;
              /** @description The name of the rule used to detect the alert. */
              name?: string;
              /**
               * @description The severity of the alert.
               * @enum {string|null}
               */
              severity?: "none" | "note" | "warning" | "error" | null;
              /**
               * @description The security severity of the alert.
               * @enum {string|null}
               */
              security_severity_level?:
                | "low"
                | "medium"
                | "high"
                | "critical"
                | null;
              /** @description A short description of the rule used to detect the alert. */
              description?: string;
              /** @description description of the rule used to detect the alert. */
              full_description?: string;
              /** @description A set of tags applicable for the rule. */
              tags?: string[] | null;
              /** @description Detailed documentation for the rule as GitHub Flavored Markdown. */
              help?: string | null;
            };
            tool: {
              /** @description The name of the tool used to generate the code scanning analysis. */
              name?: string;
              /** @description The version of the tool used to generate the code scanning analysis. */
              version?: string | null;
              /** @description The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data. */
              guid?: string | null;
            };
            most_recent_instance: {
              /**
               * @description The full Git reference, formatted as `refs/heads/<branch name>`,
               * `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
               */
              ref?: string;
              /** @description Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name. */
              analysis_key?: string;
              /** @description Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed. */
              environment?: string;
              /** @description Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code. */
              category?: string;
              /**
               * @description State of a code scanning alert.
               * @enum {string}
               */
              state?: "open" | "closed" | "dismissed" | "fixed";
              commit_sha?: string;
              message?: {
                text?: string;
              };
              /** @description Describe a region within a file for the alert. */
              location?: {
                path?: string;
                start_line?: number;
                end_line?: number;
                start_column?: number;
                end_column?: number;
              };
              html_url?: string;
              /**
               * @description Classifications that have been applied to the file that triggered the alert.
               * For example identifying it as documentation, or a generated file.
               */
              classifications?: (
                | "source"
                | "generated"
                | "test"
                | "library"
                | null
              )[];
            };
          };
        };
      };
      /** @description Response if the repository is archived or if github advanced security is not enabled for this repository */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * List repository collaborators
   * @description For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.
   * Organization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.
   *
   * Team members will include the members of child teams.
   *
   * You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this
   * endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this
   * endpoint.
   */
  "repos/list-collaborators": {
    parameters: {
      query: {
        /** @description Filter collaborators returned by their affiliation. `outside` means all outside collaborators of an organization-owned repository. `direct` means all collaborators with permissions to an organization-owned repository, regardless of organization membership status. `all` means all collaborators the authenticated user can see. */
        affiliation?: "outside" | "direct" | "all";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example octocat */
            login: string;
            /** @example 1 */
            id: number;
            email?: string | null;
            name?: string | null;
            /** @example MDQ6VXNlcjE= */
            node_id: string;
            /**
             * Format: uri
             * @example https://github.com/images/error/octocat_happy.gif
             */
            avatar_url: string;
            /** @example 41d064eb2195891e12d0413f63227ea7 */
            gravatar_id: string | null;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat
             */
            url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat
             */
            html_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat/followers
             */
            followers_url: string;
            /** @example https://api.github.com/users/octocat/following{/other_user} */
            following_url: string;
            /** @example https://api.github.com/users/octocat/gists{/gist_id} */
            gists_url: string;
            /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
            starred_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat/subscriptions
             */
            subscriptions_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat/orgs
             */
            organizations_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat/repos
             */
            repos_url: string;
            /** @example https://api.github.com/users/octocat/events{/privacy} */
            events_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/users/octocat/received_events
             */
            received_events_url: string;
            /** @example User */
            type: string;
            site_admin: boolean;
            permissions?: {
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
              admin: boolean;
            };
            /** @example admin */
            role_name?: string;
          }[];
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Add a repository collaborator
   * @description This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
   *
   * Adding an outside collaborator may be restricted by enterprise administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/github-ae@latest/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
   *
   * For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github-ae@latest/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:
   *
   * ```
   * Cannot assign {member} permission of {role name}
   * ```
   *
   * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs)."
   *
   * The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/github-ae@latest/rest/reference/repos#invitations).
   *
   * **Updating an existing collaborator's permission level**
   *
   * The endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.
   *
   * **Rate limits**
   *
   * You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
   */
  "repos/add-collaborator": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description The permission to grant the collaborator. **Only valid on organization-owned repositories.**
           * @default push
           * @enum {string}
           */
          permission?: "pull" | "push" | "admin" | "maintain" | "triage";
        };
      };
    };
    responses: {
      /** @description Response when a new invitation is created */
      201: {
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository invitation.
             * @example 42
             */
            id: number;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            invitee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            inviter: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The permission associated with the invitation.
             * @example read
             * @enum {string}
             */
            permissions: "read" | "write" | "admin" | "triage" | "maintain";
            /**
             * Format: date-time
             * @example 2016-06-13T14:52:50-05:00
             */
            created_at: string;
            /** @description Whether or not the invitation has expired */
            expired?: boolean;
            /**
             * @description URL for the repository invitation
             * @example https://api.github.com/user/repository-invitations/1
             */
            url: string;
            /** @example https://github.com/octocat/Hello-World/invitations */
            html_url: string;
            node_id: string;
          };
        };
      };
      /**
       * @description Response when:
       * - an existing collaborator is added as a collaborator
       * - an organization member is added as an individual collaborator
       * - an existing team member (whose team is also a repository collaborator) is added as an individual collaborator
       */
      204: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Get repository permissions for a user
   * @description Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.
   */
  "repos/get-collaborator-permission-level": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description if user has admin permissions */
      200: {
        content: {
          "application/json": {
            permission: string;
            /** @example admin */
            role_name: string;
            /**
             * Collaborator
             * @description Collaborator
             */
            user: {
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              email?: string | null;
              name?: string | null;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              permissions?: {
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
                admin: boolean;
              };
              /** @example admin */
              role_name?: string;
            } | null;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Create reaction for a commit comment
   * @description Create a reaction to a [commit comment](https://docs.github.com/github-ae@latest/rest/reference/repos#comments). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.
   */
  "reactions/create-for-commit-comment": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the comment. */
        comment_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description The [reaction type](https://docs.github.com/github-ae@latest/rest/reference/reactions#reaction-types) to add to the commit comment.
           * @enum {string}
           */
          content:
            | "+1"
            | "-1"
            | "laugh"
            | "confused"
            | "heart"
            | "hooray"
            | "rocket"
            | "eyes";
        };
      };
    };
    responses: {
      /** @description Reaction exists */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id: number;
            /** @example MDg6UmVhY3Rpb24x */
            node_id: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The reaction to use
             * @example heart
             * @enum {string}
             */
            content:
              | "+1"
              | "-1"
              | "laugh"
              | "confused"
              | "heart"
              | "hooray"
              | "rocket"
              | "eyes";
            /**
             * Format: date-time
             * @example 2016-05-20T20:09:31Z
             */
            created_at: string;
          };
        };
      };
      /** @description Reaction created */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            id: number;
            /** @example MDg6UmVhY3Rpb24x */
            node_id: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The reaction to use
             * @example heart
             * @enum {string}
             */
            content:
              | "+1"
              | "-1"
              | "laugh"
              | "confused"
              | "heart"
              | "hooray"
              | "rocket"
              | "eyes";
            /**
             * Format: date-time
             * @example 2016-05-20T20:09:31Z
             */
            created_at: string;
          };
        };
      };
      /** @description Preview header missing */
      415: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * List pull requests associated with a commit
   * @description Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests.
   */
  "repos/list-pull-requests-associated-with-commit": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The SHA of the commit. */
        commit_sha: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347
             */
            url: string;
            /** @example 1 */
            id: number;
            /** @example MDExOlB1bGxSZXF1ZXN0MQ== */
            node_id: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347
             */
            html_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.diff
             */
            diff_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.patch
             */
            patch_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347
             */
            issue_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
             */
            commits_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
             */
            review_comments_url: string;
            /** @example https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number} */
            review_comment_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
             */
            comments_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
             */
            statuses_url: string;
            /** @example 1347 */
            number: number;
            /** @example open */
            state: string;
            /** @example true */
            locked: boolean;
            /** @example new-feature */
            title: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example Please pull these awesome changes */
            body: string | null;
            labels: {
              /** Format: int64 */
              id: number;
              node_id: string;
              url: string;
              name: string;
              description: string;
              color: string;
              default: boolean;
            }[];
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            /** @example too heated */
            active_lock_reason?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            updated_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            closed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            merged_at: string | null;
            /** @example e5bd3914e2e596debea16f433f57875b5b90bcd6 */
            merge_commit_sha: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_reviewers?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_teams?:
              | {
                  id: number;
                  node_id: string;
                  name: string;
                  slug: string;
                  description: string | null;
                  privacy?: string;
                  permission: string;
                  permissions?: {
                    pull: boolean;
                    triage: boolean;
                    push: boolean;
                    maintain: boolean;
                    admin: boolean;
                  };
                  /** Format: uri */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/orgs/rails/teams/core
                   */
                  html_url: string;
                  members_url: string;
                  /** Format: uri */
                  repositories_url: string;
                  /**
                   * Team Simple
                   * @description Groups of organization members that gives permissions on specified repositories.
                   */
                  parent: {
                    /**
                     * @description Unique identifier of the team
                     * @example 1
                     */
                    id: number;
                    /** @example MDQ6VGVhbTE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @description URL for the team
                     * @example https://api.github.com/organizations/1/team/1
                     */
                    url: string;
                    /** @example https://api.github.com/organizations/1/team/1/members{/member} */
                    members_url: string;
                    /**
                     * @description Name of the team
                     * @example Justice League
                     */
                    name: string;
                    /**
                     * @description Description of the team
                     * @example A great team.
                     */
                    description: string | null;
                    /**
                     * @description Permission that the team will have for its repositories
                     * @example admin
                     */
                    permission: string;
                    /**
                     * @description The level of privacy this team should have
                     * @example closed
                     */
                    privacy?: string;
                    /**
                     * Format: uri
                     * @example https://github.com/orgs/rails/teams/core
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/organizations/1/team/1/repos
                     */
                    repositories_url: string;
                    /** @example justice-league */
                    slug: string;
                    /**
                     * @description Distinguished Name (DN) that team maps to within LDAP environment
                     * @example uid=example,ou=users,dc=github,dc=com
                     */
                    ldap_dn?: string;
                  } | null;
                }[]
              | null;
            head: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            base: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            _links: {
              /**
               * Link
               * @description Hypermedia Link
               */
              comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              commits: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              statuses: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              html: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              issue: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comment: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              self: {
                href: string;
              };
            };
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /**
             * Auto merge
             * @description The status of auto merging a pull request.
             */
            auto_merge: {
              /**
               * Simple User
               * @description Simple User
               */
              enabled_by: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description The merge method to use.
               * @enum {string}
               */
              merge_method: "merge" | "squash" | "rebase";
              /** @description Title for the merge commit message. */
              commit_title: string;
              /** @description Commit message for the merge commit. */
              commit_message: string;
            } | null;
            /**
             * @description Indicates whether or not the pull request is a draft.
             * @example false
             */
            draft?: boolean;
          }[];
        };
      };
    };
  };
  /**
   * List check suites for a Git reference
   * @description **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.
   *
   * Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.
   */
  "checks/list-suites-for-ref": {
    parameters: {
      query: {
        /**
         * @description Filters check suites by GitHub App `id`.
         * @example 1
         */
        app_id?: number;
        /** @description Returns check runs with the specified `name`. */
        check_name?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description ref parameter */
        ref: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            total_count: number;
            check_suites: {
              /** @example 5 */
              id: number;
              /** @example MDEwOkNoZWNrU3VpdGU1 */
              node_id: string;
              /** @example master */
              head_branch: string | null;
              /**
               * @description The SHA of the head commit that is being checked.
               * @example 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
               */
              head_sha: string;
              /**
               * @example completed
               * @enum {string|null}
               */
              status: "queued" | "in_progress" | "completed" | null;
              /**
               * @example neutral
               * @enum {string|null}
               */
              conclusion:
                | "success"
                | "failure"
                | "neutral"
                | "cancelled"
                | "skipped"
                | "timed_out"
                | "action_required"
                | null;
              /** @example https://api.github.com/repos/github/hello-world/check-suites/5 */
              url: string | null;
              /** @example 146e867f55c26428e5f9fade55a9bbf5e95a7912 */
              before: string | null;
              /** @example d6fde92930d4715a2b49857d24b940956b26d2d3 */
              after: string | null;
              pull_requests:
                | {
                    id: number;
                    number: number;
                    url: string;
                    head: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                    base: {
                      ref: string;
                      sha: string;
                      repo: {
                        id: number;
                        url: string;
                        name: string;
                      };
                    };
                  }[]
                | null;
              /**
               * GitHub app
               * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
               */
              app: {
                /**
                 * @description Unique identifier of the GitHub app
                 * @example 37
                 */
                id: number;
                /**
                 * @description The slug name of the GitHub app
                 * @example probot-owners
                 */
                slug?: string;
                /** @example MDExOkludGVncmF0aW9uMQ== */
                node_id: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description The name of the GitHub app
                 * @example Probot Owners
                 */
                name: string;
                /** @example The description of the app. */
                description: string | null;
                /**
                 * Format: uri
                 * @example https://example.com
                 */
                external_url: string;
                /**
                 * Format: uri
                 * @example https://github.com/apps/super-ci
                 */
                html_url: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                updated_at: string;
                /**
                 * @description The set of permissions for the GitHub app
                 * @example {
                 *   "issues": "read",
                 *   "deployments": "write"
                 * }
                 */
                permissions: {
                  issues?: string;
                  checks?: string;
                  metadata?: string;
                  contents?: string;
                  deployments?: string;
                  [key: string]: string | undefined;
                };
                /**
                 * @description The list of events for the GitHub app
                 * @example [
                 *   "label",
                 *   "deployment"
                 * ]
                 */
                events: string[];
                /**
                 * @description The number of installations associated with the GitHub app
                 * @example 5
                 */
                installations_count?: number;
                /** @example "Iv1.25b5d1e65ffc4022" */
                client_id?: string;
                /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                client_secret?: string;
                /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                webhook_secret?: string | null;
                /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                pem?: string;
              } | null;
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              /** Format: date-time */
              created_at: string | null;
              /** Format: date-time */
              updated_at: string | null;
              /**
               * Simple Commit
               * @description Simple Commit
               */
              head_commit: {
                id: string;
                tree_id: string;
                message: string;
                /** Format: date-time */
                timestamp: string;
                author: {
                  name: string;
                  email: string;
                } | null;
                committer: {
                  name: string;
                  email: string;
                } | null;
              };
              latest_check_runs_count: number;
              check_runs_url: string;
              rerequestable?: boolean;
              runs_rerequestable?: boolean;
            }[];
          };
        };
      };
    };
  };
  /**
   * Get the combined status for a specific reference
   * @description Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.
   *
   *
   * Additionally, a combined `state` is returned. The `state` is one of:
   *
   * *   **failure** if any of the contexts report as `error` or `failure`
   * *   **pending** if there are no statuses or a context is `pending`
   * *   **success** if the latest status for all contexts is `success`
   */
  "repos/get-combined-status-for-ref": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description ref parameter */
        ref: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            state: string;
            statuses: {
              description: string | null;
              id: number;
              node_id: string;
              state: string;
              context: string;
              /** Format: uri */
              target_url: string;
              required?: boolean | null;
              /** Format: uri */
              avatar_url: string | null;
              /** Format: uri */
              url: string;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
            }[];
            sha: string;
            total_count: number;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /** Format: uri */
            commit_url: string;
            /** Format: uri */
            url: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /** List repository events */
  "activity/list-repo-events": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: string;
            type: string | null;
            /**
             * Actor
             * @description Actor
             */
            actor: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            repo: {
              id: number;
              name: string;
              /** Format: uri */
              url: string;
            };
            /**
             * Actor
             * @description Actor
             */
            org?: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            payload: {
              action?: string;
              /**
               * Issue
               * @description Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
               */
              issue?: {
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue
                 * @example https://api.github.com/repositories/42/issues/1
                 */
                url: string;
                /** Format: uri */
                repository_url: string;
                labels_url: string;
                /** Format: uri */
                comments_url: string;
                /** Format: uri */
                events_url: string;
                /** Format: uri */
                html_url: string;
                /**
                 * @description Number uniquely identifying the issue within its repository
                 * @example 42
                 */
                number: number;
                /**
                 * @description State of the issue; either 'open' or 'closed'
                 * @example open
                 */
                state: string;
                /**
                 * @description The reason for the current state
                 * @example not_planned
                 */
                state_reason?: string | null;
                /**
                 * @description Title of the issue
                 * @example Widget creation fails in Safari on OS X 10.8
                 */
                title: string;
                /**
                 * @description Contents of the issue
                 * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
                 */
                body?: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
                 * @example [
                 *   "bug",
                 *   "registration"
                 * ]
                 */
                labels: OneOf<
                  [
                    string,
                    {
                      /** Format: int64 */
                      id?: number;
                      node_id?: string;
                      /** Format: uri */
                      url?: string;
                      name?: string;
                      description?: string | null;
                      color?: string | null;
                      default?: boolean;
                    }
                  ]
                >[];
                /**
                 * Simple User
                 * @description Simple User
                 */
                assignee: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                assignees?:
                  | {
                      name?: string | null;
                      email?: string | null;
                      /** @example octocat */
                      login: string;
                      /** @example 1 */
                      id: number;
                      /** @example MDQ6VXNlcjE= */
                      node_id: string;
                      /**
                       * Format: uri
                       * @example https://github.com/images/error/octocat_happy.gif
                       */
                      avatar_url: string;
                      /** @example 41d064eb2195891e12d0413f63227ea7 */
                      gravatar_id: string | null;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat
                       */
                      url: string;
                      /**
                       * Format: uri
                       * @example https://github.com/octocat
                       */
                      html_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/followers
                       */
                      followers_url: string;
                      /** @example https://api.github.com/users/octocat/following{/other_user} */
                      following_url: string;
                      /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                      gists_url: string;
                      /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                      starred_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/subscriptions
                       */
                      subscriptions_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/orgs
                       */
                      organizations_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/repos
                       */
                      repos_url: string;
                      /** @example https://api.github.com/users/octocat/events{/privacy} */
                      events_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/received_events
                       */
                      received_events_url: string;
                      /** @example User */
                      type: string;
                      site_admin: boolean;
                      /** @example "2020-07-09T00:17:55Z" */
                      starred_at?: string;
                    }[]
                  | null;
                /**
                 * Milestone
                 * @description A collection of related issues and pull requests.
                 */
                milestone: {
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World/milestones/v1.0
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                   */
                  labels_url: string;
                  /** @example 1002604 */
                  id: number;
                  /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                  node_id: string;
                  /**
                   * @description The number of the milestone.
                   * @example 42
                   */
                  number: number;
                  /**
                   * @description The state of the milestone.
                   * @default open
                   * @example open
                   * @enum {string}
                   */
                  state: "open" | "closed";
                  /**
                   * @description The title of the milestone.
                   * @example v1.0
                   */
                  title: string;
                  /** @example Tracking milestone for version 1.0 */
                  description: string | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  creator: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /** @example 4 */
                  open_issues: number;
                  /** @example 8 */
                  closed_issues: number;
                  /**
                   * Format: date-time
                   * @example 2011-04-10T20:09:31Z
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2014-03-03T18:58:10Z
                   */
                  updated_at: string;
                  /**
                   * Format: date-time
                   * @example 2013-02-12T13:22:01Z
                   */
                  closed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2012-10-09T23:39:01Z
                   */
                  due_on: string | null;
                } | null;
                locked: boolean;
                active_lock_reason?: string | null;
                comments: number;
                pull_request?: {
                  /** Format: date-time */
                  merged_at?: string | null;
                  /** Format: uri */
                  diff_url: string | null;
                  /** Format: uri */
                  html_url: string | null;
                  /** Format: uri */
                  patch_url: string | null;
                  /** Format: uri */
                  url: string | null;
                };
                /** Format: date-time */
                closed_at: string | null;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
                draft?: boolean;
                /**
                 * Simple User
                 * @description Simple User
                 */
                closed_by?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                body_html?: string;
                body_text?: string;
                /** Format: uri */
                timeline_url?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                };
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              /**
               * Issue Comment
               * @description Comments provide a way for people to collaborate on an issue.
               */
              comment?: {
                /**
                 * @description Unique identifier of the issue comment
                 * @example 42
                 */
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue comment
                 * @example https://api.github.com/repositories/42/issues/comments/1
                 */
                url: string;
                /**
                 * @description Contents of the issue comment
                 * @example What version of Safari were you using when you observed this bug?
                 */
                body?: string;
                body_text?: string;
                body_html?: string;
                /** Format: uri */
                html_url: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                updated_at: string;
                /** Format: uri */
                issue_url: string;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              pages?: {
                page_name?: string;
                title?: string;
                summary?: string | null;
                action?: string;
                sha?: string;
                html_url?: string;
              }[];
            };
            public: boolean;
            /** Format: date-time */
            created_at: string | null;
          }[];
        };
      };
    };
  };
  /** List forks */
  "repos/list-forks": {
    parameters: {
      query: {
        /** @description The sort order. Can be either `newest`, `oldest`, or `stargazers`. */
        sort?: "newest" | "oldest" | "stargazers" | "watchers";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
          "application/scim+json": {
            message?: string | null;
            documentation_url?: string | null;
            detail?: string | null;
            status?: number;
            scimType?: string | null;
            schemas?: string[];
          };
        };
      };
    };
  };
  /**
   * Create a fork
   * @description Create a fork for the authenticated user.
   *
   * **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub AE Support](https://support.github.com/contact?tags=dotcom-rest-api).
   */
  "repos/create-fork": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Optional parameter to specify the organization name if forking into an organization. */
          organization?: string;
        } | null;
      };
    };
    responses: {
      /** @description Response */
      202: {
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /** @example master */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /** @example true */
            is_template?: boolean;
            /**
             * @example [
             *   "octocat",
             *   "atom",
             *   "electron",
             *   "API"
             * ]
             */
            topics?: string[];
            /** @example true */
            has_issues: boolean;
            /** @example true */
            has_projects: boolean;
            /** @example true */
            has_wiki: boolean;
            has_pages: boolean;
            /** @example true */
            has_downloads: boolean;
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @example public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string;
            permissions?: {
              admin: boolean;
              maintain?: boolean;
              push: boolean;
              triage?: boolean;
              pull: boolean;
            };
            /** @example true */
            allow_rebase_merge?: boolean;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string | null;
            /** @example true */
            allow_squash_merge?: boolean;
            /** @example false */
            allow_auto_merge?: boolean;
            /** @example false */
            delete_branch_on_merge?: boolean;
            /** @example true */
            allow_merge_commit?: boolean;
            /** @example true */
            allow_update_branch?: boolean;
            /** @default false */
            use_squash_pr_title_as_default?: boolean;
            /** @example true */
            allow_forking?: boolean;
            /** @example 42 */
            subscribers_count: number;
            /** @example 0 */
            network_count: number;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Repository
             * @description A git repository
             */
            parent?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * Repository
             * @description A git repository
             */
            source?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            forks: number;
            master_branch?: string;
            open_issues: number;
            watchers: number;
            /**
             * @description Whether anonymous git access is allowed.
             * @default true
             */
            anonymous_access_enabled?: boolean;
            /**
             * Code Of Conduct Simple
             * @description Code of Conduct Simple
             */
            code_of_conduct?: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/github/docs/community/code_of_conduct
               */
              url: string;
              /** @example citizen_code_of_conduct */
              key: string;
              /** @example Citizen Code of Conduct */
              name: string;
              /**
               * Format: uri
               * @example https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
               */
              html_url: string | null;
            };
            security_and_analysis?: {
              advanced_security?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
              secret_scanning_push_protection?: {
                /** @enum {string} */
                status?: "enabled" | "disabled";
              };
            } | null;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
          "application/scim+json": {
            message?: string | null;
            documentation_url?: string | null;
            detail?: string | null;
            status?: number;
            scimType?: string | null;
            schemas?: string[];
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * List repository invitations
   * @description When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.
   */
  "repos/list-invitations": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository invitation.
             * @example 42
             */
            id: number;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            invitee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            inviter: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The permission associated with the invitation.
             * @example read
             * @enum {string}
             */
            permissions: "read" | "write" | "admin" | "triage" | "maintain";
            /**
             * Format: date-time
             * @example 2016-06-13T14:52:50-05:00
             */
            created_at: string;
            /** @description Whether or not the invitation has expired */
            expired?: boolean;
            /**
             * @description URL for the repository invitation
             * @example https://api.github.com/user/repository-invitations/1
             */
            url: string;
            /** @example https://github.com/octocat/Hello-World/invitations */
            html_url: string;
            node_id: string;
          }[];
        };
      };
    };
  };
  /** Update a repository invitation */
  "repos/update-invitation": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the invitation. */
        invitation_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
           * @enum {string}
           */
          permissions?: "read" | "write" | "maintain" | "triage" | "admin";
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository invitation.
             * @example 42
             */
            id: number;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            invitee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            inviter: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The permission associated with the invitation.
             * @example read
             * @enum {string}
             */
            permissions: "read" | "write" | "admin" | "triage" | "maintain";
            /**
             * Format: date-time
             * @example 2016-06-13T14:52:50-05:00
             */
            created_at: string;
            /** @description Whether or not the invitation has expired */
            expired?: boolean;
            /**
             * @description URL for the repository invitation
             * @example https://api.github.com/user/repository-invitations/1
             */
            url: string;
            /** @example https://github.com/octocat/Hello-World/invitations */
            html_url: string;
            node_id: string;
          };
        };
      };
    };
  };
  /**
   * List repository issues
   * @description List issues in a repository.
   *
   * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
   * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
   * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
   * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
   */
  "issues/list-for-repo": {
    parameters: {
      query: {
        /** @description If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned. */
        milestone?: string;
        /** @description Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`. */
        state?: "open" | "closed" | "all";
        /** @description Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user. */
        assignee?: string;
        /** @description The user that created the issue. */
        creator?: string;
        /** @description A user that's mentioned in the issue. */
        mentioned?: string;
        /** @description A list of comma separated label names. Example: `bug,ui,@high` */
        labels?: string;
        /** @description What to sort results by. Can be either `created`, `updated`, `comments`. */
        sort?: "created" | "updated" | "comments";
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          }[];
        };
      };
      /** @description Moved permanently */
      301: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Create an issue
   * @description Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.
   *
   * This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
   */
  "issues/create": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The title of the issue. */
          title: string | number;
          /** @description The contents of the issue. */
          body?: string;
          /** @description Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_ */
          assignee?: string | null;
          milestone?: string | number;
          /** @description Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._ */
          labels?: OneOf<
            [
              string,
              {
                id?: number;
                name?: string;
                description?: string | null;
                color?: string | null;
              }
            ]
          >[];
          /** @description Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._ */
          assignees?: string[];
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World/issues/1347 */
          Location?: string;
        };
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Gone */
      410: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /** List issue events for a repository */
  "issues/list-events-for-repo": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1 */
            id: number;
            /** @example MDEwOklzc3VlRXZlbnQx */
            node_id: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/events/1
             */
            url: string;
            /**
             * Simple User
             * @description Simple User
             */
            actor: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example closed */
            event: string;
            /** @example 6dcb09b5b57875f334f61aebed695e2e4193db5e */
            commit_id: string | null;
            /** @example https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e */
            commit_url: string | null;
            /**
             * Format: date-time
             * @example 2011-04-14T16:00:49Z
             */
            created_at: string;
            /**
             * Issue
             * @description Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
             */
            issue?: {
              id: number;
              node_id: string;
              /**
               * Format: uri
               * @description URL for the issue
               * @example https://api.github.com/repositories/42/issues/1
               */
              url: string;
              /** Format: uri */
              repository_url: string;
              labels_url: string;
              /** Format: uri */
              comments_url: string;
              /** Format: uri */
              events_url: string;
              /** Format: uri */
              html_url: string;
              /**
               * @description Number uniquely identifying the issue within its repository
               * @example 42
               */
              number: number;
              /**
               * @description State of the issue; either 'open' or 'closed'
               * @example open
               */
              state: string;
              /**
               * @description The reason for the current state
               * @example not_planned
               */
              state_reason?: string | null;
              /**
               * @description Title of the issue
               * @example Widget creation fails in Safari on OS X 10.8
               */
              title: string;
              /**
               * @description Contents of the issue
               * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
               */
              body?: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
               * @example [
               *   "bug",
               *   "registration"
               * ]
               */
              labels: OneOf<
                [
                  string,
                  {
                    /** Format: int64 */
                    id?: number;
                    node_id?: string;
                    /** Format: uri */
                    url?: string;
                    name?: string;
                    description?: string | null;
                    color?: string | null;
                    default?: boolean;
                  }
                ]
              >[];
              /**
               * Simple User
               * @description Simple User
               */
              assignee: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              assignees?:
                | {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  }[]
                | null;
              /**
               * Milestone
               * @description A collection of related issues and pull requests.
               */
              milestone: {
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World/milestones/v1.0
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                 */
                labels_url: string;
                /** @example 1002604 */
                id: number;
                /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                node_id: string;
                /**
                 * @description The number of the milestone.
                 * @example 42
                 */
                number: number;
                /**
                 * @description The state of the milestone.
                 * @default open
                 * @example open
                 * @enum {string}
                 */
                state: "open" | "closed";
                /**
                 * @description The title of the milestone.
                 * @example v1.0
                 */
                title: string;
                /** @example Tracking milestone for version 1.0 */
                description: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                creator: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /** @example 4 */
                open_issues: number;
                /** @example 8 */
                closed_issues: number;
                /**
                 * Format: date-time
                 * @example 2011-04-10T20:09:31Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2014-03-03T18:58:10Z
                 */
                updated_at: string;
                /**
                 * Format: date-time
                 * @example 2013-02-12T13:22:01Z
                 */
                closed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2012-10-09T23:39:01Z
                 */
                due_on: string | null;
              } | null;
              locked: boolean;
              active_lock_reason?: string | null;
              comments: number;
              pull_request?: {
                /** Format: date-time */
                merged_at?: string | null;
                /** Format: uri */
                diff_url: string | null;
                /** Format: uri */
                html_url: string | null;
                /** Format: uri */
                patch_url: string | null;
                /** Format: uri */
                url: string | null;
              };
              /** Format: date-time */
              closed_at: string | null;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              draft?: boolean;
              /**
               * Simple User
               * @description Simple User
               */
              closed_by?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              body_html?: string;
              body_text?: string;
              /** Format: uri */
              timeline_url?: string;
              /**
               * Repository
               * @description A git repository
               */
              repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              /**
               * GitHub app
               * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
               */
              performed_via_github_app?: {
                /**
                 * @description Unique identifier of the GitHub app
                 * @example 37
                 */
                id: number;
                /**
                 * @description The slug name of the GitHub app
                 * @example probot-owners
                 */
                slug?: string;
                /** @example MDExOkludGVncmF0aW9uMQ== */
                node_id: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description The name of the GitHub app
                 * @example Probot Owners
                 */
                name: string;
                /** @example The description of the app. */
                description: string | null;
                /**
                 * Format: uri
                 * @example https://example.com
                 */
                external_url: string;
                /**
                 * Format: uri
                 * @example https://github.com/apps/super-ci
                 */
                html_url: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                updated_at: string;
                /**
                 * @description The set of permissions for the GitHub app
                 * @example {
                 *   "issues": "read",
                 *   "deployments": "write"
                 * }
                 */
                permissions: {
                  issues?: string;
                  checks?: string;
                  metadata?: string;
                  contents?: string;
                  deployments?: string;
                  [key: string]: string | undefined;
                };
                /**
                 * @description The list of events for the GitHub app
                 * @example [
                 *   "label",
                 *   "deployment"
                 * ]
                 */
                events: string[];
                /**
                 * @description The number of installations associated with the GitHub app
                 * @example 5
                 */
                installations_count?: number;
                /** @example "Iv1.25b5d1e65ffc4022" */
                client_id?: string;
                /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                client_secret?: string;
                /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                webhook_secret?: string | null;
                /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                pem?: string;
              } | null;
              /**
               * author_association
               * @description How the author is associated with the repository.
               * @example OWNER
               * @enum {string}
               */
              author_association:
                | "COLLABORATOR"
                | "CONTRIBUTOR"
                | "FIRST_TIMER"
                | "FIRST_TIME_CONTRIBUTOR"
                | "MANNEQUIN"
                | "MEMBER"
                | "NONE"
                | "OWNER";
              /** Reaction Rollup */
              reactions?: {
                /** Format: uri */
                url: string;
                total_count: number;
                "+1": number;
                "-1": number;
                laugh: number;
                confused: number;
                heart: number;
                hooray: number;
                eyes: number;
                rocket: number;
              };
            } | null;
            /**
             * Issue Event Label
             * @description Issue Event Label
             */
            label?: {
              name: string | null;
              color: string | null;
            };
            /**
             * Simple User
             * @description Simple User
             */
            assignee?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            assigner?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            review_requester?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            requested_reviewer?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Team
             * @description Groups of organization members that gives permissions on specified repositories.
             */
            requested_team?: {
              id: number;
              node_id: string;
              name: string;
              slug: string;
              description: string | null;
              privacy?: string;
              permission: string;
              permissions?: {
                pull: boolean;
                triage: boolean;
                push: boolean;
                maintain: boolean;
                admin: boolean;
              };
              /** Format: uri */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/orgs/rails/teams/core
               */
              html_url: string;
              members_url: string;
              /** Format: uri */
              repositories_url: string;
              /**
               * Team Simple
               * @description Groups of organization members that gives permissions on specified repositories.
               */
              parent: {
                /**
                 * @description Unique identifier of the team
                 * @example 1
                 */
                id: number;
                /** @example MDQ6VGVhbTE= */
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the team
                 * @example https://api.github.com/organizations/1/team/1
                 */
                url: string;
                /** @example https://api.github.com/organizations/1/team/1/members{/member} */
                members_url: string;
                /**
                 * @description Name of the team
                 * @example Justice League
                 */
                name: string;
                /**
                 * @description Description of the team
                 * @example A great team.
                 */
                description: string | null;
                /**
                 * @description Permission that the team will have for its repositories
                 * @example admin
                 */
                permission: string;
                /**
                 * @description The level of privacy this team should have
                 * @example closed
                 */
                privacy?: string;
                /**
                 * Format: uri
                 * @example https://github.com/orgs/rails/teams/core
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/organizations/1/team/1/repos
                 */
                repositories_url: string;
                /** @example justice-league */
                slug: string;
                /**
                 * @description Distinguished Name (DN) that team maps to within LDAP environment
                 * @example uid=example,ou=users,dc=github,dc=com
                 */
                ldap_dn?: string;
              } | null;
            };
            /** Issue Event Dismissed Review */
            dismissed_review?: {
              state: string;
              review_id: number;
              dismissal_message: string | null;
              dismissal_commit_id?: string | null;
            };
            /**
             * Issue Event Milestone
             * @description Issue Event Milestone
             */
            milestone?: {
              title: string;
            };
            /**
             * Issue Event Project Card
             * @description Issue Event Project Card
             */
            project_card?: {
              /** Format: uri */
              url: string;
              id: number;
              /** Format: uri */
              project_url: string;
              project_id: number;
              column_name: string;
              previous_column_name?: string;
            };
            /**
             * Issue Event Rename
             * @description Issue Event Rename
             */
            rename?: {
              from: string;
              to: string;
            };
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association?:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            lock_reason?: string | null;
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
          }[];
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /** Get an issue event */
  "issues/get-event": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        event_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id: number;
            /** @example MDEwOklzc3VlRXZlbnQx */
            node_id: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/events/1
             */
            url: string;
            /**
             * Simple User
             * @description Simple User
             */
            actor: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example closed */
            event: string;
            /** @example 6dcb09b5b57875f334f61aebed695e2e4193db5e */
            commit_id: string | null;
            /** @example https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e */
            commit_url: string | null;
            /**
             * Format: date-time
             * @example 2011-04-14T16:00:49Z
             */
            created_at: string;
            /**
             * Issue
             * @description Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
             */
            issue?: {
              id: number;
              node_id: string;
              /**
               * Format: uri
               * @description URL for the issue
               * @example https://api.github.com/repositories/42/issues/1
               */
              url: string;
              /** Format: uri */
              repository_url: string;
              labels_url: string;
              /** Format: uri */
              comments_url: string;
              /** Format: uri */
              events_url: string;
              /** Format: uri */
              html_url: string;
              /**
               * @description Number uniquely identifying the issue within its repository
               * @example 42
               */
              number: number;
              /**
               * @description State of the issue; either 'open' or 'closed'
               * @example open
               */
              state: string;
              /**
               * @description The reason for the current state
               * @example not_planned
               */
              state_reason?: string | null;
              /**
               * @description Title of the issue
               * @example Widget creation fails in Safari on OS X 10.8
               */
              title: string;
              /**
               * @description Contents of the issue
               * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
               */
              body?: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
               * @example [
               *   "bug",
               *   "registration"
               * ]
               */
              labels: OneOf<
                [
                  string,
                  {
                    /** Format: int64 */
                    id?: number;
                    node_id?: string;
                    /** Format: uri */
                    url?: string;
                    name?: string;
                    description?: string | null;
                    color?: string | null;
                    default?: boolean;
                  }
                ]
              >[];
              /**
               * Simple User
               * @description Simple User
               */
              assignee: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              assignees?:
                | {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  }[]
                | null;
              /**
               * Milestone
               * @description A collection of related issues and pull requests.
               */
              milestone: {
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World/milestones/v1.0
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                 */
                labels_url: string;
                /** @example 1002604 */
                id: number;
                /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                node_id: string;
                /**
                 * @description The number of the milestone.
                 * @example 42
                 */
                number: number;
                /**
                 * @description The state of the milestone.
                 * @default open
                 * @example open
                 * @enum {string}
                 */
                state: "open" | "closed";
                /**
                 * @description The title of the milestone.
                 * @example v1.0
                 */
                title: string;
                /** @example Tracking milestone for version 1.0 */
                description: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                creator: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /** @example 4 */
                open_issues: number;
                /** @example 8 */
                closed_issues: number;
                /**
                 * Format: date-time
                 * @example 2011-04-10T20:09:31Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2014-03-03T18:58:10Z
                 */
                updated_at: string;
                /**
                 * Format: date-time
                 * @example 2013-02-12T13:22:01Z
                 */
                closed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2012-10-09T23:39:01Z
                 */
                due_on: string | null;
              } | null;
              locked: boolean;
              active_lock_reason?: string | null;
              comments: number;
              pull_request?: {
                /** Format: date-time */
                merged_at?: string | null;
                /** Format: uri */
                diff_url: string | null;
                /** Format: uri */
                html_url: string | null;
                /** Format: uri */
                patch_url: string | null;
                /** Format: uri */
                url: string | null;
              };
              /** Format: date-time */
              closed_at: string | null;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              draft?: boolean;
              /**
               * Simple User
               * @description Simple User
               */
              closed_by?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              body_html?: string;
              body_text?: string;
              /** Format: uri */
              timeline_url?: string;
              /**
               * Repository
               * @description A git repository
               */
              repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              /**
               * GitHub app
               * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
               */
              performed_via_github_app?: {
                /**
                 * @description Unique identifier of the GitHub app
                 * @example 37
                 */
                id: number;
                /**
                 * @description The slug name of the GitHub app
                 * @example probot-owners
                 */
                slug?: string;
                /** @example MDExOkludGVncmF0aW9uMQ== */
                node_id: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description The name of the GitHub app
                 * @example Probot Owners
                 */
                name: string;
                /** @example The description of the app. */
                description: string | null;
                /**
                 * Format: uri
                 * @example https://example.com
                 */
                external_url: string;
                /**
                 * Format: uri
                 * @example https://github.com/apps/super-ci
                 */
                html_url: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                updated_at: string;
                /**
                 * @description The set of permissions for the GitHub app
                 * @example {
                 *   "issues": "read",
                 *   "deployments": "write"
                 * }
                 */
                permissions: {
                  issues?: string;
                  checks?: string;
                  metadata?: string;
                  contents?: string;
                  deployments?: string;
                  [key: string]: string | undefined;
                };
                /**
                 * @description The list of events for the GitHub app
                 * @example [
                 *   "label",
                 *   "deployment"
                 * ]
                 */
                events: string[];
                /**
                 * @description The number of installations associated with the GitHub app
                 * @example 5
                 */
                installations_count?: number;
                /** @example "Iv1.25b5d1e65ffc4022" */
                client_id?: string;
                /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                client_secret?: string;
                /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                webhook_secret?: string | null;
                /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                pem?: string;
              } | null;
              /**
               * author_association
               * @description How the author is associated with the repository.
               * @example OWNER
               * @enum {string}
               */
              author_association:
                | "COLLABORATOR"
                | "CONTRIBUTOR"
                | "FIRST_TIMER"
                | "FIRST_TIME_CONTRIBUTOR"
                | "MANNEQUIN"
                | "MEMBER"
                | "NONE"
                | "OWNER";
              /** Reaction Rollup */
              reactions?: {
                /** Format: uri */
                url: string;
                total_count: number;
                "+1": number;
                "-1": number;
                laugh: number;
                confused: number;
                heart: number;
                hooray: number;
                eyes: number;
                rocket: number;
              };
            } | null;
            /**
             * Issue Event Label
             * @description Issue Event Label
             */
            label?: {
              name: string | null;
              color: string | null;
            };
            /**
             * Simple User
             * @description Simple User
             */
            assignee?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            assigner?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            review_requester?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            requested_reviewer?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Team
             * @description Groups of organization members that gives permissions on specified repositories.
             */
            requested_team?: {
              id: number;
              node_id: string;
              name: string;
              slug: string;
              description: string | null;
              privacy?: string;
              permission: string;
              permissions?: {
                pull: boolean;
                triage: boolean;
                push: boolean;
                maintain: boolean;
                admin: boolean;
              };
              /** Format: uri */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/orgs/rails/teams/core
               */
              html_url: string;
              members_url: string;
              /** Format: uri */
              repositories_url: string;
              /**
               * Team Simple
               * @description Groups of organization members that gives permissions on specified repositories.
               */
              parent: {
                /**
                 * @description Unique identifier of the team
                 * @example 1
                 */
                id: number;
                /** @example MDQ6VGVhbTE= */
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the team
                 * @example https://api.github.com/organizations/1/team/1
                 */
                url: string;
                /** @example https://api.github.com/organizations/1/team/1/members{/member} */
                members_url: string;
                /**
                 * @description Name of the team
                 * @example Justice League
                 */
                name: string;
                /**
                 * @description Description of the team
                 * @example A great team.
                 */
                description: string | null;
                /**
                 * @description Permission that the team will have for its repositories
                 * @example admin
                 */
                permission: string;
                /**
                 * @description The level of privacy this team should have
                 * @example closed
                 */
                privacy?: string;
                /**
                 * Format: uri
                 * @example https://github.com/orgs/rails/teams/core
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/organizations/1/team/1/repos
                 */
                repositories_url: string;
                /** @example justice-league */
                slug: string;
                /**
                 * @description Distinguished Name (DN) that team maps to within LDAP environment
                 * @example uid=example,ou=users,dc=github,dc=com
                 */
                ldap_dn?: string;
              } | null;
            };
            /** Issue Event Dismissed Review */
            dismissed_review?: {
              state: string;
              review_id: number;
              dismissal_message: string | null;
              dismissal_commit_id?: string | null;
            };
            /**
             * Issue Event Milestone
             * @description Issue Event Milestone
             */
            milestone?: {
              title: string;
            };
            /**
             * Issue Event Project Card
             * @description Issue Event Project Card
             */
            project_card?: {
              /** Format: uri */
              url: string;
              id: number;
              /** Format: uri */
              project_url: string;
              project_id: number;
              column_name: string;
              previous_column_name?: string;
            };
            /**
             * Issue Event Rename
             * @description Issue Event Rename
             */
            rename?: {
              from: string;
              to: string;
            };
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association?:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            lock_reason?: string | null;
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Gone */
      410: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Get an issue
   * @description The API returns a [`301 Moved Permanently` status](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was
   * [transferred](https://docs.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If
   * the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
   * returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read
   * access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe
   * to the [`issues`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#issues) webhook.
   *
   * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
   * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
   * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
   * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
   */
  "issues/get": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies the issue. */
        issue_number: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
      /** @description Moved permanently */
      301: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Gone */
      410: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Update an issue
   * @description Issue owners and users with push access can edit an issue.
   */
  "issues/update": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies the issue. */
        issue_number: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description The title of the issue. */
          title?: string | number;
          /** @description The contents of the issue. */
          body?: string | null;
          /** @description Login for the user that this issue should be assigned to. **This field is deprecated.** */
          assignee?: string | null;
          /**
           * @description State of the issue. Either `open` or `closed`.
           * @enum {string}
           */
          state?: "open" | "closed";
          milestone?: string | number;
          /** @description Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._ */
          labels?: OneOf<
            [
              string,
              {
                id?: number;
                name?: string;
                description?: string | null;
                color?: string | null;
              }
            ]
          >[];
          /** @description Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._ */
          assignees?: string[];
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
      /** @description Moved permanently */
      301: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Gone */
      410: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Add assignees to an issue
   * @description Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.
   */
  "issues/add-assignees": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies the issue. */
        issue_number: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._ */
          assignees?: string[];
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
    };
  };
  /**
   * List repository notifications for the authenticated user
   * @description List all notifications for the current user.
   */
  "activity/list-repo-notifications-for-authenticated-user": {
    parameters: {
      query: {
        /** @description If `true`, show notifications marked as read. */
        all?: boolean;
        /** @description If `true`, only shows notifications in which the user is directly participating or mentioned. */
        participating?: boolean;
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        before?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: string;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            subject: {
              title: string;
              url: string;
              latest_comment_url: string;
              type: string;
            };
            reason: string;
            unread: boolean;
            updated_at: string;
            last_read_at: string | null;
            url: string;
            /** @example https://api.github.com/notifications/threads/2/subscription */
            subscription_url: string;
          }[];
        };
      };
    };
  };
  /**
   * List pull requests
   * @description Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
   */
  "pulls/list": {
    parameters: {
      query: {
        /** @description Either `open`, `closed`, or `all` to filter by state. */
        state?: "open" | "closed" | "all";
        /** @description Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`. */
        head?: string;
        /** @description Filter pulls by base branch name. Example: `gh-pages`. */
        base?: string;
        /** @description What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month). */
        sort?: "created" | "updated" | "popularity" | "long-running";
        /** @description The direction of the sort. Can be either `asc` or `desc`. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`. */
        direction?: "asc" | "desc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347
             */
            url: string;
            /** @example 1 */
            id: number;
            /** @example MDExOlB1bGxSZXF1ZXN0MQ== */
            node_id: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347
             */
            html_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.diff
             */
            diff_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.patch
             */
            patch_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347
             */
            issue_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
             */
            commits_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
             */
            review_comments_url: string;
            /** @example https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number} */
            review_comment_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
             */
            comments_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
             */
            statuses_url: string;
            /** @example 1347 */
            number: number;
            /** @example open */
            state: string;
            /** @example true */
            locked: boolean;
            /** @example new-feature */
            title: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example Please pull these awesome changes */
            body: string | null;
            labels: {
              /** Format: int64 */
              id: number;
              node_id: string;
              url: string;
              name: string;
              description: string;
              color: string;
              default: boolean;
            }[];
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            /** @example too heated */
            active_lock_reason?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            updated_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            closed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            merged_at: string | null;
            /** @example e5bd3914e2e596debea16f433f57875b5b90bcd6 */
            merge_commit_sha: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_reviewers?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_teams?:
              | {
                  id: number;
                  node_id: string;
                  name: string;
                  slug: string;
                  description: string | null;
                  privacy?: string;
                  permission: string;
                  permissions?: {
                    pull: boolean;
                    triage: boolean;
                    push: boolean;
                    maintain: boolean;
                    admin: boolean;
                  };
                  /** Format: uri */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/orgs/rails/teams/core
                   */
                  html_url: string;
                  members_url: string;
                  /** Format: uri */
                  repositories_url: string;
                  /**
                   * Team Simple
                   * @description Groups of organization members that gives permissions on specified repositories.
                   */
                  parent: {
                    /**
                     * @description Unique identifier of the team
                     * @example 1
                     */
                    id: number;
                    /** @example MDQ6VGVhbTE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @description URL for the team
                     * @example https://api.github.com/organizations/1/team/1
                     */
                    url: string;
                    /** @example https://api.github.com/organizations/1/team/1/members{/member} */
                    members_url: string;
                    /**
                     * @description Name of the team
                     * @example Justice League
                     */
                    name: string;
                    /**
                     * @description Description of the team
                     * @example A great team.
                     */
                    description: string | null;
                    /**
                     * @description Permission that the team will have for its repositories
                     * @example admin
                     */
                    permission: string;
                    /**
                     * @description The level of privacy this team should have
                     * @example closed
                     */
                    privacy?: string;
                    /**
                     * Format: uri
                     * @example https://github.com/orgs/rails/teams/core
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/organizations/1/team/1/repos
                     */
                    repositories_url: string;
                    /** @example justice-league */
                    slug: string;
                    /**
                     * @description Distinguished Name (DN) that team maps to within LDAP environment
                     * @example uid=example,ou=users,dc=github,dc=com
                     */
                    ldap_dn?: string;
                  } | null;
                }[]
              | null;
            head: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            base: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            _links: {
              /**
               * Link
               * @description Hypermedia Link
               */
              comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              commits: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              statuses: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              html: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              issue: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comment: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              self: {
                href: string;
              };
            };
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /**
             * Auto merge
             * @description The status of auto merging a pull request.
             */
            auto_merge: {
              /**
               * Simple User
               * @description Simple User
               */
              enabled_by: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description The merge method to use.
               * @enum {string}
               */
              merge_method: "merge" | "squash" | "rebase";
              /** @description Title for the merge commit message. */
              commit_title: string;
              /** @description Commit message for the merge commit. */
              commit_message: string;
            } | null;
            /**
             * @description Indicates whether or not the pull request is a draft.
             * @example false
             */
            draft?: boolean;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Request reviewers for a pull request
   * @description This endpoint triggers [notifications](https://docs.github.com/github-ae@latest/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
   */
  "pulls/request-reviewers": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies the pull request. */
        pull_number: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description An array of user `login`s that will be requested. */
          reviewers?: string[];
          /** @description An array of team `slug`s that will be requested. */
          team_reviewers?: string[];
        } & (Record<string, never> | Record<string, never>);
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347
             */
            url: string;
            /** @example 1 */
            id: number;
            /** @example MDExOlB1bGxSZXF1ZXN0MQ== */
            node_id: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347
             */
            html_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.diff
             */
            diff_url: string;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World/pull/1347.patch
             */
            patch_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347
             */
            issue_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
             */
            commits_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
             */
            review_comments_url: string;
            /** @example https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number} */
            review_comment_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
             */
            comments_url: string;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
             */
            statuses_url: string;
            /** @example 1347 */
            number: number;
            /** @example open */
            state: string;
            /** @example true */
            locked: boolean;
            /** @example new-feature */
            title: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example Please pull these awesome changes */
            body: string | null;
            labels: {
              /** Format: int64 */
              id: number;
              node_id: string;
              url: string;
              name: string;
              description: string;
              color: string;
              default: boolean;
            }[];
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            /** @example too heated */
            active_lock_reason?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            updated_at: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            closed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            merged_at: string | null;
            /** @example e5bd3914e2e596debea16f433f57875b5b90bcd6 */
            merge_commit_sha: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_reviewers?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            requested_teams?:
              | {
                  id: number;
                  node_id: string;
                  name: string;
                  slug: string;
                  description: string | null;
                  privacy?: string;
                  permission: string;
                  permissions?: {
                    pull: boolean;
                    triage: boolean;
                    push: boolean;
                    maintain: boolean;
                    admin: boolean;
                  };
                  /** Format: uri */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/orgs/rails/teams/core
                   */
                  html_url: string;
                  members_url: string;
                  /** Format: uri */
                  repositories_url: string;
                  /**
                   * Team Simple
                   * @description Groups of organization members that gives permissions on specified repositories.
                   */
                  parent: {
                    /**
                     * @description Unique identifier of the team
                     * @example 1
                     */
                    id: number;
                    /** @example MDQ6VGVhbTE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @description URL for the team
                     * @example https://api.github.com/organizations/1/team/1
                     */
                    url: string;
                    /** @example https://api.github.com/organizations/1/team/1/members{/member} */
                    members_url: string;
                    /**
                     * @description Name of the team
                     * @example Justice League
                     */
                    name: string;
                    /**
                     * @description Description of the team
                     * @example A great team.
                     */
                    description: string | null;
                    /**
                     * @description Permission that the team will have for its repositories
                     * @example admin
                     */
                    permission: string;
                    /**
                     * @description The level of privacy this team should have
                     * @example closed
                     */
                    privacy?: string;
                    /**
                     * Format: uri
                     * @example https://github.com/orgs/rails/teams/core
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/organizations/1/team/1/repos
                     */
                    repositories_url: string;
                    /** @example justice-league */
                    slug: string;
                    /**
                     * @description Distinguished Name (DN) that team maps to within LDAP environment
                     * @example uid=example,ou=users,dc=github,dc=com
                     */
                    ldap_dn?: string;
                  } | null;
                }[]
              | null;
            head: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            base: {
              label: string;
              ref: string;
              /**
               * Repository
               * @description A git repository
               */
              repo: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              sha: string;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            };
            _links: {
              /**
               * Link
               * @description Hypermedia Link
               */
              comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              commits: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              statuses: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              html: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              issue: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comments: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              review_comment: {
                href: string;
              };
              /**
               * Link
               * @description Hypermedia Link
               */
              self: {
                href: string;
              };
            };
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /**
             * Auto merge
             * @description The status of auto merging a pull request.
             */
            auto_merge: {
              /**
               * Simple User
               * @description Simple User
               */
              enabled_by: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description The merge method to use.
               * @enum {string}
               */
              merge_method: "merge" | "squash" | "rebase";
              /** @description Title for the merge commit message. */
              commit_title: string;
              /** @description Commit message for the merge commit. */
              commit_message: string;
            } | null;
            /**
             * @description Indicates whether or not the pull request is a draft.
             * @example false
             */
            draft?: boolean;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Unprocessable Entity if user is not a collaborator */
      422: never;
    };
  };
  /**
   * Create a release
   * @description Users with push access to the repository can create a release.
   *
   * This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/github-ae@latest/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
   */
  "repos/create-release": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The name of the tag. */
          tag_name: string;
          /** @description Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`). */
          target_commitish?: string;
          /** @description The name of the release. */
          name?: string;
          /** @description Text describing the contents of the tag. */
          body?: string;
          /**
           * @description `true` to create a draft (unpublished) release, `false` to create a published one.
           * @default false
           */
          draft?: boolean;
          /**
           * @description `true` to identify the release as a prerelease. `false` to identify the release as a full release.
           * @default false
           */
          prerelease?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World/releases/1 */
          Location?: string;
        };
        content: {
          "application/json": {
            /** Format: uri */
            url: string;
            /** Format: uri */
            html_url: string;
            /** Format: uri */
            assets_url: string;
            upload_url: string;
            /** Format: uri */
            tarball_url: string | null;
            /** Format: uri */
            zipball_url: string | null;
            id: number;
            node_id: string;
            /**
             * @description The name of the tag.
             * @example v1.0.0
             */
            tag_name: string;
            /**
             * @description Specifies the commitish value that determines where the Git tag is created from.
             * @example master
             */
            target_commitish: string;
            name: string | null;
            body?: string | null;
            /**
             * @description true to create a draft (unpublished) release, false to create a published one.
             * @example false
             */
            draft: boolean;
            /**
             * @description Whether to identify the release as a prerelease or a full release.
             * @example false
             */
            prerelease: boolean;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            published_at: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            author: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            assets: {
              /** Format: uri */
              url: string;
              /** Format: uri */
              browser_download_url: string;
              id: number;
              node_id: string;
              /**
               * @description The file name of the asset.
               * @example Team Environment
               */
              name: string;
              label: string | null;
              /**
               * @description State of the release asset.
               * @enum {string}
               */
              state: "uploaded" | "open";
              content_type: string;
              size: number;
              download_count: number;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              /**
               * Simple User
               * @description Simple User
               */
              uploader: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            }[];
            body_html?: string;
            body_text?: string;
            mentions_count?: number;
            /**
             * Format: uri
             * @description The URL of the release discussion.
             */
            discussion_url?: string;
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Update a release
   * @description Users with push access to the repository can edit a release.
   */
  "repos/update-release": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the release. */
        release_id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description The name of the tag. */
          tag_name?: string;
          /** @description Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`). */
          target_commitish?: string;
          /** @description The name of the release. */
          name?: string;
          /** @description Text describing the contents of the tag. */
          body?: string;
          /** @description `true` makes the release a draft, and `false` publishes the release. */
          draft?: boolean;
          /** @description `true` to identify the release as a prerelease, `false` to identify the release as a full release. */
          prerelease?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** Format: uri */
            url: string;
            /** Format: uri */
            html_url: string;
            /** Format: uri */
            assets_url: string;
            upload_url: string;
            /** Format: uri */
            tarball_url: string | null;
            /** Format: uri */
            zipball_url: string | null;
            id: number;
            node_id: string;
            /**
             * @description The name of the tag.
             * @example v1.0.0
             */
            tag_name: string;
            /**
             * @description Specifies the commitish value that determines where the Git tag is created from.
             * @example master
             */
            target_commitish: string;
            name: string | null;
            body?: string | null;
            /**
             * @description true to create a draft (unpublished) release, false to create a published one.
             * @example false
             */
            draft: boolean;
            /**
             * @description Whether to identify the release as a prerelease or a full release.
             * @example false
             */
            prerelease: boolean;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            published_at: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            author: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            assets: {
              /** Format: uri */
              url: string;
              /** Format: uri */
              browser_download_url: string;
              id: number;
              node_id: string;
              /**
               * @description The file name of the asset.
               * @example Team Environment
               */
              name: string;
              label: string | null;
              /**
               * @description State of the release asset.
               * @enum {string}
               */
              state: "uploaded" | "open";
              content_type: string;
              size: number;
              download_count: number;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              /**
               * Simple User
               * @description Simple User
               */
              uploader: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
            }[];
            body_html?: string;
            body_text?: string;
            mentions_count?: number;
            /**
             * Format: uri
             * @description The URL of the release discussion.
             */
            discussion_url?: string;
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          };
        };
      };
    };
  };
  /**
   * List reactions for a release
   * @description List the reactions to a [release](https://docs.github.com/github-ae@latest/rest/reference/repos#releases).
   */
  "reactions/list-for-release": {
    parameters: {
      query: {
        /** @description Returns a single [reaction type](https://docs.github.com/github-ae@latest/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a release. */
        content?: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The unique identifier of the release. */
        release_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1 */
            id: number;
            /** @example MDg6UmVhY3Rpb24x */
            node_id: string;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The reaction to use
             * @example heart
             * @enum {string}
             */
            content:
              | "+1"
              | "-1"
              | "laugh"
              | "confused"
              | "heart"
              | "hooray"
              | "rocket"
              | "eyes";
            /**
             * Format: date-time
             * @example 2016-05-20T20:09:31Z
             */
            created_at: string;
          }[];
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Preview header missing */
      415: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
          };
        };
      };
    };
  };
  /**
   * List secret scanning alerts for a repository
   * @description Lists secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
   *
   * GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
   */
  "secret-scanning/list-alerts-for-repo": {
    parameters: {
      query: {
        /** @description Set to `open` or `resolved` to only list secret scanning alerts in a specific state. */
        state?: "open" | "resolved";
        /**
         * @description A comma-separated list of secret types to return. By default all secret types are returned.
         * See "[Secret scanning patterns](https://docs.github.com/github-ae@latest/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)"
         * for a complete list of secret types.
         */
        secret_type?: string;
        /** @description A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are `false_positive`, `wont_fix`, `revoked`, `pattern_edited`, `pattern_deleted` or `used_in_tests`. */
        resolution?: string;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description The number of results per page (max 100). */
        per_page?: number;
      };
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number?: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            updated_at?: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url?: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url?: string;
            /**
             * Format: uri
             * @description The REST API URL of the code locations for this alert.
             */
            locations_url?: string;
            /**
             * @description Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.
             * @enum {string}
             */
            state?: "open" | "resolved";
            /**
             * @description **Required when the `state` is `resolved`.** The reason for resolving the alert.
             * @enum {string|null}
             */
            resolution?:
              | ""
              | "false_positive"
              | "wont_fix"
              | "revoked"
              | "used_in_tests"
              | null;
            /**
             * Format: date-time
             * @description The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            resolved_at?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            resolved_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @description The type of secret that secret scanning detected. */
            secret_type?: string;
            /** @description The secret that was detected. */
            secret?: string;
          }[];
        };
      };
      /** @description Repository is public or secret scanning is disabled for the repository */
      404: never;
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Get a secret scanning alert
   * @description Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
   *
   * GitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.
   */
  "secret-scanning/get-alert": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation. */
        alert_number: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number?: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            updated_at?: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url?: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url?: string;
            /**
             * Format: uri
             * @description The REST API URL of the code locations for this alert.
             */
            locations_url?: string;
            /**
             * @description Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.
             * @enum {string}
             */
            state?: "open" | "resolved";
            /**
             * @description **Required when the `state` is `resolved`.** The reason for resolving the alert.
             * @enum {string|null}
             */
            resolution?:
              | ""
              | "false_positive"
              | "wont_fix"
              | "revoked"
              | "used_in_tests"
              | null;
            /**
             * Format: date-time
             * @description The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            resolved_at?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            resolved_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @description The type of secret that secret scanning detected. */
            secret_type?: string;
            /** @description The secret that was detected. */
            secret?: string;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Repository is public, or secret scanning is disabled for the repository, or the resource is not found */
      404: never;
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Update a secret scanning alert
   * @description Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.
   *
   * GitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.
   */
  "secret-scanning/update-alert": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
        /** @description The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation. */
        alert_number: number;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.
           * @enum {string}
           */
          state: "open" | "resolved";
          /**
           * @description **Required when the `state` is `resolved`.** The reason for resolving the alert.
           * @enum {string|null}
           */
          resolution?:
            | ""
            | "false_positive"
            | "wont_fix"
            | "revoked"
            | "used_in_tests"
            | null;
        };
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @description The security alert number. */
            number?: number;
            /**
             * Format: date-time
             * @description The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            updated_at?: string;
            /**
             * Format: uri
             * @description The REST API URL of the alert resource.
             */
            url?: string;
            /**
             * Format: uri
             * @description The GitHub URL of the alert resource.
             */
            html_url?: string;
            /**
             * Format: uri
             * @description The REST API URL of the code locations for this alert.
             */
            locations_url?: string;
            /**
             * @description Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.
             * @enum {string}
             */
            state?: "open" | "resolved";
            /**
             * @description **Required when the `state` is `resolved`.** The reason for resolving the alert.
             * @enum {string|null}
             */
            resolution?:
              | ""
              | "false_positive"
              | "wont_fix"
              | "revoked"
              | "used_in_tests"
              | null;
            /**
             * Format: date-time
             * @description The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
             */
            resolved_at?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            resolved_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @description The type of secret that secret scanning detected. */
            secret_type?: string;
            /** @description The secret that was detected. */
            secret?: string;
          };
        };
      };
      /** @description Repository is public, or secret scanning is disabled for the repository, or the resource is not found */
      404: never;
      /** @description State does not match the resolution */
      422: never;
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Transfer a repository
   * @description A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).
   */
  "repos/transfer": {
    parameters: {
      path: {
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The username or organization name the repository will be transferred to. */
          new_owner: string;
          /** @description ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories. */
          team_ids?: number[];
        };
      };
    };
    responses: {
      /** @description Response */
      202: {
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          };
        };
      };
    };
  };
  /**
   * Create a repository using a template
   * @description Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/github-ae@latest/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.
   *
   * **OAuth scope requirements**
   *
   * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
   *
   * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
   * *   `repo` scope to create a private repository
   */
  "repos/create-using-template": {
    parameters: {
      path: {
        template_owner: string;
        template_repo: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization. */
          owner?: string;
          /** @description The name of the new repository. */
          name: string;
          /** @description A short description of the new repository. */
          description?: string;
          /**
           * @description Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.
           * @default false
           */
          include_all_branches?: boolean;
          /**
           * @description Either `true` to create a new private repository or `false` to create a new public one.
           * @default false
           */
          private?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            template_repository?: {
              id?: number;
              node_id?: string;
              name?: string;
              full_name?: string;
              owner?: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
              };
              private?: boolean;
              html_url?: string;
              description?: string;
              fork?: boolean;
              url?: string;
              archive_url?: string;
              assignees_url?: string;
              blobs_url?: string;
              branches_url?: string;
              collaborators_url?: string;
              comments_url?: string;
              commits_url?: string;
              compare_url?: string;
              contents_url?: string;
              contributors_url?: string;
              deployments_url?: string;
              downloads_url?: string;
              events_url?: string;
              forks_url?: string;
              git_commits_url?: string;
              git_refs_url?: string;
              git_tags_url?: string;
              git_url?: string;
              issue_comment_url?: string;
              issue_events_url?: string;
              issues_url?: string;
              keys_url?: string;
              labels_url?: string;
              languages_url?: string;
              merges_url?: string;
              milestones_url?: string;
              notifications_url?: string;
              pulls_url?: string;
              releases_url?: string;
              ssh_url?: string;
              stargazers_url?: string;
              statuses_url?: string;
              subscribers_url?: string;
              subscription_url?: string;
              tags_url?: string;
              teams_url?: string;
              trees_url?: string;
              clone_url?: string;
              mirror_url?: string;
              hooks_url?: string;
              svn_url?: string;
              homepage?: string;
              language?: string;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              pushed_at?: string;
              created_at?: string;
              updated_at?: string;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              allow_rebase_merge?: boolean;
              temp_clone_token?: string;
              allow_squash_merge?: boolean;
              allow_auto_merge?: boolean;
              delete_branch_on_merge?: boolean;
              allow_update_branch?: boolean;
              allow_merge_commit?: boolean;
              subscribers_count?: number;
              network_count?: number;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
             * @default false
             * @example false
             */
            allow_update_branch?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /** @description Whether to allow forking this repo */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            /** @example "2020-07-09T00:17:42Z" */
            starred_at?: string;
          };
        };
      };
    };
  };
  /**
   * Search code
   * @description Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
   *
   * When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
   *
   * For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:
   *
   * `q=addClass+in:file+language:js+repo:jquery/jquery`
   *
   * This query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.
   *
   * #### Considerations for code search
   *
   * Due to the complexity of searching code, there are a few restrictions on how searches are performed:
   *
   * *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.
   * *   Only files smaller than 384 KB are searchable.
   * *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing
   * language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.
   */
  "search/code": {
    parameters: {
      query: {
        /** @description The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub AE. The REST API supports the same qualifiers as the web interface for GitHub AE. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/github-ae@latest/rest/reference/search#constructing-a-search-query). See "[Searching code](https://docs.github.com/github-ae@latest/search-github/searching-on-github/searching-code)" for a detailed list of qualifiers. */
        q: string;
        /** @description Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub AE search infrastructure. Default: [best match](https://docs.github.com/github-ae@latest/rest/reference/search#ranking-search-results) */
        sort?: "indexed";
        /** @description Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`. */
        order?: "desc" | "asc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            incomplete_results: boolean;
            items: {
              name: string;
              path: string;
              sha: string;
              /** Format: uri */
              url: string;
              /** Format: uri */
              git_url: string;
              /** Format: uri */
              html_url: string;
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              score: number;
              file_size?: number;
              language?: string | null;
              /** Format: date-time */
              last_modified_at?: string;
              /**
               * @example [
               *   "73..77",
               *   "77..78"
               * ]
               */
              line_numbers?: string[];
              /** Search Result Text Matches */
              text_matches?: {
                object_url?: string;
                object_type?: string | null;
                property?: string;
                fragment?: string;
                matches?: {
                  text?: string;
                  indices?: number[];
                }[];
              }[];
            }[];
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * Search commits
   * @description Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
   *
   * When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match
   * metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
   *
   * For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:
   *
   * `q=repo:octocat/Spoon-Knife+css`
   */
  "search/commits": {
    parameters: {
      query: {
        /** @description The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub AE. The REST API supports the same qualifiers as the web interface for GitHub AE. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/github-ae@latest/rest/reference/search#constructing-a-search-query). See "[Searching commits](https://docs.github.com/github-ae@latest/search-github/searching-on-github/searching-commits)" for a detailed list of qualifiers. */
        q: string;
        /** @description Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/github-ae@latest/rest/reference/search#ranking-search-results) */
        sort?: "author-date" | "committer-date";
        /** @description Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`. */
        order?: "desc" | "asc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            incomplete_results: boolean;
            items: {
              /** Format: uri */
              url: string;
              sha: string;
              /** Format: uri */
              html_url: string;
              /** Format: uri */
              comments_url: string;
              commit: {
                author: {
                  name: string;
                  email: string;
                  /** Format: date-time */
                  date: string;
                };
                /**
                 * Git User
                 * @description Metaproperties for Git author/committer information.
                 */
                committer: {
                  /** @example "Chris Wanstrath" */
                  name?: string;
                  /** @example "chris@ozmm.org" */
                  email?: string;
                  /** @example "2007-10-29T02:42:39.000-07:00" */
                  date?: string;
                } | null;
                comment_count: number;
                message: string;
                tree: {
                  sha: string;
                  /** Format: uri */
                  url: string;
                };
                /** Format: uri */
                url: string;
                /** Verification */
                verification?: {
                  verified: boolean;
                  reason: string;
                  payload: string | null;
                  signature: string | null;
                };
              };
              /**
               * Simple User
               * @description Simple User
               */
              author: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * Git User
               * @description Metaproperties for Git author/committer information.
               */
              committer: {
                /** @example "Chris Wanstrath" */
                name?: string;
                /** @example "chris@ozmm.org" */
                email?: string;
                /** @example "2007-10-29T02:42:39.000-07:00" */
                date?: string;
              } | null;
              parents: {
                url?: string;
                html_url?: string;
                sha?: string;
              }[];
              /**
               * Minimal Repository
               * @description Minimal Repository
               */
              repository: {
                /** @example 1296269 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /** @example Hello-World */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                git_url?: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                ssh_url?: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                clone_url?: string;
                mirror_url?: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                svn_url?: string;
                homepage?: string | null;
                language?: string | null;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at?: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at?: string | null;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                /** @example admin */
                role_name?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                template_repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                } | null;
                temp_clone_token?: string;
                delete_branch_on_merge?: boolean;
                subscribers_count?: number;
                network_count?: number;
                /**
                 * Code Of Conduct
                 * @description Code Of Conduct
                 */
                code_of_conduct?: {
                  /** @example contributor_covenant */
                  key: string;
                  /** @example Contributor Covenant */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/codes_of_conduct/contributor_covenant
                   */
                  url: string;
                  /**
                   * @example # Contributor Covenant Code of Conduct
                   *
                   * ## Our Pledge
                   *
                   * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                   *
                   * ## Our Standards
                   *
                   * Examples of behavior that contributes to creating a positive environment include:
                   *
                   * * Using welcoming and inclusive language
                   * * Being respectful of differing viewpoints and experiences
                   * * Gracefully accepting constructive criticism
                   * * Focusing on what is best for the community
                   * * Showing empathy towards other community members
                   *
                   * Examples of unacceptable behavior by participants include:
                   *
                   * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                   * * Trolling, insulting/derogatory comments, and personal or political attacks
                   * * Public or private harassment
                   * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                   * * Other conduct which could reasonably be considered inappropriate in a professional setting
                   *
                   * ## Our Responsibilities
                   *
                   * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                   *                   to any instances of unacceptable behavior.
                   *
                   * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                   *
                   * ## Scope
                   *
                   * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                   *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                   *
                   * ## Enforcement
                   *
                   * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                   *
                   * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                   *
                   * ## Attribution
                   *
                   * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                   *
                   * [homepage]: http://contributor-covenant.org
                   * [version]: http://contributor-covenant.org/version/1/4/
                   */
                  body?: string;
                  /** Format: uri */
                  html_url: string | null;
                };
                license?: {
                  key?: string;
                  name?: string;
                  spdx_id?: string;
                  url?: string;
                  node_id?: string;
                } | null;
                /** @example 0 */
                forks?: number;
                /** @example 0 */
                open_issues?: number;
                /** @example 0 */
                watchers?: number;
                allow_forking?: boolean;
              };
              score: number;
              node_id: string;
              /** Search Result Text Matches */
              text_matches?: {
                object_url?: string;
                object_type?: string | null;
                property?: string;
                fragment?: string;
                matches?: {
                  text?: string;
                  indices?: number[];
                }[];
              }[];
            }[];
          };
        };
      };
      /** @description Not modified */
      304: never;
    };
  };
  /**
   * Search issues and pull requests
   * @description Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#pagination).
   *
   * When searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted
   * search results, see [Text match metadata](https://docs.github.com/github-ae@latest/rest/reference/search#text-match-metadata).
   *
   * For example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.
   *
   * `q=windows+label:bug+language:python+state:open&sort=created&order=asc`
   *
   * This query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.
   *
   * **Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see "[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests)."
   */
  "search/issues-and-pull-requests": {
    parameters: {
      query: {
        /** @description The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub AE. The REST API supports the same qualifiers as the web interface for GitHub AE. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/github-ae@latest/rest/reference/search#constructing-a-search-query). See "[Searching issues and pull requests](https://docs.github.com/github-ae@latest/search-github/searching-on-github/searching-issues-and-pull-requests)" for a detailed list of qualifiers. */
        q: string;
        /** @description Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://docs.github.com/github-ae@latest/rest/reference/search#ranking-search-results) */
        sort?:
          | "comments"
          | "reactions"
          | "reactions-+1"
          | "reactions--1"
          | "reactions-smile"
          | "reactions-thinking_face"
          | "reactions-heart"
          | "reactions-tada"
          | "interactions"
          | "created"
          | "updated";
        /** @description Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`. */
        order?: "desc" | "asc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            total_count: number;
            incomplete_results: boolean;
            items: {
              /** Format: uri */
              url: string;
              /** Format: uri */
              repository_url: string;
              labels_url: string;
              /** Format: uri */
              comments_url: string;
              /** Format: uri */
              events_url: string;
              /** Format: uri */
              html_url: string;
              id: number;
              node_id: string;
              number: number;
              title: string;
              locked: boolean;
              active_lock_reason?: string | null;
              assignees?:
                | {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  }[]
                | null;
              /**
               * Simple User
               * @description Simple User
               */
              user: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              labels: {
                /** Format: int64 */
                id?: number;
                node_id?: string;
                url?: string;
                name?: string;
                color?: string;
                default?: boolean;
                description?: string | null;
              }[];
              state: string;
              state_reason?: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              assignee: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * Milestone
               * @description A collection of related issues and pull requests.
               */
              milestone: {
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World/milestones/v1.0
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                 */
                labels_url: string;
                /** @example 1002604 */
                id: number;
                /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                node_id: string;
                /**
                 * @description The number of the milestone.
                 * @example 42
                 */
                number: number;
                /**
                 * @description The state of the milestone.
                 * @default open
                 * @example open
                 * @enum {string}
                 */
                state: "open" | "closed";
                /**
                 * @description The title of the milestone.
                 * @example v1.0
                 */
                title: string;
                /** @example Tracking milestone for version 1.0 */
                description: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                creator: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /** @example 4 */
                open_issues: number;
                /** @example 8 */
                closed_issues: number;
                /**
                 * Format: date-time
                 * @example 2011-04-10T20:09:31Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2014-03-03T18:58:10Z
                 */
                updated_at: string;
                /**
                 * Format: date-time
                 * @example 2013-02-12T13:22:01Z
                 */
                closed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2012-10-09T23:39:01Z
                 */
                due_on: string | null;
              } | null;
              comments: number;
              /** Format: date-time */
              created_at: string;
              /** Format: date-time */
              updated_at: string;
              /** Format: date-time */
              closed_at: string | null;
              /** Search Result Text Matches */
              text_matches?: {
                object_url?: string;
                object_type?: string | null;
                property?: string;
                fragment?: string;
                matches?: {
                  text?: string;
                  indices?: number[];
                }[];
              }[];
              pull_request?: {
                /** Format: date-time */
                merged_at?: string | null;
                /** Format: uri */
                diff_url: string | null;
                /** Format: uri */
                html_url: string | null;
                /** Format: uri */
                patch_url: string | null;
                /** Format: uri */
                url: string | null;
              };
              body?: string;
              score: number;
              /**
               * author_association
               * @description How the author is associated with the repository.
               * @example OWNER
               * @enum {string}
               */
              author_association:
                | "COLLABORATOR"
                | "CONTRIBUTOR"
                | "FIRST_TIMER"
                | "FIRST_TIME_CONTRIBUTOR"
                | "MANNEQUIN"
                | "MEMBER"
                | "NONE"
                | "OWNER";
              draft?: boolean;
              /**
               * Repository
               * @description A git repository
               */
              repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              };
              body_html?: string;
              body_text?: string;
              /** Format: uri */
              timeline_url?: string;
              /**
               * GitHub app
               * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
               */
              performed_via_github_app?: {
                /**
                 * @description Unique identifier of the GitHub app
                 * @example 37
                 */
                id: number;
                /**
                 * @description The slug name of the GitHub app
                 * @example probot-owners
                 */
                slug?: string;
                /** @example MDExOkludGVncmF0aW9uMQ== */
                node_id: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description The name of the GitHub app
                 * @example Probot Owners
                 */
                name: string;
                /** @example The description of the app. */
                description: string | null;
                /**
                 * Format: uri
                 * @example https://example.com
                 */
                external_url: string;
                /**
                 * Format: uri
                 * @example https://github.com/apps/super-ci
                 */
                html_url: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2017-07-08T16:18:44-04:00
                 */
                updated_at: string;
                /**
                 * @description The set of permissions for the GitHub app
                 * @example {
                 *   "issues": "read",
                 *   "deployments": "write"
                 * }
                 */
                permissions: {
                  issues?: string;
                  checks?: string;
                  metadata?: string;
                  contents?: string;
                  deployments?: string;
                  [key: string]: string | undefined;
                };
                /**
                 * @description The list of events for the GitHub app
                 * @example [
                 *   "label",
                 *   "deployment"
                 * ]
                 */
                events: string[];
                /**
                 * @description The number of installations associated with the GitHub app
                 * @example 5
                 */
                installations_count?: number;
                /** @example "Iv1.25b5d1e65ffc4022" */
                client_id?: string;
                /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                client_secret?: string;
                /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                webhook_secret?: string | null;
                /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                pem?: string;
              } | null;
              /** Reaction Rollup */
              reactions?: {
                /** Format: uri */
                url: string;
                total_count: number;
                "+1": number;
                "-1": number;
                laugh: number;
                confused: number;
                heart: number;
                hooray: number;
                eyes: number;
                rocket: number;
              };
            }[];
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
      /** @description Service unavailable */
      503: {
        content: {
          "application/json": {
            code?: string;
            message?: string;
            documentation_url?: string;
          };
        };
      };
    };
  };
  /**
   * List team repositories (Legacy)
   * @deprecated
   * @description **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/github-ae@latest/rest/reference/teams#list-team-repositories) endpoint.
   */
  "teams/list-repos-legacy": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The unique identifier of the team. */
        team_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Check team permissions for a repository (Legacy)
   * @deprecated
   * @description **Note**: Repositories inherited through a parent team will also be checked.
   *
   * **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/github-ae@latest/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.
   *
   * You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `Accept` header:
   */
  "teams/check-permissions-for-repo-legacy": {
    parameters: {
      path: {
        /** @description The unique identifier of the team. */
        team_id: number;
        /** @description The account owner of the repository. The name is not case sensitive. */
        owner: string;
        /** @description The name of the repository. The name is not case sensitive. */
        repo: string;
      };
    };
    responses: {
      /** @description Alternative response with extra repository information */
      200: {
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /**
             * @description Whether to allow forking this repo
             * @default false
             * @example false
             */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
          };
        };
      };
      /** @description Response if repository is managed by this team */
      204: never;
      /** @description Not Found if repository is not managed by this team */
      404: never;
    };
  };
  /**
   * List GPG keys for the authenticated user
   * @description Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
   */
  "users/list-gpg-keys-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            primary_key_id: number | null;
            /** @example 3262EFF25BA0D270 */
            key_id: string;
            /** @example xsBNBFayYZ... */
            public_key: string;
            /**
             * @example [
             *   {
             *     "email": "octocat@users.noreply.github.com",
             *     "verified": true
             *   }
             * ]
             */
            emails: {
              email?: string;
              verified?: boolean;
            }[];
            /**
             * @example [
             *   {
             *     "id": 4,
             *     "primary_key_id": 3,
             *     "key_id": "4A595D4C72EE49C7",
             *     "public_key": "zsBNBFayYZ...",
             *     "emails": [],
             *     "subkeys": [],
             *     "can_sign": false,
             *     "can_encrypt_comms": true,
             *     "can_encrypt_storage": true,
             *     "can_certify": false,
             *     "created_at": "2016-03-24T11:31:04-06:00",
             *     "expires_at": null
             *   }
             * ]
             */
            subkeys: {
              id?: number;
              primary_key_id?: number;
              key_id?: string;
              public_key?: string;
              emails?: Record<string, never>[];
              subkeys?: Record<string, never>[];
              can_sign?: boolean;
              can_encrypt_comms?: boolean;
              can_encrypt_storage?: boolean;
              can_certify?: boolean;
              created_at?: string;
              expires_at?: string | null;
              raw_key?: string | null;
            }[];
            /** @example true */
            can_sign: boolean;
            can_encrypt_comms: boolean;
            can_encrypt_storage: boolean;
            /** @example true */
            can_certify: boolean;
            /**
             * Format: date-time
             * @example 2016-03-24T11:31:04-06:00
             */
            created_at: string;
            /** Format: date-time */
            expires_at: string | null;
            raw_key: string | null;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Create a GPG key for the authenticated user
   * @description Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
   */
  "users/create-gpg-key-for-authenticated-user": {
    requestBody: {
      content: {
        "application/json": {
          /** @description A GPG key in ASCII-armored format. */
          armored_public_key: string;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            primary_key_id: number | null;
            /** @example 3262EFF25BA0D270 */
            key_id: string;
            /** @example xsBNBFayYZ... */
            public_key: string;
            /**
             * @example [
             *   {
             *     "email": "octocat@users.noreply.github.com",
             *     "verified": true
             *   }
             * ]
             */
            emails: {
              email?: string;
              verified?: boolean;
            }[];
            /**
             * @example [
             *   {
             *     "id": 4,
             *     "primary_key_id": 3,
             *     "key_id": "4A595D4C72EE49C7",
             *     "public_key": "zsBNBFayYZ...",
             *     "emails": [],
             *     "subkeys": [],
             *     "can_sign": false,
             *     "can_encrypt_comms": true,
             *     "can_encrypt_storage": true,
             *     "can_certify": false,
             *     "created_at": "2016-03-24T11:31:04-06:00",
             *     "expires_at": null
             *   }
             * ]
             */
            subkeys: {
              id?: number;
              primary_key_id?: number;
              key_id?: string;
              public_key?: string;
              emails?: Record<string, never>[];
              subkeys?: Record<string, never>[];
              can_sign?: boolean;
              can_encrypt_comms?: boolean;
              can_encrypt_storage?: boolean;
              can_certify?: boolean;
              created_at?: string;
              expires_at?: string | null;
              raw_key?: string | null;
            }[];
            /** @example true */
            can_sign: boolean;
            can_encrypt_comms: boolean;
            can_encrypt_storage: boolean;
            /** @example true */
            can_certify: boolean;
            /**
             * Format: date-time
             * @example 2016-03-24T11:31:04-06:00
             */
            created_at: string;
            /** Format: date-time */
            expires_at: string | null;
            raw_key: string | null;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Get a GPG key for the authenticated user
   * @description View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
   */
  "users/get-gpg-key-for-authenticated-user": {
    parameters: {
      path: {
        /** @description The unique identifier of the GPG key. */
        gpg_key_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            primary_key_id: number | null;
            /** @example 3262EFF25BA0D270 */
            key_id: string;
            /** @example xsBNBFayYZ... */
            public_key: string;
            /**
             * @example [
             *   {
             *     "email": "octocat@users.noreply.github.com",
             *     "verified": true
             *   }
             * ]
             */
            emails: {
              email?: string;
              verified?: boolean;
            }[];
            /**
             * @example [
             *   {
             *     "id": 4,
             *     "primary_key_id": 3,
             *     "key_id": "4A595D4C72EE49C7",
             *     "public_key": "zsBNBFayYZ...",
             *     "emails": [],
             *     "subkeys": [],
             *     "can_sign": false,
             *     "can_encrypt_comms": true,
             *     "can_encrypt_storage": true,
             *     "can_certify": false,
             *     "created_at": "2016-03-24T11:31:04-06:00",
             *     "expires_at": null
             *   }
             * ]
             */
            subkeys: {
              id?: number;
              primary_key_id?: number;
              key_id?: string;
              public_key?: string;
              emails?: Record<string, never>[];
              subkeys?: Record<string, never>[];
              can_sign?: boolean;
              can_encrypt_comms?: boolean;
              can_encrypt_storage?: boolean;
              can_certify?: boolean;
              created_at?: string;
              expires_at?: string | null;
              raw_key?: string | null;
            }[];
            /** @example true */
            can_sign: boolean;
            can_encrypt_comms: boolean;
            can_encrypt_storage: boolean;
            /** @example true */
            can_certify: boolean;
            /**
             * Format: date-time
             * @example 2016-03-24T11:31:04-06:00
             */
            created_at: string;
            /** Format: date-time */
            expires_at: string | null;
            raw_key: string | null;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List repositories accessible to the user access token
   * @description List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.
   *
   * The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
   *
   * You must use a [user-to-server OAuth access token](https://docs.github.com/github-ae@latest/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.
   *
   * The access the user has to each repository is included in the hash under the `permissions` key.
   */
  "apps/list-installation-repos-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The unique identifier of the installation. */
        installation_id: number;
      };
    };
    responses: {
      /** @description The access the user has to each repository is included in the hash under the `permissions` key. */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            total_count: number;
            repository_selection?: string;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List user account issues assigned to the authenticated user
   * @description List issues across owned and member repositories assigned to the authenticated user.
   *
   * **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
   * reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
   * the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
   * request id, use the "[List pull requests](https://docs.github.com/github-ae@latest/rest/reference/pulls#list-pull-requests)" endpoint.
   */
  "issues/list-for-authenticated-user": {
    parameters: {
      query: {
        /** @description Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation. */
        filter?:
          | "assigned"
          | "created"
          | "mentioned"
          | "subscribed"
          | "repos"
          | "all";
        /** @description Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`. */
        state?: "open" | "closed" | "all";
        /** @description A list of comma separated label names. Example: `bug,ui,@high` */
        labels?: string;
        /** @description What to sort results by. Can be either `created`, `updated`, `comments`. */
        sort?: "created" | "updated" | "comments";
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            id: number;
            node_id: string;
            /**
             * Format: uri
             * @description URL for the issue
             * @example https://api.github.com/repositories/42/issues/1
             */
            url: string;
            /** Format: uri */
            repository_url: string;
            labels_url: string;
            /** Format: uri */
            comments_url: string;
            /** Format: uri */
            events_url: string;
            /** Format: uri */
            html_url: string;
            /**
             * @description Number uniquely identifying the issue within its repository
             * @example 42
             */
            number: number;
            /**
             * @description State of the issue; either 'open' or 'closed'
             * @example open
             */
            state: string;
            /**
             * @description The reason for the current state
             * @example not_planned
             */
            state_reason?: string | null;
            /**
             * @description Title of the issue
             * @example Widget creation fails in Safari on OS X 10.8
             */
            title: string;
            /**
             * @description Contents of the issue
             * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
             */
            body?: string | null;
            /**
             * Simple User
             * @description Simple User
             */
            user: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
             * @example [
             *   "bug",
             *   "registration"
             * ]
             */
            labels: OneOf<
              [
                string,
                {
                  /** Format: int64 */
                  id?: number;
                  node_id?: string;
                  /** Format: uri */
                  url?: string;
                  name?: string;
                  description?: string | null;
                  color?: string | null;
                  default?: boolean;
                }
              ]
            >[];
            /**
             * Simple User
             * @description Simple User
             */
            assignee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            assignees?:
              | {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                }[]
              | null;
            /**
             * Milestone
             * @description A collection of related issues and pull requests.
             */
            milestone: {
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World/milestones/v1.0
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
               */
              labels_url: string;
              /** @example 1002604 */
              id: number;
              /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
              node_id: string;
              /**
               * @description The number of the milestone.
               * @example 42
               */
              number: number;
              /**
               * @description The state of the milestone.
               * @default open
               * @example open
               * @enum {string}
               */
              state: "open" | "closed";
              /**
               * @description The title of the milestone.
               * @example v1.0
               */
              title: string;
              /** @example Tracking milestone for version 1.0 */
              description: string | null;
              /**
               * Simple User
               * @description Simple User
               */
              creator: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /** @example 4 */
              open_issues: number;
              /** @example 8 */
              closed_issues: number;
              /**
               * Format: date-time
               * @example 2011-04-10T20:09:31Z
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2014-03-03T18:58:10Z
               */
              updated_at: string;
              /**
               * Format: date-time
               * @example 2013-02-12T13:22:01Z
               */
              closed_at: string | null;
              /**
               * Format: date-time
               * @example 2012-10-09T23:39:01Z
               */
              due_on: string | null;
            } | null;
            locked: boolean;
            active_lock_reason?: string | null;
            comments: number;
            pull_request?: {
              /** Format: date-time */
              merged_at?: string | null;
              /** Format: uri */
              diff_url: string | null;
              /** Format: uri */
              html_url: string | null;
              /** Format: uri */
              patch_url: string | null;
              /** Format: uri */
              url: string | null;
            };
            /** Format: date-time */
            closed_at: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            draft?: boolean;
            /**
             * Simple User
             * @description Simple User
             */
            closed_by?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            body_html?: string;
            body_text?: string;
            /** Format: uri */
            timeline_url?: string;
            /**
             * Repository
             * @description A git repository
             */
            repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
            /**
             * GitHub app
             * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
             */
            performed_via_github_app?: {
              /**
               * @description Unique identifier of the GitHub app
               * @example 37
               */
              id: number;
              /**
               * @description The slug name of the GitHub app
               * @example probot-owners
               */
              slug?: string;
              /** @example MDExOkludGVncmF0aW9uMQ== */
              node_id: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              /**
               * @description The name of the GitHub app
               * @example Probot Owners
               */
              name: string;
              /** @example The description of the app. */
              description: string | null;
              /**
               * Format: uri
               * @example https://example.com
               */
              external_url: string;
              /**
               * Format: uri
               * @example https://github.com/apps/super-ci
               */
              html_url: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              created_at: string;
              /**
               * Format: date-time
               * @example 2017-07-08T16:18:44-04:00
               */
              updated_at: string;
              /**
               * @description The set of permissions for the GitHub app
               * @example {
               *   "issues": "read",
               *   "deployments": "write"
               * }
               */
              permissions: {
                issues?: string;
                checks?: string;
                metadata?: string;
                contents?: string;
                deployments?: string;
                [key: string]: string | undefined;
              };
              /**
               * @description The list of events for the GitHub app
               * @example [
               *   "label",
               *   "deployment"
               * ]
               */
              events: string[];
              /**
               * @description The number of installations associated with the GitHub app
               * @example 5
               */
              installations_count?: number;
              /** @example "Iv1.25b5d1e65ffc4022" */
              client_id?: string;
              /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
              client_secret?: string;
              /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
              webhook_secret?: string | null;
              /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
              pem?: string;
            } | null;
            /**
             * author_association
             * @description How the author is associated with the repository.
             * @example OWNER
             * @enum {string}
             */
            author_association:
              | "COLLABORATOR"
              | "CONTRIBUTOR"
              | "FIRST_TIMER"
              | "FIRST_TIME_CONTRIBUTOR"
              | "MANNEQUIN"
              | "MEMBER"
              | "NONE"
              | "OWNER";
            /** Reaction Rollup */
            reactions?: {
              /** Format: uri */
              url: string;
              total_count: number;
              "+1": number;
              "-1": number;
              laugh: number;
              confused: number;
              heart: number;
              hooray: number;
              eyes: number;
              rocket: number;
            };
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List user migrations
   * @description Lists all migrations a user has started.
   */
  "migrations/list-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 79 */
            id: number;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example 0b989ba4-242f-11e5-81e1-c7b6966d2516 */
            guid: string;
            /** @example pending */
            state: string;
            /** @example true */
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /**
             * Format: uri
             * @example https://api.github.com/orgs/octo-org/migrations/79
             */
            url: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            updated_at: string;
            node_id: string;
            /** Format: uri */
            archive_url?: string;
            exclude?: Record<string, never>[];
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * Start a user migration
   * @description Initiates the generation of a user migration archive.
   */
  "migrations/start-for-authenticated-user": {
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description Lock the repositories being migrated at the start of the migration
           * @example true
           */
          lock_repositories?: boolean;
          /**
           * @description Indicates whether metadata should be excluded and only git source should be included for the migration.
           * @example true
           */
          exclude_metadata?: boolean;
          /**
           * @description Indicates whether the repository git data should be excluded from the migration.
           * @example true
           */
          exclude_git_data?: boolean;
          /**
           * @description Do not include attachments in the migration
           * @example true
           */
          exclude_attachments?: boolean;
          /**
           * @description Do not include releases in the migration
           * @example true
           */
          exclude_releases?: boolean;
          /**
           * @description Indicates whether projects owned by the organization or users should be excluded.
           * @example true
           */
          exclude_owner_projects?: boolean;
          /**
           * @description Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
           * @default false
           * @example true
           */
          org_metadata_only?: boolean;
          /**
           * @description Exclude attributes from the API response to improve performance
           * @example [
           *   "repositories"
           * ]
           */
          exclude?: "repositories"[];
          repositories: string[];
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        content: {
          "application/json": {
            /** @example 79 */
            id: number;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /** @example 0b989ba4-242f-11e5-81e1-c7b6966d2516 */
            guid: string;
            /** @example pending */
            state: string;
            /** @example true */
            lock_repositories: boolean;
            exclude_metadata: boolean;
            exclude_git_data: boolean;
            exclude_attachments: boolean;
            exclude_releases: boolean;
            exclude_owner_projects: boolean;
            org_metadata_only: boolean;
            repositories: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            }[];
            /**
             * Format: uri
             * @example https://api.github.com/orgs/octo-org/migrations/79
             */
            url: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            created_at: string;
            /**
             * Format: date-time
             * @example 2015-07-06T15:33:38-07:00
             */
            updated_at: string;
            node_id: string;
            /** Format: uri */
            archive_url?: string;
            exclude?: Record<string, never>[];
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * List repositories for a user migration
   * @description Lists all the repositories for this user migration.
   */
  "migrations/list-repos-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The unique identifier of the migration. */
        migration_id: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List repositories for the authenticated user
   * @description Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.
   *
   * The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.
   */
  "repos/list-for-authenticated-user": {
    parameters: {
      query: {
        /** @description Limit results to repositories with the specified visibility. */
        visibility?: "all" | "internal" | "private";
        /**
         * @description Comma-separated list of values. Can include:
         * \* `owner`: Repositories that are owned by the authenticated user.
         * \* `collaborator`: Repositories that the user has been added to as a collaborator.
         * \* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
         */
        affiliation?: string;
        /** @description Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibility** or **affiliation**. */
        type?: "all" | "owner" | "internal" | "private" | "member";
        /** @description The property to short the results by. */
        sort?: "created" | "updated" | "pushed" | "full_name";
        /** @description The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`. */
        direction?: "asc" | "desc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
        /** @description Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        since?: string;
        /** @description Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
        before?: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            template_repository?: {
              id?: number;
              node_id?: string;
              name?: string;
              full_name?: string;
              owner?: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
              };
              private?: boolean;
              html_url?: string;
              description?: string;
              fork?: boolean;
              url?: string;
              archive_url?: string;
              assignees_url?: string;
              blobs_url?: string;
              branches_url?: string;
              collaborators_url?: string;
              comments_url?: string;
              commits_url?: string;
              compare_url?: string;
              contents_url?: string;
              contributors_url?: string;
              deployments_url?: string;
              downloads_url?: string;
              events_url?: string;
              forks_url?: string;
              git_commits_url?: string;
              git_refs_url?: string;
              git_tags_url?: string;
              git_url?: string;
              issue_comment_url?: string;
              issue_events_url?: string;
              issues_url?: string;
              keys_url?: string;
              labels_url?: string;
              languages_url?: string;
              merges_url?: string;
              milestones_url?: string;
              notifications_url?: string;
              pulls_url?: string;
              releases_url?: string;
              ssh_url?: string;
              stargazers_url?: string;
              statuses_url?: string;
              subscribers_url?: string;
              subscription_url?: string;
              tags_url?: string;
              teams_url?: string;
              trees_url?: string;
              clone_url?: string;
              mirror_url?: string;
              hooks_url?: string;
              svn_url?: string;
              homepage?: string;
              language?: string;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              pushed_at?: string;
              created_at?: string;
              updated_at?: string;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              allow_rebase_merge?: boolean;
              temp_clone_token?: string;
              allow_squash_merge?: boolean;
              allow_auto_merge?: boolean;
              delete_branch_on_merge?: boolean;
              allow_update_branch?: boolean;
              allow_merge_commit?: boolean;
              subscribers_count?: number;
              network_count?: number;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
             * @default false
             * @example false
             */
            allow_update_branch?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /** @description Whether to allow forking this repo */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            /** @example "2020-07-09T00:17:42Z" */
            starred_at?: string;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * Create a repository for the authenticated user
   * @description Creates a new repository for the authenticated user.
   *
   * **OAuth scope requirements**
   *
   * When using [OAuth](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:
   *
   * *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.
   * *   `repo` scope to create a private repository.
   */
  "repos/create-for-authenticated-user": {
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description The name of the repository.
           * @example Team Environment
           */
          name: string;
          /** @description A short description of the repository. */
          description?: string;
          /** @description A URL with more information about the repository. */
          homepage?: string;
          /**
           * @description Whether the repository is private.
           * @default false
           */
          private?: boolean;
          /**
           * @description Whether issues are enabled.
           * @default true
           * @example true
           */
          has_issues?: boolean;
          /**
           * @description Whether projects are enabled.
           * @default true
           * @example true
           */
          has_projects?: boolean;
          /**
           * @description Whether the wiki is enabled.
           * @default true
           * @example true
           */
          has_wiki?: boolean;
          /** @description The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization. */
          team_id?: number;
          /**
           * @description Whether the repository is initialized with a minimal README.
           * @default false
           */
          auto_init?: boolean;
          /**
           * @description The desired language or platform to apply to the .gitignore.
           * @example Haskell
           */
          gitignore_template?: string;
          /**
           * @description The license keyword of the open source license for this repository.
           * @example mit
           */
          license_template?: string;
          /**
           * @description Whether to allow squash merges for pull requests.
           * @default true
           * @example true
           */
          allow_squash_merge?: boolean;
          /**
           * @description Whether to allow merge commits for pull requests.
           * @default true
           * @example true
           */
          allow_merge_commit?: boolean;
          /**
           * @description Whether to allow rebase merges for pull requests.
           * @default true
           * @example true
           */
          allow_rebase_merge?: boolean;
          /**
           * @description Whether to allow Auto-merge to be used on pull requests.
           * @default false
           * @example false
           */
          allow_auto_merge?: boolean;
          /**
           * @description Whether to delete head branches when pull requests are merged
           * @default false
           * @example false
           */
          delete_branch_on_merge?: boolean;
          /**
           * @description Whether downloads are enabled.
           * @default true
           * @example true
           */
          has_downloads?: boolean;
          /**
           * @description Whether this repository acts as a template that can be used to generate new repositories.
           * @default false
           * @example true
           */
          is_template?: boolean;
        };
      };
    };
    responses: {
      /** @description Response */
      201: {
        headers: {
          /** @example https://api.github.com/repos/octocat/Hello-World */
          Location?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            template_repository?: {
              id?: number;
              node_id?: string;
              name?: string;
              full_name?: string;
              owner?: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
              };
              private?: boolean;
              html_url?: string;
              description?: string;
              fork?: boolean;
              url?: string;
              archive_url?: string;
              assignees_url?: string;
              blobs_url?: string;
              branches_url?: string;
              collaborators_url?: string;
              comments_url?: string;
              commits_url?: string;
              compare_url?: string;
              contents_url?: string;
              contributors_url?: string;
              deployments_url?: string;
              downloads_url?: string;
              events_url?: string;
              forks_url?: string;
              git_commits_url?: string;
              git_refs_url?: string;
              git_tags_url?: string;
              git_url?: string;
              issue_comment_url?: string;
              issue_events_url?: string;
              issues_url?: string;
              keys_url?: string;
              labels_url?: string;
              languages_url?: string;
              merges_url?: string;
              milestones_url?: string;
              notifications_url?: string;
              pulls_url?: string;
              releases_url?: string;
              ssh_url?: string;
              stargazers_url?: string;
              statuses_url?: string;
              subscribers_url?: string;
              subscription_url?: string;
              tags_url?: string;
              teams_url?: string;
              trees_url?: string;
              clone_url?: string;
              mirror_url?: string;
              hooks_url?: string;
              svn_url?: string;
              homepage?: string;
              language?: string;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              pushed_at?: string;
              created_at?: string;
              updated_at?: string;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              allow_rebase_merge?: boolean;
              temp_clone_token?: string;
              allow_squash_merge?: boolean;
              allow_auto_merge?: boolean;
              delete_branch_on_merge?: boolean;
              allow_update_branch?: boolean;
              allow_merge_commit?: boolean;
              subscribers_count?: number;
              network_count?: number;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
             * @default false
             * @example false
             */
            allow_update_branch?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /** @description Whether to allow forking this repo */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            /** @example "2020-07-09T00:17:42Z" */
            starred_at?: string;
          };
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
          "application/scim+json": {
            message?: string | null;
            documentation_url?: string | null;
            detail?: string | null;
            status?: number;
            scimType?: string | null;
            schemas?: string[];
          };
        };
      };
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Validation failed */
      422: {
        content: {
          "application/json": {
            message: string;
            documentation_url: string;
            errors?: {
              resource?: string;
              field?: string;
              message?: string;
              code: string;
              index?: number;
              value?: (string | null) | (number | null) | (string[] | null);
            }[];
          };
        };
      };
    };
  };
  /**
   * List repository invitations for the authenticated user
   * @description When authenticating as a user, this endpoint will list all currently open repository invitations for that user.
   */
  "repos/list-invitations-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository invitation.
             * @example 42
             */
            id: number;
            /**
             * Minimal Repository
             * @description Minimal Repository
             */
            repository: {
              /** @example 1296269 */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /** @example Hello-World */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              git_url?: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              ssh_url?: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              clone_url?: string;
              mirror_url?: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              svn_url?: string;
              homepage?: string | null;
              language?: string | null;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at?: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at?: string | null;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              /** @example admin */
              role_name?: string;
              /**
               * Repository
               * @description A git repository
               */
              template_repository?: {
                /**
                 * @description Unique identifier of the repository
                 * @example 42
                 */
                id: number;
                /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                node_id: string;
                /**
                 * @description The name of the repository.
                 * @example Team Environment
                 */
                name: string;
                /** @example octocat/Hello-World */
                full_name: string;
                /**
                 * License Simple
                 * @description License Simple
                 */
                license: {
                  /** @example mit */
                  key: string;
                  /** @example MIT License */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/licenses/mit
                   */
                  url: string | null;
                  /** @example MIT */
                  spdx_id: string | null;
                  /** @example MDc6TGljZW5zZW1pdA== */
                  node_id: string;
                  /** Format: uri */
                  html_url?: string;
                } | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                organization?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                forks: number;
                permissions?: {
                  admin: boolean;
                  pull: boolean;
                  triage?: boolean;
                  push: boolean;
                  maintain?: boolean;
                };
                /**
                 * Simple User
                 * @description Simple User
                 */
                owner: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                };
                /**
                 * @description Whether the repository is private or public.
                 * @default false
                 */
                private: boolean;
                /**
                 * Format: uri
                 * @example https://github.com/octocat/Hello-World
                 */
                html_url: string;
                /** @example This your first repo! */
                description: string | null;
                fork: boolean;
                /**
                 * Format: uri
                 * @example https://api.github.com/repos/octocat/Hello-World
                 */
                url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                archive_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                assignees_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                blobs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                branches_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                collaborators_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                comments_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                compare_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                contents_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/contributors
                 */
                contributors_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/deployments
                 */
                deployments_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/downloads
                 */
                downloads_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/events
                 */
                events_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/forks
                 */
                forks_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                git_commits_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                git_refs_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                git_tags_url: string;
                /** @example git:github.com/octocat/Hello-World.git */
                git_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                issue_comment_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                issue_events_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                issues_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                keys_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                labels_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/languages
                 */
                languages_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/merges
                 */
                merges_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                milestones_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                notifications_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                pulls_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                releases_url: string;
                /** @example git@github.com:octocat/Hello-World.git */
                ssh_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                 */
                stargazers_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                statuses_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                 */
                subscribers_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/subscription
                 */
                subscription_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/tags
                 */
                tags_url: string;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/teams
                 */
                teams_url: string;
                /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                trees_url: string;
                /** @example https://github.com/octocat/Hello-World.git */
                clone_url: string;
                /**
                 * Format: uri
                 * @example git:git.example.com/octocat/Hello-World
                 */
                mirror_url: string | null;
                /**
                 * Format: uri
                 * @example http://api.github.com/repos/octocat/Hello-World/hooks
                 */
                hooks_url: string;
                /**
                 * Format: uri
                 * @example https://svn.github.com/octocat/Hello-World
                 */
                svn_url: string;
                /**
                 * Format: uri
                 * @example https://github.com
                 */
                homepage: string | null;
                language: string | null;
                /** @example 9 */
                forks_count: number;
                /** @example 80 */
                stargazers_count: number;
                /** @example 80 */
                watchers_count: number;
                /** @example 108 */
                size: number;
                /**
                 * @description The default branch of the repository.
                 * @example master
                 */
                default_branch: string;
                /** @example 0 */
                open_issues_count: number;
                /**
                 * @description Whether this repository acts as a template that can be used to generate new repositories.
                 * @default false
                 * @example true
                 */
                is_template?: boolean;
                topics?: string[];
                /**
                 * @description Whether issues are enabled.
                 * @default true
                 * @example true
                 */
                has_issues: boolean;
                /**
                 * @description Whether projects are enabled.
                 * @default true
                 * @example true
                 */
                has_projects: boolean;
                /**
                 * @description Whether the wiki is enabled.
                 * @default true
                 * @example true
                 */
                has_wiki: boolean;
                has_pages: boolean;
                /**
                 * @description Whether downloads are enabled.
                 * @default true
                 * @example true
                 */
                has_downloads: boolean;
                /**
                 * @description Whether the repository is archived.
                 * @default false
                 */
                archived: boolean;
                /** @description Returns whether or not this repository disabled. */
                disabled: boolean;
                /**
                 * @description The repository visibility: public, private, or internal.
                 * @default public
                 */
                visibility?: string;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:06:43Z
                 */
                pushed_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:01:12Z
                 */
                created_at: string | null;
                /**
                 * Format: date-time
                 * @example 2011-01-26T19:14:43Z
                 */
                updated_at: string | null;
                /**
                 * @description Whether to allow rebase merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_rebase_merge?: boolean;
                template_repository?: {
                  id?: number;
                  node_id?: string;
                  name?: string;
                  full_name?: string;
                  owner?: {
                    login?: string;
                    id?: number;
                    node_id?: string;
                    avatar_url?: string;
                    gravatar_id?: string;
                    url?: string;
                    html_url?: string;
                    followers_url?: string;
                    following_url?: string;
                    gists_url?: string;
                    starred_url?: string;
                    subscriptions_url?: string;
                    organizations_url?: string;
                    repos_url?: string;
                    events_url?: string;
                    received_events_url?: string;
                    type?: string;
                    site_admin?: boolean;
                  };
                  private?: boolean;
                  html_url?: string;
                  description?: string;
                  fork?: boolean;
                  url?: string;
                  archive_url?: string;
                  assignees_url?: string;
                  blobs_url?: string;
                  branches_url?: string;
                  collaborators_url?: string;
                  comments_url?: string;
                  commits_url?: string;
                  compare_url?: string;
                  contents_url?: string;
                  contributors_url?: string;
                  deployments_url?: string;
                  downloads_url?: string;
                  events_url?: string;
                  forks_url?: string;
                  git_commits_url?: string;
                  git_refs_url?: string;
                  git_tags_url?: string;
                  git_url?: string;
                  issue_comment_url?: string;
                  issue_events_url?: string;
                  issues_url?: string;
                  keys_url?: string;
                  labels_url?: string;
                  languages_url?: string;
                  merges_url?: string;
                  milestones_url?: string;
                  notifications_url?: string;
                  pulls_url?: string;
                  releases_url?: string;
                  ssh_url?: string;
                  stargazers_url?: string;
                  statuses_url?: string;
                  subscribers_url?: string;
                  subscription_url?: string;
                  tags_url?: string;
                  teams_url?: string;
                  trees_url?: string;
                  clone_url?: string;
                  mirror_url?: string;
                  hooks_url?: string;
                  svn_url?: string;
                  homepage?: string;
                  language?: string;
                  forks_count?: number;
                  stargazers_count?: number;
                  watchers_count?: number;
                  size?: number;
                  default_branch?: string;
                  open_issues_count?: number;
                  is_template?: boolean;
                  topics?: string[];
                  has_issues?: boolean;
                  has_projects?: boolean;
                  has_wiki?: boolean;
                  has_pages?: boolean;
                  has_downloads?: boolean;
                  archived?: boolean;
                  disabled?: boolean;
                  visibility?: string;
                  pushed_at?: string;
                  created_at?: string;
                  updated_at?: string;
                  permissions?: {
                    admin?: boolean;
                    maintain?: boolean;
                    push?: boolean;
                    triage?: boolean;
                    pull?: boolean;
                  };
                  allow_rebase_merge?: boolean;
                  temp_clone_token?: string;
                  allow_squash_merge?: boolean;
                  allow_auto_merge?: boolean;
                  delete_branch_on_merge?: boolean;
                  allow_update_branch?: boolean;
                  allow_merge_commit?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                } | null;
                temp_clone_token?: string;
                /**
                 * @description Whether to allow squash merges for pull requests.
                 * @default true
                 * @example true
                 */
                allow_squash_merge?: boolean;
                /**
                 * @description Whether to allow Auto-merge to be used on pull requests.
                 * @default false
                 * @example false
                 */
                allow_auto_merge?: boolean;
                /**
                 * @description Whether to delete head branches when pull requests are merged
                 * @default false
                 * @example false
                 */
                delete_branch_on_merge?: boolean;
                /**
                 * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                 * @default false
                 * @example false
                 */
                allow_update_branch?: boolean;
                /**
                 * @description Whether to allow merge commits for pull requests.
                 * @default true
                 * @example true
                 */
                allow_merge_commit?: boolean;
                /** @description Whether to allow forking this repo */
                allow_forking?: boolean;
                subscribers_count?: number;
                network_count?: number;
                open_issues: number;
                watchers: number;
                master_branch?: string;
                /** @example "2020-07-09T00:17:42Z" */
                starred_at?: string;
              } | null;
              temp_clone_token?: string;
              delete_branch_on_merge?: boolean;
              subscribers_count?: number;
              network_count?: number;
              /**
               * Code Of Conduct
               * @description Code Of Conduct
               */
              code_of_conduct?: {
                /** @example contributor_covenant */
                key: string;
                /** @example Contributor Covenant */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/codes_of_conduct/contributor_covenant
                 */
                url: string;
                /**
                 * @example # Contributor Covenant Code of Conduct
                 *
                 * ## Our Pledge
                 *
                 * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
                 *
                 * ## Our Standards
                 *
                 * Examples of behavior that contributes to creating a positive environment include:
                 *
                 * * Using welcoming and inclusive language
                 * * Being respectful of differing viewpoints and experiences
                 * * Gracefully accepting constructive criticism
                 * * Focusing on what is best for the community
                 * * Showing empathy towards other community members
                 *
                 * Examples of unacceptable behavior by participants include:
                 *
                 * * The use of sexualized language or imagery and unwelcome sexual attention or advances
                 * * Trolling, insulting/derogatory comments, and personal or political attacks
                 * * Public or private harassment
                 * * Publishing others' private information, such as a physical or electronic address, without explicit permission
                 * * Other conduct which could reasonably be considered inappropriate in a professional setting
                 *
                 * ## Our Responsibilities
                 *
                 * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                 *                   to any instances of unacceptable behavior.
                 *
                 * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
                 *
                 * ## Scope
                 *
                 * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                 *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
                 *
                 * ## Enforcement
                 *
                 * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
                 *
                 * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
                 *
                 * ## Attribution
                 *
                 * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
                 *
                 * [homepage]: http://contributor-covenant.org
                 * [version]: http://contributor-covenant.org/version/1/4/
                 */
                body?: string;
                /** Format: uri */
                html_url: string | null;
              };
              license?: {
                key?: string;
                name?: string;
                spdx_id?: string;
                url?: string;
                node_id?: string;
              } | null;
              /** @example 0 */
              forks?: number;
              /** @example 0 */
              open_issues?: number;
              /** @example 0 */
              watchers?: number;
              allow_forking?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            invitee: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            inviter: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            /**
             * @description The permission associated with the invitation.
             * @example read
             * @enum {string}
             */
            permissions: "read" | "write" | "admin" | "triage" | "maintain";
            /**
             * Format: date-time
             * @example 2016-06-13T14:52:50-05:00
             */
            created_at: string;
            /** @description Whether or not the invitation has expired */
            expired?: boolean;
            /**
             * @description URL for the repository invitation
             * @example https://api.github.com/user/repository-invitations/1
             */
            url: string;
            /** @example https://github.com/octocat/Hello-World/invitations */
            html_url: string;
            node_id: string;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Resource not found */
      404: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List repositories starred by the authenticated user
   * @description Lists repositories the authenticated user has starred.
   *
   * You can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types/) via the `Accept` header:
   */
  "activity/list-repos-starred-by-authenticated-user": {
    parameters: {
      query: {
        /** @description The property to sort the results by. `created` means when the repository was starred. `updated` means when the repository was last pushed to. */
        sort?: "created" | "updated";
        /** @description The direction to sort the results by. */
        direction?: "asc" | "desc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /**
             * @description Unique identifier of the repository
             * @example 42
             */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /**
             * @description The name of the repository.
             * @example Team Environment
             */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * License Simple
             * @description License Simple
             */
            license: {
              /** @example mit */
              key: string;
              /** @example MIT License */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/licenses/mit
               */
              url: string | null;
              /** @example MIT */
              spdx_id: string | null;
              /** @example MDc6TGljZW5zZW1pdA== */
              node_id: string;
              /** Format: uri */
              html_url?: string;
            } | null;
            /**
             * Simple User
             * @description Simple User
             */
            organization?: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            } | null;
            forks: number;
            permissions?: {
              admin: boolean;
              pull: boolean;
              triage?: boolean;
              push: boolean;
              maintain?: boolean;
            };
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            /**
             * @description Whether the repository is private or public.
             * @default false
             */
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            /** @example git:github.com/octocat/Hello-World.git */
            git_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            /** @example git@github.com:octocat/Hello-World.git */
            ssh_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            /** @example https://github.com/octocat/Hello-World.git */
            clone_url: string;
            /**
             * Format: uri
             * @example git:git.example.com/octocat/Hello-World
             */
            mirror_url: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            /**
             * Format: uri
             * @example https://svn.github.com/octocat/Hello-World
             */
            svn_url: string;
            /**
             * Format: uri
             * @example https://github.com
             */
            homepage: string | null;
            language: string | null;
            /** @example 9 */
            forks_count: number;
            /** @example 80 */
            stargazers_count: number;
            /** @example 80 */
            watchers_count: number;
            /** @example 108 */
            size: number;
            /**
             * @description The default branch of the repository.
             * @example master
             */
            default_branch: string;
            /** @example 0 */
            open_issues_count: number;
            /**
             * @description Whether this repository acts as a template that can be used to generate new repositories.
             * @default false
             * @example true
             */
            is_template?: boolean;
            topics?: string[];
            /**
             * @description Whether issues are enabled.
             * @default true
             * @example true
             */
            has_issues: boolean;
            /**
             * @description Whether projects are enabled.
             * @default true
             * @example true
             */
            has_projects: boolean;
            /**
             * @description Whether the wiki is enabled.
             * @default true
             * @example true
             */
            has_wiki: boolean;
            has_pages: boolean;
            /**
             * @description Whether downloads are enabled.
             * @default true
             * @example true
             */
            has_downloads: boolean;
            /**
             * @description Whether the repository is archived.
             * @default false
             */
            archived: boolean;
            /** @description Returns whether or not this repository disabled. */
            disabled: boolean;
            /**
             * @description The repository visibility: public, private, or internal.
             * @default public
             */
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at: string | null;
            /**
             * @description Whether to allow rebase merges for pull requests.
             * @default true
             * @example true
             */
            allow_rebase_merge?: boolean;
            template_repository?: {
              id?: number;
              node_id?: string;
              name?: string;
              full_name?: string;
              owner?: {
                login?: string;
                id?: number;
                node_id?: string;
                avatar_url?: string;
                gravatar_id?: string;
                url?: string;
                html_url?: string;
                followers_url?: string;
                following_url?: string;
                gists_url?: string;
                starred_url?: string;
                subscriptions_url?: string;
                organizations_url?: string;
                repos_url?: string;
                events_url?: string;
                received_events_url?: string;
                type?: string;
                site_admin?: boolean;
              };
              private?: boolean;
              html_url?: string;
              description?: string;
              fork?: boolean;
              url?: string;
              archive_url?: string;
              assignees_url?: string;
              blobs_url?: string;
              branches_url?: string;
              collaborators_url?: string;
              comments_url?: string;
              commits_url?: string;
              compare_url?: string;
              contents_url?: string;
              contributors_url?: string;
              deployments_url?: string;
              downloads_url?: string;
              events_url?: string;
              forks_url?: string;
              git_commits_url?: string;
              git_refs_url?: string;
              git_tags_url?: string;
              git_url?: string;
              issue_comment_url?: string;
              issue_events_url?: string;
              issues_url?: string;
              keys_url?: string;
              labels_url?: string;
              languages_url?: string;
              merges_url?: string;
              milestones_url?: string;
              notifications_url?: string;
              pulls_url?: string;
              releases_url?: string;
              ssh_url?: string;
              stargazers_url?: string;
              statuses_url?: string;
              subscribers_url?: string;
              subscription_url?: string;
              tags_url?: string;
              teams_url?: string;
              trees_url?: string;
              clone_url?: string;
              mirror_url?: string;
              hooks_url?: string;
              svn_url?: string;
              homepage?: string;
              language?: string;
              forks_count?: number;
              stargazers_count?: number;
              watchers_count?: number;
              size?: number;
              default_branch?: string;
              open_issues_count?: number;
              is_template?: boolean;
              topics?: string[];
              has_issues?: boolean;
              has_projects?: boolean;
              has_wiki?: boolean;
              has_pages?: boolean;
              has_downloads?: boolean;
              archived?: boolean;
              disabled?: boolean;
              visibility?: string;
              pushed_at?: string;
              created_at?: string;
              updated_at?: string;
              permissions?: {
                admin?: boolean;
                maintain?: boolean;
                push?: boolean;
                triage?: boolean;
                pull?: boolean;
              };
              allow_rebase_merge?: boolean;
              temp_clone_token?: string;
              allow_squash_merge?: boolean;
              allow_auto_merge?: boolean;
              delete_branch_on_merge?: boolean;
              allow_update_branch?: boolean;
              allow_merge_commit?: boolean;
              subscribers_count?: number;
              network_count?: number;
            } | null;
            temp_clone_token?: string;
            /**
             * @description Whether to allow squash merges for pull requests.
             * @default true
             * @example true
             */
            allow_squash_merge?: boolean;
            /**
             * @description Whether to allow Auto-merge to be used on pull requests.
             * @default false
             * @example false
             */
            allow_auto_merge?: boolean;
            /**
             * @description Whether to delete head branches when pull requests are merged
             * @default false
             * @example false
             */
            delete_branch_on_merge?: boolean;
            /**
             * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
             * @default false
             * @example false
             */
            allow_update_branch?: boolean;
            /**
             * @description Whether to allow merge commits for pull requests.
             * @default true
             * @example true
             */
            allow_merge_commit?: boolean;
            /** @description Whether to allow forking this repo */
            allow_forking?: boolean;
            subscribers_count?: number;
            network_count?: number;
            open_issues: number;
            watchers: number;
            master_branch?: string;
            /** @example "2020-07-09T00:17:42Z" */
            starred_at?: string;
          }[];
          "application/vnd.github.v3.star+json": {
            /** Format: date-time */
            starred_at: string;
            /**
             * Repository
             * @description A git repository
             */
            repo: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            };
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List repositories watched by the authenticated user
   * @description Lists repositories the authenticated user is watching.
   */
  "activity/list-watched-repos-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
      /** @description Not modified */
      304: never;
      /** @description Requires authentication */
      401: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            message?: string;
            documentation_url?: string;
            url?: string;
            status?: string;
          };
        };
      };
    };
  };
  /**
   * List events for the authenticated user
   * @description If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.
   */
  "activity/list-events-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: string;
            type: string | null;
            /**
             * Actor
             * @description Actor
             */
            actor: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            repo: {
              id: number;
              name: string;
              /** Format: uri */
              url: string;
            };
            /**
             * Actor
             * @description Actor
             */
            org?: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            payload: {
              action?: string;
              /**
               * Issue
               * @description Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
               */
              issue?: {
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue
                 * @example https://api.github.com/repositories/42/issues/1
                 */
                url: string;
                /** Format: uri */
                repository_url: string;
                labels_url: string;
                /** Format: uri */
                comments_url: string;
                /** Format: uri */
                events_url: string;
                /** Format: uri */
                html_url: string;
                /**
                 * @description Number uniquely identifying the issue within its repository
                 * @example 42
                 */
                number: number;
                /**
                 * @description State of the issue; either 'open' or 'closed'
                 * @example open
                 */
                state: string;
                /**
                 * @description The reason for the current state
                 * @example not_planned
                 */
                state_reason?: string | null;
                /**
                 * @description Title of the issue
                 * @example Widget creation fails in Safari on OS X 10.8
                 */
                title: string;
                /**
                 * @description Contents of the issue
                 * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
                 */
                body?: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
                 * @example [
                 *   "bug",
                 *   "registration"
                 * ]
                 */
                labels: OneOf<
                  [
                    string,
                    {
                      /** Format: int64 */
                      id?: number;
                      node_id?: string;
                      /** Format: uri */
                      url?: string;
                      name?: string;
                      description?: string | null;
                      color?: string | null;
                      default?: boolean;
                    }
                  ]
                >[];
                /**
                 * Simple User
                 * @description Simple User
                 */
                assignee: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                assignees?:
                  | {
                      name?: string | null;
                      email?: string | null;
                      /** @example octocat */
                      login: string;
                      /** @example 1 */
                      id: number;
                      /** @example MDQ6VXNlcjE= */
                      node_id: string;
                      /**
                       * Format: uri
                       * @example https://github.com/images/error/octocat_happy.gif
                       */
                      avatar_url: string;
                      /** @example 41d064eb2195891e12d0413f63227ea7 */
                      gravatar_id: string | null;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat
                       */
                      url: string;
                      /**
                       * Format: uri
                       * @example https://github.com/octocat
                       */
                      html_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/followers
                       */
                      followers_url: string;
                      /** @example https://api.github.com/users/octocat/following{/other_user} */
                      following_url: string;
                      /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                      gists_url: string;
                      /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                      starred_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/subscriptions
                       */
                      subscriptions_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/orgs
                       */
                      organizations_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/repos
                       */
                      repos_url: string;
                      /** @example https://api.github.com/users/octocat/events{/privacy} */
                      events_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/received_events
                       */
                      received_events_url: string;
                      /** @example User */
                      type: string;
                      site_admin: boolean;
                      /** @example "2020-07-09T00:17:55Z" */
                      starred_at?: string;
                    }[]
                  | null;
                /**
                 * Milestone
                 * @description A collection of related issues and pull requests.
                 */
                milestone: {
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World/milestones/v1.0
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                   */
                  labels_url: string;
                  /** @example 1002604 */
                  id: number;
                  /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                  node_id: string;
                  /**
                   * @description The number of the milestone.
                   * @example 42
                   */
                  number: number;
                  /**
                   * @description The state of the milestone.
                   * @default open
                   * @example open
                   * @enum {string}
                   */
                  state: "open" | "closed";
                  /**
                   * @description The title of the milestone.
                   * @example v1.0
                   */
                  title: string;
                  /** @example Tracking milestone for version 1.0 */
                  description: string | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  creator: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /** @example 4 */
                  open_issues: number;
                  /** @example 8 */
                  closed_issues: number;
                  /**
                   * Format: date-time
                   * @example 2011-04-10T20:09:31Z
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2014-03-03T18:58:10Z
                   */
                  updated_at: string;
                  /**
                   * Format: date-time
                   * @example 2013-02-12T13:22:01Z
                   */
                  closed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2012-10-09T23:39:01Z
                   */
                  due_on: string | null;
                } | null;
                locked: boolean;
                active_lock_reason?: string | null;
                comments: number;
                pull_request?: {
                  /** Format: date-time */
                  merged_at?: string | null;
                  /** Format: uri */
                  diff_url: string | null;
                  /** Format: uri */
                  html_url: string | null;
                  /** Format: uri */
                  patch_url: string | null;
                  /** Format: uri */
                  url: string | null;
                };
                /** Format: date-time */
                closed_at: string | null;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
                draft?: boolean;
                /**
                 * Simple User
                 * @description Simple User
                 */
                closed_by?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                body_html?: string;
                body_text?: string;
                /** Format: uri */
                timeline_url?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                };
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              /**
               * Issue Comment
               * @description Comments provide a way for people to collaborate on an issue.
               */
              comment?: {
                /**
                 * @description Unique identifier of the issue comment
                 * @example 42
                 */
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue comment
                 * @example https://api.github.com/repositories/42/issues/comments/1
                 */
                url: string;
                /**
                 * @description Contents of the issue comment
                 * @example What version of Safari were you using when you observed this bug?
                 */
                body?: string;
                body_text?: string;
                body_html?: string;
                /** Format: uri */
                html_url: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                updated_at: string;
                /** Format: uri */
                issue_url: string;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              pages?: {
                page_name?: string;
                title?: string;
                summary?: string | null;
                action?: string;
                sha?: string;
                html_url?: string;
              }[];
            };
            public: boolean;
            /** Format: date-time */
            created_at: string | null;
          }[];
        };
      };
    };
  };
  /**
   * List organization events for the authenticated user
   * @description This is the user's organization dashboard. You must be authenticated as the user to view this.
   */
  "activity/list-org-events-for-authenticated-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
        /** @description The organization name. The name is not case sensitive. */
        org: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        content: {
          "application/json": {
            id: string;
            type: string | null;
            /**
             * Actor
             * @description Actor
             */
            actor: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            repo: {
              id: number;
              name: string;
              /** Format: uri */
              url: string;
            };
            /**
             * Actor
             * @description Actor
             */
            org?: {
              id: number;
              login: string;
              display_login?: string;
              gravatar_id: string | null;
              /** Format: uri */
              url: string;
              /** Format: uri */
              avatar_url: string;
            };
            payload: {
              action?: string;
              /**
               * Issue
               * @description Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
               */
              issue?: {
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue
                 * @example https://api.github.com/repositories/42/issues/1
                 */
                url: string;
                /** Format: uri */
                repository_url: string;
                labels_url: string;
                /** Format: uri */
                comments_url: string;
                /** Format: uri */
                events_url: string;
                /** Format: uri */
                html_url: string;
                /**
                 * @description Number uniquely identifying the issue within its repository
                 * @example 42
                 */
                number: number;
                /**
                 * @description State of the issue; either 'open' or 'closed'
                 * @example open
                 */
                state: string;
                /**
                 * @description The reason for the current state
                 * @example not_planned
                 */
                state_reason?: string | null;
                /**
                 * @description Title of the issue
                 * @example Widget creation fails in Safari on OS X 10.8
                 */
                title: string;
                /**
                 * @description Contents of the issue
                 * @example It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
                 */
                body?: string | null;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * @description Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
                 * @example [
                 *   "bug",
                 *   "registration"
                 * ]
                 */
                labels: OneOf<
                  [
                    string,
                    {
                      /** Format: int64 */
                      id?: number;
                      node_id?: string;
                      /** Format: uri */
                      url?: string;
                      name?: string;
                      description?: string | null;
                      color?: string | null;
                      default?: boolean;
                    }
                  ]
                >[];
                /**
                 * Simple User
                 * @description Simple User
                 */
                assignee: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                assignees?:
                  | {
                      name?: string | null;
                      email?: string | null;
                      /** @example octocat */
                      login: string;
                      /** @example 1 */
                      id: number;
                      /** @example MDQ6VXNlcjE= */
                      node_id: string;
                      /**
                       * Format: uri
                       * @example https://github.com/images/error/octocat_happy.gif
                       */
                      avatar_url: string;
                      /** @example 41d064eb2195891e12d0413f63227ea7 */
                      gravatar_id: string | null;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat
                       */
                      url: string;
                      /**
                       * Format: uri
                       * @example https://github.com/octocat
                       */
                      html_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/followers
                       */
                      followers_url: string;
                      /** @example https://api.github.com/users/octocat/following{/other_user} */
                      following_url: string;
                      /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                      gists_url: string;
                      /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                      starred_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/subscriptions
                       */
                      subscriptions_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/orgs
                       */
                      organizations_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/repos
                       */
                      repos_url: string;
                      /** @example https://api.github.com/users/octocat/events{/privacy} */
                      events_url: string;
                      /**
                       * Format: uri
                       * @example https://api.github.com/users/octocat/received_events
                       */
                      received_events_url: string;
                      /** @example User */
                      type: string;
                      site_admin: boolean;
                      /** @example "2020-07-09T00:17:55Z" */
                      starred_at?: string;
                    }[]
                  | null;
                /**
                 * Milestone
                 * @description A collection of related issues and pull requests.
                 */
                milestone: {
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World/milestones/v1.0
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
                   */
                  labels_url: string;
                  /** @example 1002604 */
                  id: number;
                  /** @example MDk6TWlsZXN0b25lMTAwMjYwNA== */
                  node_id: string;
                  /**
                   * @description The number of the milestone.
                   * @example 42
                   */
                  number: number;
                  /**
                   * @description The state of the milestone.
                   * @default open
                   * @example open
                   * @enum {string}
                   */
                  state: "open" | "closed";
                  /**
                   * @description The title of the milestone.
                   * @example v1.0
                   */
                  title: string;
                  /** @example Tracking milestone for version 1.0 */
                  description: string | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  creator: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /** @example 4 */
                  open_issues: number;
                  /** @example 8 */
                  closed_issues: number;
                  /**
                   * Format: date-time
                   * @example 2011-04-10T20:09:31Z
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2014-03-03T18:58:10Z
                   */
                  updated_at: string;
                  /**
                   * Format: date-time
                   * @example 2013-02-12T13:22:01Z
                   */
                  closed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2012-10-09T23:39:01Z
                   */
                  due_on: string | null;
                } | null;
                locked: boolean;
                active_lock_reason?: string | null;
                comments: number;
                pull_request?: {
                  /** Format: date-time */
                  merged_at?: string | null;
                  /** Format: uri */
                  diff_url: string | null;
                  /** Format: uri */
                  html_url: string | null;
                  /** Format: uri */
                  patch_url: string | null;
                  /** Format: uri */
                  url: string | null;
                };
                /** Format: date-time */
                closed_at: string | null;
                /** Format: date-time */
                created_at: string;
                /** Format: date-time */
                updated_at: string;
                draft?: boolean;
                /**
                 * Simple User
                 * @description Simple User
                 */
                closed_by?: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                body_html?: string;
                body_text?: string;
                /** Format: uri */
                timeline_url?: string;
                /**
                 * Repository
                 * @description A git repository
                 */
                repository?: {
                  /**
                   * @description Unique identifier of the repository
                   * @example 42
                   */
                  id: number;
                  /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
                  node_id: string;
                  /**
                   * @description The name of the repository.
                   * @example Team Environment
                   */
                  name: string;
                  /** @example octocat/Hello-World */
                  full_name: string;
                  /**
                   * License Simple
                   * @description License Simple
                   */
                  license: {
                    /** @example mit */
                    key: string;
                    /** @example MIT License */
                    name: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/licenses/mit
                     */
                    url: string | null;
                    /** @example MIT */
                    spdx_id: string | null;
                    /** @example MDc6TGljZW5zZW1pdA== */
                    node_id: string;
                    /** Format: uri */
                    html_url?: string;
                  } | null;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  organization?: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  forks: number;
                  permissions?: {
                    admin: boolean;
                    pull: boolean;
                    triage?: boolean;
                    push: boolean;
                    maintain?: boolean;
                  };
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  };
                  /**
                   * @description Whether the repository is private or public.
                   * @default false
                   */
                  private: boolean;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat/Hello-World
                   */
                  html_url: string;
                  /** @example This your first repo! */
                  description: string | null;
                  fork: boolean;
                  /**
                   * Format: uri
                   * @example https://api.github.com/repos/octocat/Hello-World
                   */
                  url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
                  archive_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
                  assignees_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
                  blobs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
                  branches_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
                  collaborators_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
                  comments_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
                  commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
                  compare_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
                  contents_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/contributors
                   */
                  contributors_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/deployments
                   */
                  deployments_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/downloads
                   */
                  downloads_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/events
                   */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/forks
                   */
                  forks_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
                  git_commits_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
                  git_refs_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
                  git_tags_url: string;
                  /** @example git:github.com/octocat/Hello-World.git */
                  git_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
                  issue_comment_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
                  issue_events_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
                  issues_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
                  keys_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
                  labels_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/languages
                   */
                  languages_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/merges
                   */
                  merges_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
                  milestones_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
                  notifications_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
                  pulls_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
                  releases_url: string;
                  /** @example git@github.com:octocat/Hello-World.git */
                  ssh_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/stargazers
                   */
                  stargazers_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
                  statuses_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscribers
                   */
                  subscribers_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/subscription
                   */
                  subscription_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/tags
                   */
                  tags_url: string;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/teams
                   */
                  teams_url: string;
                  /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
                  trees_url: string;
                  /** @example https://github.com/octocat/Hello-World.git */
                  clone_url: string;
                  /**
                   * Format: uri
                   * @example git:git.example.com/octocat/Hello-World
                   */
                  mirror_url: string | null;
                  /**
                   * Format: uri
                   * @example http://api.github.com/repos/octocat/Hello-World/hooks
                   */
                  hooks_url: string;
                  /**
                   * Format: uri
                   * @example https://svn.github.com/octocat/Hello-World
                   */
                  svn_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com
                   */
                  homepage: string | null;
                  language: string | null;
                  /** @example 9 */
                  forks_count: number;
                  /** @example 80 */
                  stargazers_count: number;
                  /** @example 80 */
                  watchers_count: number;
                  /** @example 108 */
                  size: number;
                  /**
                   * @description The default branch of the repository.
                   * @example master
                   */
                  default_branch: string;
                  /** @example 0 */
                  open_issues_count: number;
                  /**
                   * @description Whether this repository acts as a template that can be used to generate new repositories.
                   * @default false
                   * @example true
                   */
                  is_template?: boolean;
                  topics?: string[];
                  /**
                   * @description Whether issues are enabled.
                   * @default true
                   * @example true
                   */
                  has_issues: boolean;
                  /**
                   * @description Whether projects are enabled.
                   * @default true
                   * @example true
                   */
                  has_projects: boolean;
                  /**
                   * @description Whether the wiki is enabled.
                   * @default true
                   * @example true
                   */
                  has_wiki: boolean;
                  has_pages: boolean;
                  /**
                   * @description Whether downloads are enabled.
                   * @default true
                   * @example true
                   */
                  has_downloads: boolean;
                  /**
                   * @description Whether the repository is archived.
                   * @default false
                   */
                  archived: boolean;
                  /** @description Returns whether or not this repository disabled. */
                  disabled: boolean;
                  /**
                   * @description The repository visibility: public, private, or internal.
                   * @default public
                   */
                  visibility?: string;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:06:43Z
                   */
                  pushed_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:01:12Z
                   */
                  created_at: string | null;
                  /**
                   * Format: date-time
                   * @example 2011-01-26T19:14:43Z
                   */
                  updated_at: string | null;
                  /**
                   * @description Whether to allow rebase merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_rebase_merge?: boolean;
                  template_repository?: {
                    id?: number;
                    node_id?: string;
                    name?: string;
                    full_name?: string;
                    owner?: {
                      login?: string;
                      id?: number;
                      node_id?: string;
                      avatar_url?: string;
                      gravatar_id?: string;
                      url?: string;
                      html_url?: string;
                      followers_url?: string;
                      following_url?: string;
                      gists_url?: string;
                      starred_url?: string;
                      subscriptions_url?: string;
                      organizations_url?: string;
                      repos_url?: string;
                      events_url?: string;
                      received_events_url?: string;
                      type?: string;
                      site_admin?: boolean;
                    };
                    private?: boolean;
                    html_url?: string;
                    description?: string;
                    fork?: boolean;
                    url?: string;
                    archive_url?: string;
                    assignees_url?: string;
                    blobs_url?: string;
                    branches_url?: string;
                    collaborators_url?: string;
                    comments_url?: string;
                    commits_url?: string;
                    compare_url?: string;
                    contents_url?: string;
                    contributors_url?: string;
                    deployments_url?: string;
                    downloads_url?: string;
                    events_url?: string;
                    forks_url?: string;
                    git_commits_url?: string;
                    git_refs_url?: string;
                    git_tags_url?: string;
                    git_url?: string;
                    issue_comment_url?: string;
                    issue_events_url?: string;
                    issues_url?: string;
                    keys_url?: string;
                    labels_url?: string;
                    languages_url?: string;
                    merges_url?: string;
                    milestones_url?: string;
                    notifications_url?: string;
                    pulls_url?: string;
                    releases_url?: string;
                    ssh_url?: string;
                    stargazers_url?: string;
                    statuses_url?: string;
                    subscribers_url?: string;
                    subscription_url?: string;
                    tags_url?: string;
                    teams_url?: string;
                    trees_url?: string;
                    clone_url?: string;
                    mirror_url?: string;
                    hooks_url?: string;
                    svn_url?: string;
                    homepage?: string;
                    language?: string;
                    forks_count?: number;
                    stargazers_count?: number;
                    watchers_count?: number;
                    size?: number;
                    default_branch?: string;
                    open_issues_count?: number;
                    is_template?: boolean;
                    topics?: string[];
                    has_issues?: boolean;
                    has_projects?: boolean;
                    has_wiki?: boolean;
                    has_pages?: boolean;
                    has_downloads?: boolean;
                    archived?: boolean;
                    disabled?: boolean;
                    visibility?: string;
                    pushed_at?: string;
                    created_at?: string;
                    updated_at?: string;
                    permissions?: {
                      admin?: boolean;
                      maintain?: boolean;
                      push?: boolean;
                      triage?: boolean;
                      pull?: boolean;
                    };
                    allow_rebase_merge?: boolean;
                    temp_clone_token?: string;
                    allow_squash_merge?: boolean;
                    allow_auto_merge?: boolean;
                    delete_branch_on_merge?: boolean;
                    allow_update_branch?: boolean;
                    allow_merge_commit?: boolean;
                    subscribers_count?: number;
                    network_count?: number;
                  } | null;
                  temp_clone_token?: string;
                  /**
                   * @description Whether to allow squash merges for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_squash_merge?: boolean;
                  /**
                   * @description Whether to allow Auto-merge to be used on pull requests.
                   * @default false
                   * @example false
                   */
                  allow_auto_merge?: boolean;
                  /**
                   * @description Whether to delete head branches when pull requests are merged
                   * @default false
                   * @example false
                   */
                  delete_branch_on_merge?: boolean;
                  /**
                   * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
                   * @default false
                   * @example false
                   */
                  allow_update_branch?: boolean;
                  /**
                   * @description Whether to allow merge commits for pull requests.
                   * @default true
                   * @example true
                   */
                  allow_merge_commit?: boolean;
                  /** @description Whether to allow forking this repo */
                  allow_forking?: boolean;
                  subscribers_count?: number;
                  network_count?: number;
                  open_issues: number;
                  watchers: number;
                  master_branch?: string;
                  /** @example "2020-07-09T00:17:42Z" */
                  starred_at?: string;
                };
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              /**
               * Issue Comment
               * @description Comments provide a way for people to collaborate on an issue.
               */
              comment?: {
                /**
                 * @description Unique identifier of the issue comment
                 * @example 42
                 */
                id: number;
                node_id: string;
                /**
                 * Format: uri
                 * @description URL for the issue comment
                 * @example https://api.github.com/repositories/42/issues/comments/1
                 */
                url: string;
                /**
                 * @description Contents of the issue comment
                 * @example What version of Safari were you using when you observed this bug?
                 */
                body?: string;
                body_text?: string;
                body_html?: string;
                /** Format: uri */
                html_url: string;
                /**
                 * Simple User
                 * @description Simple User
                 */
                user: {
                  name?: string | null;
                  email?: string | null;
                  /** @example octocat */
                  login: string;
                  /** @example 1 */
                  id: number;
                  /** @example MDQ6VXNlcjE= */
                  node_id: string;
                  /**
                   * Format: uri
                   * @example https://github.com/images/error/octocat_happy.gif
                   */
                  avatar_url: string;
                  /** @example 41d064eb2195891e12d0413f63227ea7 */
                  gravatar_id: string | null;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat
                   */
                  url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/octocat
                   */
                  html_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/followers
                   */
                  followers_url: string;
                  /** @example https://api.github.com/users/octocat/following{/other_user} */
                  following_url: string;
                  /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                  gists_url: string;
                  /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                  starred_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/subscriptions
                   */
                  subscriptions_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/orgs
                   */
                  organizations_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/repos
                   */
                  repos_url: string;
                  /** @example https://api.github.com/users/octocat/events{/privacy} */
                  events_url: string;
                  /**
                   * Format: uri
                   * @example https://api.github.com/users/octocat/received_events
                   */
                  received_events_url: string;
                  /** @example User */
                  type: string;
                  site_admin: boolean;
                  /** @example "2020-07-09T00:17:55Z" */
                  starred_at?: string;
                } | null;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                created_at: string;
                /**
                 * Format: date-time
                 * @example 2011-04-14T16:00:49Z
                 */
                updated_at: string;
                /** Format: uri */
                issue_url: string;
                /**
                 * author_association
                 * @description How the author is associated with the repository.
                 * @example OWNER
                 * @enum {string}
                 */
                author_association:
                  | "COLLABORATOR"
                  | "CONTRIBUTOR"
                  | "FIRST_TIMER"
                  | "FIRST_TIME_CONTRIBUTOR"
                  | "MANNEQUIN"
                  | "MEMBER"
                  | "NONE"
                  | "OWNER";
                /**
                 * GitHub app
                 * @description GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
                 */
                performed_via_github_app?: {
                  /**
                   * @description Unique identifier of the GitHub app
                   * @example 37
                   */
                  id: number;
                  /**
                   * @description The slug name of the GitHub app
                   * @example probot-owners
                   */
                  slug?: string;
                  /** @example MDExOkludGVncmF0aW9uMQ== */
                  node_id: string;
                  /**
                   * Simple User
                   * @description Simple User
                   */
                  owner: {
                    name?: string | null;
                    email?: string | null;
                    /** @example octocat */
                    login: string;
                    /** @example 1 */
                    id: number;
                    /** @example MDQ6VXNlcjE= */
                    node_id: string;
                    /**
                     * Format: uri
                     * @example https://github.com/images/error/octocat_happy.gif
                     */
                    avatar_url: string;
                    /** @example 41d064eb2195891e12d0413f63227ea7 */
                    gravatar_id: string | null;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat
                     */
                    url: string;
                    /**
                     * Format: uri
                     * @example https://github.com/octocat
                     */
                    html_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/followers
                     */
                    followers_url: string;
                    /** @example https://api.github.com/users/octocat/following{/other_user} */
                    following_url: string;
                    /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                    gists_url: string;
                    /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                    starred_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/subscriptions
                     */
                    subscriptions_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/orgs
                     */
                    organizations_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/repos
                     */
                    repos_url: string;
                    /** @example https://api.github.com/users/octocat/events{/privacy} */
                    events_url: string;
                    /**
                     * Format: uri
                     * @example https://api.github.com/users/octocat/received_events
                     */
                    received_events_url: string;
                    /** @example User */
                    type: string;
                    site_admin: boolean;
                    /** @example "2020-07-09T00:17:55Z" */
                    starred_at?: string;
                  } | null;
                  /**
                   * @description The name of the GitHub app
                   * @example Probot Owners
                   */
                  name: string;
                  /** @example The description of the app. */
                  description: string | null;
                  /**
                   * Format: uri
                   * @example https://example.com
                   */
                  external_url: string;
                  /**
                   * Format: uri
                   * @example https://github.com/apps/super-ci
                   */
                  html_url: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  created_at: string;
                  /**
                   * Format: date-time
                   * @example 2017-07-08T16:18:44-04:00
                   */
                  updated_at: string;
                  /**
                   * @description The set of permissions for the GitHub app
                   * @example {
                   *   "issues": "read",
                   *   "deployments": "write"
                   * }
                   */
                  permissions: {
                    issues?: string;
                    checks?: string;
                    metadata?: string;
                    contents?: string;
                    deployments?: string;
                    [key: string]: string | undefined;
                  };
                  /**
                   * @description The list of events for the GitHub app
                   * @example [
                   *   "label",
                   *   "deployment"
                   * ]
                   */
                  events: string[];
                  /**
                   * @description The number of installations associated with the GitHub app
                   * @example 5
                   */
                  installations_count?: number;
                  /** @example "Iv1.25b5d1e65ffc4022" */
                  client_id?: string;
                  /** @example "1d4b2097ac622ba702d19de498f005747a8b21d3" */
                  client_secret?: string;
                  /** @example "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b" */
                  webhook_secret?: string | null;
                  /** @example "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n" */
                  pem?: string;
                } | null;
                /** Reaction Rollup */
                reactions?: {
                  /** Format: uri */
                  url: string;
                  total_count: number;
                  "+1": number;
                  "-1": number;
                  laugh: number;
                  confused: number;
                  heart: number;
                  hooray: number;
                  eyes: number;
                  rocket: number;
                };
              };
              pages?: {
                page_name?: string;
                title?: string;
                summary?: string | null;
                action?: string;
                sha?: string;
                html_url?: string;
              }[];
            };
            public: boolean;
            /** Format: date-time */
            created_at: string | null;
          }[];
        };
      };
    };
  };
  /**
   * List GPG keys for a user
   * @description Lists the GPG keys for a user. This information is accessible by anyone.
   */
  "users/list-gpg-keys-for-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 3 */
            id: number;
            primary_key_id: number | null;
            /** @example 3262EFF25BA0D270 */
            key_id: string;
            /** @example xsBNBFayYZ... */
            public_key: string;
            /**
             * @example [
             *   {
             *     "email": "octocat@users.noreply.github.com",
             *     "verified": true
             *   }
             * ]
             */
            emails: {
              email?: string;
              verified?: boolean;
            }[];
            /**
             * @example [
             *   {
             *     "id": 4,
             *     "primary_key_id": 3,
             *     "key_id": "4A595D4C72EE49C7",
             *     "public_key": "zsBNBFayYZ...",
             *     "emails": [],
             *     "subkeys": [],
             *     "can_sign": false,
             *     "can_encrypt_comms": true,
             *     "can_encrypt_storage": true,
             *     "can_certify": false,
             *     "created_at": "2016-03-24T11:31:04-06:00",
             *     "expires_at": null
             *   }
             * ]
             */
            subkeys: {
              id?: number;
              primary_key_id?: number;
              key_id?: string;
              public_key?: string;
              emails?: Record<string, never>[];
              subkeys?: Record<string, never>[];
              can_sign?: boolean;
              can_encrypt_comms?: boolean;
              can_encrypt_storage?: boolean;
              can_certify?: boolean;
              created_at?: string;
              expires_at?: string | null;
              raw_key?: string | null;
            }[];
            /** @example true */
            can_sign: boolean;
            can_encrypt_comms: boolean;
            can_encrypt_storage: boolean;
            /** @example true */
            can_certify: boolean;
            /**
             * Format: date-time
             * @example 2016-03-24T11:31:04-06:00
             */
            created_at: string;
            /** Format: date-time */
            expires_at: string | null;
            raw_key: string | null;
          }[];
        };
      };
    };
  };
  /**
   * List repositories for a user
   * @description Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.
   */
  "repos/list-for-user": {
    parameters: {
      query: {
        /** @description Limit results to repositories of the specified type. */
        type?: "all" | "owner" | "member";
        /** @description The property to sort the results by. */
        sort?: "created" | "updated" | "pushed" | "full_name";
        /** @description The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`. */
        direction?: "asc" | "desc";
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
    };
  };
  /**
   * List repositories watched by a user
   * @description Lists repositories a user is watching.
   */
  "activity/list-repos-watched-by-user": {
    parameters: {
      query: {
        /** @description The number of results per page (max 100). */
        per_page?: number;
        /** @description Page number of the results to fetch. */
        page?: number;
      };
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    responses: {
      /** @description Response */
      200: {
        headers: {
          /** @example <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last" */
          Link?: string;
        };
        content: {
          "application/json": {
            /** @example 1296269 */
            id: number;
            /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
            node_id: string;
            /** @example Hello-World */
            name: string;
            /** @example octocat/Hello-World */
            full_name: string;
            /**
             * Simple User
             * @description Simple User
             */
            owner: {
              name?: string | null;
              email?: string | null;
              /** @example octocat */
              login: string;
              /** @example 1 */
              id: number;
              /** @example MDQ6VXNlcjE= */
              node_id: string;
              /**
               * Format: uri
               * @example https://github.com/images/error/octocat_happy.gif
               */
              avatar_url: string;
              /** @example 41d064eb2195891e12d0413f63227ea7 */
              gravatar_id: string | null;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat
               */
              url: string;
              /**
               * Format: uri
               * @example https://github.com/octocat
               */
              html_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/followers
               */
              followers_url: string;
              /** @example https://api.github.com/users/octocat/following{/other_user} */
              following_url: string;
              /** @example https://api.github.com/users/octocat/gists{/gist_id} */
              gists_url: string;
              /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
              starred_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/subscriptions
               */
              subscriptions_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/orgs
               */
              organizations_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/repos
               */
              repos_url: string;
              /** @example https://api.github.com/users/octocat/events{/privacy} */
              events_url: string;
              /**
               * Format: uri
               * @example https://api.github.com/users/octocat/received_events
               */
              received_events_url: string;
              /** @example User */
              type: string;
              site_admin: boolean;
              /** @example "2020-07-09T00:17:55Z" */
              starred_at?: string;
            };
            private: boolean;
            /**
             * Format: uri
             * @example https://github.com/octocat/Hello-World
             */
            html_url: string;
            /** @example This your first repo! */
            description: string | null;
            fork: boolean;
            /**
             * Format: uri
             * @example https://api.github.com/repos/octocat/Hello-World
             */
            url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
            archive_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
            assignees_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
            blobs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
            branches_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
            collaborators_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
            comments_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
            commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
            compare_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
            contents_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/contributors
             */
            contributors_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/deployments
             */
            deployments_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/downloads
             */
            downloads_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/events
             */
            events_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/forks
             */
            forks_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
            git_commits_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
            git_refs_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
            git_tags_url: string;
            git_url?: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
            issue_comment_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
            issue_events_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
            issues_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
            keys_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
            labels_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/languages
             */
            languages_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/merges
             */
            merges_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
            milestones_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
            notifications_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
            pulls_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
            releases_url: string;
            ssh_url?: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/stargazers
             */
            stargazers_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
            statuses_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscribers
             */
            subscribers_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/subscription
             */
            subscription_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/tags
             */
            tags_url: string;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/teams
             */
            teams_url: string;
            /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
            trees_url: string;
            clone_url?: string;
            mirror_url?: string | null;
            /**
             * Format: uri
             * @example http://api.github.com/repos/octocat/Hello-World/hooks
             */
            hooks_url: string;
            svn_url?: string;
            homepage?: string | null;
            language?: string | null;
            forks_count?: number;
            stargazers_count?: number;
            watchers_count?: number;
            size?: number;
            default_branch?: string;
            open_issues_count?: number;
            is_template?: boolean;
            topics?: string[];
            has_issues?: boolean;
            has_projects?: boolean;
            has_wiki?: boolean;
            has_pages?: boolean;
            has_downloads?: boolean;
            archived?: boolean;
            disabled?: boolean;
            visibility?: string;
            /**
             * Format: date-time
             * @example 2011-01-26T19:06:43Z
             */
            pushed_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:01:12Z
             */
            created_at?: string | null;
            /**
             * Format: date-time
             * @example 2011-01-26T19:14:43Z
             */
            updated_at?: string | null;
            permissions?: {
              admin?: boolean;
              maintain?: boolean;
              push?: boolean;
              triage?: boolean;
              pull?: boolean;
            };
            /** @example admin */
            role_name?: string;
            /**
             * Repository
             * @description A git repository
             */
            template_repository?: {
              /**
               * @description Unique identifier of the repository
               * @example 42
               */
              id: number;
              /** @example MDEwOlJlcG9zaXRvcnkxMjk2MjY5 */
              node_id: string;
              /**
               * @description The name of the repository.
               * @example Team Environment
               */
              name: string;
              /** @example octocat/Hello-World */
              full_name: string;
              /**
               * License Simple
               * @description License Simple
               */
              license: {
                /** @example mit */
                key: string;
                /** @example MIT License */
                name: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/licenses/mit
                 */
                url: string | null;
                /** @example MIT */
                spdx_id: string | null;
                /** @example MDc6TGljZW5zZW1pdA== */
                node_id: string;
                /** Format: uri */
                html_url?: string;
              } | null;
              /**
               * Simple User
               * @description Simple User
               */
              organization?: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              } | null;
              forks: number;
              permissions?: {
                admin: boolean;
                pull: boolean;
                triage?: boolean;
                push: boolean;
                maintain?: boolean;
              };
              /**
               * Simple User
               * @description Simple User
               */
              owner: {
                name?: string | null;
                email?: string | null;
                /** @example octocat */
                login: string;
                /** @example 1 */
                id: number;
                /** @example MDQ6VXNlcjE= */
                node_id: string;
                /**
                 * Format: uri
                 * @example https://github.com/images/error/octocat_happy.gif
                 */
                avatar_url: string;
                /** @example 41d064eb2195891e12d0413f63227ea7 */
                gravatar_id: string | null;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat
                 */
                url: string;
                /**
                 * Format: uri
                 * @example https://github.com/octocat
                 */
                html_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/followers
                 */
                followers_url: string;
                /** @example https://api.github.com/users/octocat/following{/other_user} */
                following_url: string;
                /** @example https://api.github.com/users/octocat/gists{/gist_id} */
                gists_url: string;
                /** @example https://api.github.com/users/octocat/starred{/owner}{/repo} */
                starred_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/subscriptions
                 */
                subscriptions_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/orgs
                 */
                organizations_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/repos
                 */
                repos_url: string;
                /** @example https://api.github.com/users/octocat/events{/privacy} */
                events_url: string;
                /**
                 * Format: uri
                 * @example https://api.github.com/users/octocat/received_events
                 */
                received_events_url: string;
                /** @example User */
                type: string;
                site_admin: boolean;
                /** @example "2020-07-09T00:17:55Z" */
                starred_at?: string;
              };
              /**
               * @description Whether the repository is private or public.
               * @default false
               */
              private: boolean;
              /**
               * Format: uri
               * @example https://github.com/octocat/Hello-World
               */
              html_url: string;
              /** @example This your first repo! */
              description: string | null;
              fork: boolean;
              /**
               * Format: uri
               * @example https://api.github.com/repos/octocat/Hello-World
               */
              url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref} */
              archive_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/assignees{/user} */
              assignees_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha} */
              blobs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/branches{/branch} */
              branches_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator} */
              collaborators_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/comments{/number} */
              comments_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/commits{/sha} */
              commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head} */
              compare_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/contents/{+path} */
              contents_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/contributors
               */
              contributors_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/deployments
               */
              deployments_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/downloads
               */
              downloads_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/events
               */
              events_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/forks
               */
              forks_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/commits{/sha} */
              git_commits_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/refs{/sha} */
              git_refs_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/tags{/sha} */
              git_tags_url: string;
              /** @example git:github.com/octocat/Hello-World.git */
              git_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/comments{/number} */
              issue_comment_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues/events{/number} */
              issue_events_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/issues{/number} */
              issues_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/keys{/key_id} */
              keys_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/labels{/name} */
              labels_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/languages
               */
              languages_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/merges
               */
              merges_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/milestones{/number} */
              milestones_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating} */
              notifications_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/pulls{/number} */
              pulls_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/releases{/id} */
              releases_url: string;
              /** @example git@github.com:octocat/Hello-World.git */
              ssh_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/stargazers
               */
              stargazers_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/statuses/{sha} */
              statuses_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscribers
               */
              subscribers_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/subscription
               */
              subscription_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/tags
               */
              tags_url: string;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/teams
               */
              teams_url: string;
              /** @example http://api.github.com/repos/octocat/Hello-World/git/trees{/sha} */
              trees_url: string;
              /** @example https://github.com/octocat/Hello-World.git */
              clone_url: string;
              /**
               * Format: uri
               * @example git:git.example.com/octocat/Hello-World
               */
              mirror_url: string | null;
              /**
               * Format: uri
               * @example http://api.github.com/repos/octocat/Hello-World/hooks
               */
              hooks_url: string;
              /**
               * Format: uri
               * @example https://svn.github.com/octocat/Hello-World
               */
              svn_url: string;
              /**
               * Format: uri
               * @example https://github.com
               */
              homepage: string | null;
              language: string | null;
              /** @example 9 */
              forks_count: number;
              /** @example 80 */
              stargazers_count: number;
              /** @example 80 */
              watchers_count: number;
              /** @example 108 */
              size: number;
              /**
               * @description The default branch of the repository.
               * @example master
               */
              default_branch: string;
              /** @example 0 */
              open_issues_count: number;
              /**
               * @description Whether this repository acts as a template that can be used to generate new repositories.
               * @default false
               * @example true
               */
              is_template?: boolean;
              topics?: string[];
              /**
               * @description Whether issues are enabled.
               * @default true
               * @example true
               */
              has_issues: boolean;
              /**
               * @description Whether projects are enabled.
               * @default true
               * @example true
               */
              has_projects: boolean;
              /**
               * @description Whether the wiki is enabled.
               * @default true
               * @example true
               */
              has_wiki: boolean;
              has_pages: boolean;
              /**
               * @description Whether downloads are enabled.
               * @default true
               * @example true
               */
              has_downloads: boolean;
              /**
               * @description Whether the repository is archived.
               * @default false
               */
              archived: boolean;
              /** @description Returns whether or not this repository disabled. */
              disabled: boolean;
              /**
               * @description The repository visibility: public, private, or internal.
               * @default public
               */
              visibility?: string;
              /**
               * Format: date-time
               * @example 2011-01-26T19:06:43Z
               */
              pushed_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:01:12Z
               */
              created_at: string | null;
              /**
               * Format: date-time
               * @example 2011-01-26T19:14:43Z
               */
              updated_at: string | null;
              /**
               * @description Whether to allow rebase merges for pull requests.
               * @default true
               * @example true
               */
              allow_rebase_merge?: boolean;
              template_repository?: {
                id?: number;
                node_id?: string;
                name?: string;
                full_name?: string;
                owner?: {
                  login?: string;
                  id?: number;
                  node_id?: string;
                  avatar_url?: string;
                  gravatar_id?: string;
                  url?: string;
                  html_url?: string;
                  followers_url?: string;
                  following_url?: string;
                  gists_url?: string;
                  starred_url?: string;
                  subscriptions_url?: string;
                  organizations_url?: string;
                  repos_url?: string;
                  events_url?: string;
                  received_events_url?: string;
                  type?: string;
                  site_admin?: boolean;
                };
                private?: boolean;
                html_url?: string;
                description?: string;
                fork?: boolean;
                url?: string;
                archive_url?: string;
                assignees_url?: string;
                blobs_url?: string;
                branches_url?: string;
                collaborators_url?: string;
                comments_url?: string;
                commits_url?: string;
                compare_url?: string;
                contents_url?: string;
                contributors_url?: string;
                deployments_url?: string;
                downloads_url?: string;
                events_url?: string;
                forks_url?: string;
                git_commits_url?: string;
                git_refs_url?: string;
                git_tags_url?: string;
                git_url?: string;
                issue_comment_url?: string;
                issue_events_url?: string;
                issues_url?: string;
                keys_url?: string;
                labels_url?: string;
                languages_url?: string;
                merges_url?: string;
                milestones_url?: string;
                notifications_url?: string;
                pulls_url?: string;
                releases_url?: string;
                ssh_url?: string;
                stargazers_url?: string;
                statuses_url?: string;
                subscribers_url?: string;
                subscription_url?: string;
                tags_url?: string;
                teams_url?: string;
                trees_url?: string;
                clone_url?: string;
                mirror_url?: string;
                hooks_url?: string;
                svn_url?: string;
                homepage?: string;
                language?: string;
                forks_count?: number;
                stargazers_count?: number;
                watchers_count?: number;
                size?: number;
                default_branch?: string;
                open_issues_count?: number;
                is_template?: boolean;
                topics?: string[];
                has_issues?: boolean;
                has_projects?: boolean;
                has_wiki?: boolean;
                has_pages?: boolean;
                has_downloads?: boolean;
                archived?: boolean;
                disabled?: boolean;
                visibility?: string;
                pushed_at?: string;
                created_at?: string;
                updated_at?: string;
                permissions?: {
                  admin?: boolean;
                  maintain?: boolean;
                  push?: boolean;
                  triage?: boolean;
                  pull?: boolean;
                };
                allow_rebase_merge?: boolean;
                temp_clone_token?: string;
                allow_squash_merge?: boolean;
                allow_auto_merge?: boolean;
                delete_branch_on_merge?: boolean;
                allow_update_branch?: boolean;
                allow_merge_commit?: boolean;
                subscribers_count?: number;
                network_count?: number;
              } | null;
              temp_clone_token?: string;
              /**
               * @description Whether to allow squash merges for pull requests.
               * @default true
               * @example true
               */
              allow_squash_merge?: boolean;
              /**
               * @description Whether to allow Auto-merge to be used on pull requests.
               * @default false
               * @example false
               */
              allow_auto_merge?: boolean;
              /**
               * @description Whether to delete head branches when pull requests are merged
               * @default false
               * @example false
               */
              delete_branch_on_merge?: boolean;
              /**
               * @description Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
               * @default false
               * @example false
               */
              allow_update_branch?: boolean;
              /**
               * @description Whether to allow merge commits for pull requests.
               * @default true
               * @example true
               */
              allow_merge_commit?: boolean;
              /** @description Whether to allow forking this repo */
              allow_forking?: boolean;
              subscribers_count?: number;
              network_count?: number;
              open_issues: number;
              watchers: number;
              master_branch?: string;
              /** @example "2020-07-09T00:17:42Z" */
              starred_at?: string;
            } | null;
            temp_clone_token?: string;
            delete_branch_on_merge?: boolean;
            subscribers_count?: number;
            network_count?: number;
            /**
             * Code Of Conduct
             * @description Code Of Conduct
             */
            code_of_conduct?: {
              /** @example contributor_covenant */
              key: string;
              /** @example Contributor Covenant */
              name: string;
              /**
               * Format: uri
               * @example https://api.github.com/codes_of_conduct/contributor_covenant
               */
              url: string;
              /**
               * @example # Contributor Covenant Code of Conduct
               *
               * ## Our Pledge
               *
               * In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
               *
               * ## Our Standards
               *
               * Examples of behavior that contributes to creating a positive environment include:
               *
               * * Using welcoming and inclusive language
               * * Being respectful of differing viewpoints and experiences
               * * Gracefully accepting constructive criticism
               * * Focusing on what is best for the community
               * * Showing empathy towards other community members
               *
               * Examples of unacceptable behavior by participants include:
               *
               * * The use of sexualized language or imagery and unwelcome sexual attention or advances
               * * Trolling, insulting/derogatory comments, and personal or political attacks
               * * Public or private harassment
               * * Publishing others' private information, such as a physical or electronic address, without explicit permission
               * * Other conduct which could reasonably be considered inappropriate in a professional setting
               *
               * ## Our Responsibilities
               *
               * Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
               *                   to any instances of unacceptable behavior.
               *
               * Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
               *
               * ## Scope
               *
               * This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
               *                   posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
               *
               * ## Enforcement
               *
               * Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
               *
               * Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
               *
               * ## Attribution
               *
               * This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
               *
               * [homepage]: http://contributor-covenant.org
               * [version]: http://contributor-covenant.org/version/1/4/
               */
              body?: string;
              /** Format: uri */
              html_url: string | null;
            };
            license?: {
              key?: string;
              name?: string;
              spdx_id?: string;
              url?: string;
              node_id?: string;
            } | null;
            /** @example 0 */
            forks?: number;
            /** @example 0 */
            open_issues?: number;
            /** @example 0 */
            watchers?: number;
            allow_forking?: boolean;
          }[];
        };
      };
    };
  };
  /**
   * Suspend a user
   * @description If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.
   *
   * You can suspend any user account except your own.
   *
   * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs)."
   */
  "enterprise-admin/suspend-user": {
    parameters: {
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description The reason the user is being suspended. This message will be logged in the [audit log](https://docs.github.com/github-ae@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to "Suspended via API by _SITE\_ADMINISTRATOR_", where _SITE\_ADMINISTRATOR_ is the person who performed the action. */
          reason?: string;
        } | null;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
  /**
   * Unsuspend a user
   * @description If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.
   */
  "enterprise-admin/unsuspend-user": {
    parameters: {
      path: {
        /** @description The handle for the GitHub user account. */
        username: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description The reason the user is being unsuspended. This message will be logged in the [audit log](https://docs.github.com/github-ae@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to "Unsuspended via API by _SITE\_ADMINISTRATOR_", where _SITE\_ADMINISTRATOR_ is the person who performed the action. */
          reason?: string;
        } | null;
      };
    };
    responses: {
      /** @description Response */
      204: never;
    };
  };
}

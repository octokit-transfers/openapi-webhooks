{
  "openapi": "3.1.0",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official Webhooks OpenAPI spec + Octokit extension",
    "description": "Webhooks OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": { "name": "MIT", "url": "https://spdx.org/licenses/MIT" },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    },
    "x-github-plan": "ghes",
    "x-github-release": 3.4
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    { "name": "dependabot", "description": "Endpoints to manage Dependabot." },
    {
      "name": "dependency-graph",
      "description": "Endpoints to access Dependency Graph features."
    },
    { "name": "gists", "description": "View, modify your gists." },
    { "name": "git", "description": "Raw Git functionality." },
    { "name": "gitignore", "description": "View gitignore templates" },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    { "name": "issues", "description": "Interact with GitHub Issues." },
    { "name": "licenses", "description": "View various OSS licenses." },
    { "name": "markdown", "description": "Render GitHub flavored markdown" },
    {
      "name": "merge-queue",
      "description": "Interact with GitHub Merge Queues."
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    { "name": "migrations", "description": "Move projects to or from GitHub." },
    {
      "name": "oidc",
      "description": "Endpoints to manage GitHub OIDC configuration using the REST API."
    },
    { "name": "orgs", "description": "Interact with GitHub Orgs." },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    { "name": "projects", "description": "Interact with GitHub Projects." },
    { "name": "pulls", "description": "Interact with GitHub Pull Requests." },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    { "name": "repos", "description": "Interact with GitHub Repos." },
    { "name": "search", "description": "Look for stuff on GitHub." },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    { "name": "teams", "description": "Interact with GitHub Teams." },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    },
    { "name": "enterprise-admin", "description": "Enterprise Administration" }
  ],
  "servers": [
    {
      "url": "{protocol}://{hostname}/api/v3",
      "variables": {
        "hostname": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud hostname",
          "default": "HOSTNAME"
        },
        "protocol": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud protocol",
          "default": "http"
        }
      }
    }
  ],
  "externalDocs": {
    "description": "GitHub Enterprise Developer Docs",
    "url": "https://docs.github.com/enterprise-server@3.4/rest/"
  },
  "components": {
    "schemas": {
      "root": {
        "type": "object",
        "properties": {
          "current_user_url": { "type": "string", "format": "uri-template" },
          "current_user_authorizations_html_url": {
            "type": "string",
            "format": "uri-template"
          },
          "authorizations_url": { "type": "string", "format": "uri-template" },
          "code_search_url": { "type": "string", "format": "uri-template" },
          "commit_search_url": { "type": "string", "format": "uri-template" },
          "emails_url": { "type": "string", "format": "uri-template" },
          "emojis_url": { "type": "string", "format": "uri-template" },
          "events_url": { "type": "string", "format": "uri-template" },
          "feeds_url": { "type": "string", "format": "uri-template" },
          "followers_url": { "type": "string", "format": "uri-template" },
          "following_url": { "type": "string", "format": "uri-template" },
          "gists_url": { "type": "string", "format": "uri-template" },
          "hub_url": { "type": "string", "format": "uri-template" },
          "issue_search_url": { "type": "string", "format": "uri-template" },
          "issues_url": { "type": "string", "format": "uri-template" },
          "keys_url": { "type": "string", "format": "uri-template" },
          "label_search_url": { "type": "string", "format": "uri-template" },
          "notifications_url": { "type": "string", "format": "uri-template" },
          "organization_url": { "type": "string", "format": "uri-template" },
          "organization_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "organization_teams_url": {
            "type": "string",
            "format": "uri-template"
          },
          "public_gists_url": { "type": "string", "format": "uri-template" },
          "rate_limit_url": { "type": "string", "format": "uri-template" },
          "repository_url": { "type": "string", "format": "uri-template" },
          "repository_search_url": {
            "type": "string",
            "format": "uri-template"
          },
          "current_user_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "starred_url": { "type": "string", "format": "uri-template" },
          "starred_gists_url": { "type": "string", "format": "uri-template" },
          "topic_search_url": { "type": "string", "format": "uri-template" },
          "user_url": { "type": "string", "format": "uri-template" },
          "user_organizations_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_repositories_url": {
            "type": "string",
            "format": "uri-template"
          },
          "user_search_url": { "type": "string", "format": "uri-template" }
        },
        "required": [
          "current_user_url",
          "current_user_authorizations_html_url",
          "authorizations_url",
          "code_search_url",
          "commit_search_url",
          "emails_url",
          "emojis_url",
          "events_url",
          "feeds_url",
          "followers_url",
          "following_url",
          "gists_url",
          "hub_url",
          "issue_search_url",
          "issues_url",
          "keys_url",
          "label_search_url",
          "notifications_url",
          "organization_url",
          "organization_repositories_url",
          "organization_teams_url",
          "public_gists_url",
          "rate_limit_url",
          "repository_url",
          "repository_search_url",
          "current_user_repositories_url",
          "starred_url",
          "starred_gists_url",
          "user_url",
          "user_organizations_url",
          "user_repositories_url",
          "user_search_url"
        ]
      },
      "global-hook": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "events": { "type": "array", "items": { "type": "string" } },
          "config": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "content_type": { "type": "string" },
              "insecure_ssl": { "type": "string" },
              "secret": { "type": "string" }
            }
          },
          "updated_at": { "type": "string" },
          "created_at": { "type": "string" },
          "url": { "type": "string" },
          "ping_url": { "type": "string" }
        }
      },
      "global-hook-2": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "events": { "type": "array", "items": { "type": "string" } },
          "config": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "content_type": { "type": "string" },
              "insecure_ssl": { "type": "string" }
            }
          },
          "updated_at": { "type": "string" },
          "created_at": { "type": "string" },
          "url": { "type": "string" },
          "ping_url": { "type": "string" }
        }
      },
      "public-key-full": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "key": { "type": "string" },
          "user_id": { "type": ["integer", "null"] },
          "repository_id": { "type": ["integer", "null"] },
          "url": { "type": "string" },
          "title": { "type": "string" },
          "read_only": { "type": "boolean" },
          "verified": { "type": "boolean" },
          "created_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "id",
          "key",
          "url",
          "title",
          "verified",
          "created_at",
          "read_only",
          "last_used",
          "user_id",
          "repository_id"
        ]
      },
      "ldap-mapping-team": {
        "type": "object",
        "properties": {
          "ldap_dn": { "type": "string" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "html_url": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "privacy": { "type": "string" },
          "permission": { "type": "string" },
          "members_url": { "type": "string" },
          "repositories_url": { "type": "string" },
          "parent": { "type": ["null"] }
        }
      },
      "ldap-mapping-user": {
        "title": "Ldap Private User",
        "description": "Ldap Private User",
        "type": "object",
        "properties": {
          "ldap_dn": { "type": "string" },
          "login": { "type": "string", "examples": ["octocat"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": { "type": "string", "examples": ["MDQ6VXNlcjE="] },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "gravatar_id": {
            "type": ["string", "null"],
            "examples": ["41d064eb2195891e12d0413f63227ea7"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/followers"]
          },
          "following_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/following{/other_user}"
            ]
          },
          "gists_url": {
            "type": "string",
            "examples": ["https://api.github.com/users/octocat/gists{/gist_id}"]
          },
          "starred_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/starred{/owner}{/repo}"
            ]
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/subscriptions"]
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/orgs"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/repos"]
          },
          "events_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/events{/privacy}"
            ]
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/received_events"]
          },
          "type": { "type": "string", "examples": ["User"] },
          "site_admin": { "type": "boolean" },
          "name": {
            "type": ["string", "null"],
            "examples": ["monalisa octocat"]
          },
          "company": { "type": ["string", "null"], "examples": ["GitHub"] },
          "blog": {
            "type": ["string", "null"],
            "examples": ["https://github.com/blog"]
          },
          "location": {
            "type": ["string", "null"],
            "examples": ["San Francisco"]
          },
          "email": {
            "type": ["string", "null"],
            "format": "email",
            "examples": ["octocat@github.com"]
          },
          "hireable": { "type": ["boolean", "null"] },
          "bio": {
            "type": ["string", "null"],
            "examples": ["There once was..."]
          },
          "twitter_username": {
            "type": ["string", "null"],
            "examples": ["monalisa"]
          },
          "public_repos": { "type": "integer", "examples": [2] },
          "public_gists": { "type": "integer", "examples": [1] },
          "followers": { "type": "integer", "examples": [20] },
          "following": { "type": "integer", "examples": [0] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "private_gists": { "type": "integer", "examples": [81] },
          "total_private_repos": { "type": "integer", "examples": [100] },
          "owned_private_repos": { "type": "integer", "examples": [100] },
          "disk_usage": { "type": "integer", "examples": [10000] },
          "collaborators": { "type": "integer", "examples": [8] },
          "two_factor_authentication": {
            "type": "boolean",
            "examples": [true]
          },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": { "type": "integer" },
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" }
            },
            "required": ["collaborators", "name", "space", "private_repos"]
          },
          "suspended_at": { "type": "string", "format": "date-time" },
          "business_plus": { "type": "boolean" }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at",
          "collaborators",
          "disk_usage",
          "owned_private_repos",
          "private_gists",
          "total_private_repos",
          "two_factor_authentication"
        ]
      },
      "organization-simple": {
        "title": "Organization Simple",
        "description": "A GitHub organization.",
        "type": "object",
        "properties": {
          "login": { "type": "string", "examples": ["github"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDEyOk9yZ2FuaXphdGlvbjE="]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/repos"]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/events"]
          },
          "hooks_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/hooks"]
          },
          "issues_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/issues"]
          },
          "members_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/members{/member}"]
          },
          "public_members_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/orgs/github/public_members{/member}"
            ]
          },
          "avatar_url": {
            "type": "string",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["A great organization"]
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description"
        ]
      },
      "pre-receive-environment": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "image_url": { "type": "string" },
          "url": { "type": "string" },
          "html_url": { "type": "string" },
          "default_environment": { "type": "boolean" },
          "created_at": { "type": "string" },
          "hooks_count": { "type": "integer" },
          "download": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "state": { "type": "string" },
              "downloaded_at": { "type": ["string", "null"] },
              "message": { "type": ["string", "null"] }
            }
          }
        }
      },
      "pre-receive-environment-download-status": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "state": { "type": "string" },
          "downloaded_at": { "type": ["string", "null"] },
          "message": { "type": ["string", "null"] }
        }
      },
      "pre-receive-hook": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "enforcement": { "type": "string" },
          "script": { "type": "string" },
          "script_repository": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "full_name": { "type": "string" },
              "url": { "type": "string" },
              "html_url": { "type": "string" }
            }
          },
          "environment": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "image_url": { "type": "string" },
              "url": { "type": "string" },
              "html_url": { "type": "string" },
              "default_environment": { "type": "boolean" },
              "created_at": { "type": "string" },
              "hooks_count": { "type": "integer" },
              "download": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "state": { "type": "string" },
                  "downloaded_at": { "type": ["string", "null"] },
                  "message": { "type": ["string", "null"] }
                }
              }
            }
          },
          "allow_downstream_configuration": { "type": "boolean" }
        }
      },
      "simple-user": {
        "title": "Simple User",
        "description": "A GitHub user.",
        "type": "object",
        "properties": {
          "name": { "type": ["string", "null"] },
          "email": { "type": ["string", "null"] },
          "login": { "type": "string", "examples": ["octocat"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": { "type": "string", "examples": ["MDQ6VXNlcjE="] },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "gravatar_id": {
            "type": ["string", "null"],
            "examples": ["41d064eb2195891e12d0413f63227ea7"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/followers"]
          },
          "following_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/following{/other_user}"
            ]
          },
          "gists_url": {
            "type": "string",
            "examples": ["https://api.github.com/users/octocat/gists{/gist_id}"]
          },
          "starred_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/starred{/owner}{/repo}"
            ]
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/subscriptions"]
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/orgs"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/repos"]
          },
          "events_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/events{/privacy}"
            ]
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/received_events"]
          },
          "type": { "type": "string", "examples": ["User"] },
          "site_admin": { "type": "boolean" },
          "starred_at": {
            "type": "string",
            "examples": ["\"2020-07-09T00:17:55Z\""]
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "app-permissions": {
        "title": "App Permissions",
        "type": "object",
        "description": "The permissions granted to the user-to-server access token.",
        "properties": {
          "actions": {
            "type": "string",
            "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
            "enum": ["read", "write"]
          },
          "administration": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
            "enum": ["read", "write"]
          },
          "checks": {
            "type": "string",
            "description": "The level of permission to grant the access token for checks on code.",
            "enum": ["read", "write"]
          },
          "contents": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
            "enum": ["read", "write"]
          },
          "deployments": {
            "type": "string",
            "description": "The level of permission to grant the access token for deployments and deployment statuses.",
            "enum": ["read", "write"]
          },
          "environments": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing repository environments.",
            "enum": ["read", "write"]
          },
          "issues": {
            "type": "string",
            "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
            "enum": ["read", "write"]
          },
          "metadata": {
            "type": "string",
            "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
            "enum": ["read", "write"]
          },
          "packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
            "enum": ["read", "write"]
          },
          "pages": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
            "enum": ["read", "write"]
          },
          "pull_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
            "enum": ["read", "write"]
          },
          "repository_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
            "enum": ["read", "write"]
          },
          "repository_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
            "enum": ["read", "write", "admin"]
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
            "enum": ["read", "write"]
          },
          "secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository secrets.",
            "enum": ["read", "write"]
          },
          "security_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
            "enum": ["read", "write"]
          },
          "single_file": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage just a single file.",
            "enum": ["read", "write"]
          },
          "statuses": {
            "type": "string",
            "description": "The level of permission to grant the access token for commit statuses.",
            "enum": ["read", "write"]
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage Dependabot alerts.",
            "enum": ["read", "write"]
          },
          "workflows": {
            "type": "string",
            "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
            "enum": ["write"]
          },
          "members": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization teams and members.",
            "enum": ["read", "write"]
          },
          "organization_administration": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage access to an organization.",
            "enum": ["read", "write"]
          },
          "organization_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
            "enum": ["read", "write"]
          },
          "organization_plan": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing an organization's plan.",
            "enum": ["read"]
          },
          "organization_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
            "enum": ["read", "write", "admin"]
          },
          "organization_packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
            "enum": ["read", "write"]
          },
          "organization_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization secrets.",
            "enum": ["read", "write"]
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
            "enum": ["read", "write"]
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
            "enum": ["read", "write"]
          },
          "team_discussions": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage team discussions and related comments.",
            "enum": ["read", "write"]
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        }
      },
      "scoped-installation": {
        "title": "Scoped Installation",
        "type": "object",
        "properties": {
          "permissions": { "$ref": "#/components/schemas/app-permissions" },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": ["all", "selected"]
          },
          "single_file_name": {
            "type": ["string", "null"],
            "examples": ["config.yaml"]
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "examples": [true]
          },
          "single_file_paths": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["config.yml", ".github/issue_TEMPLATE.md"]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/repos"]
          },
          "account": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "permissions",
          "repository_selection",
          "single_file_name",
          "repositories_url",
          "account"
        ]
      },
      "authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "url": { "type": "string", "format": "uri" },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": ["array", "null"],
            "items": { "type": "string" }
          },
          "token": { "type": "string" },
          "token_last_eight": { "type": ["string", "null"] },
          "hashed_token": { "type": ["string", "null"] },
          "app": {
            "type": "object",
            "properties": {
              "client_id": { "type": "string" },
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["client_id", "name", "url"]
          },
          "note": { "type": ["string", "null"] },
          "note_url": { "type": ["string", "null"], "format": "uri" },
          "updated_at": { "type": "string", "format": "date-time" },
          "created_at": { "type": "string", "format": "date-time" },
          "fingerprint": { "type": ["string", "null"] },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "installation": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/scoped-installation" }
            ]
          },
          "expires_at": { "type": ["string", "null"], "format": "date-time" }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at",
          "expires_at"
        ]
      },
      "integration": {
        "title": "GitHub app",
        "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the GitHub app",
            "type": "integer",
            "examples": [37]
          },
          "slug": {
            "description": "The slug name of the GitHub app",
            "type": "string",
            "examples": ["probot-owners"]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDExOkludGVncmF0aW9uMQ=="]
          },
          "owner": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "name": {
            "description": "The name of the GitHub app",
            "type": "string",
            "examples": ["Probot Owners"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["The description of the app."]
          },
          "external_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://example.com"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/apps/super-ci"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2017-07-08T16:18:44-04:00"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2017-07-08T16:18:44-04:00"]
          },
          "permissions": {
            "description": "The set of permissions for the GitHub app",
            "type": "object",
            "properties": {
              "issues": { "type": "string" },
              "checks": { "type": "string" },
              "metadata": { "type": "string" },
              "contents": { "type": "string" },
              "deployments": { "type": "string" }
            },
            "additionalProperties": { "type": "string" },
            "example": { "issues": "read", "deployments": "write" }
          },
          "events": {
            "description": "The list of events for the GitHub app",
            "type": "array",
            "items": { "type": "string" },
            "examples": ["label", "deployment"]
          },
          "installations_count": {
            "description": "The number of installations associated with the GitHub app",
            "type": "integer",
            "examples": [5]
          },
          "client_id": {
            "type": "string",
            "examples": ["\"Iv1.25b5d1e65ffc4022\""]
          },
          "client_secret": {
            "type": "string",
            "examples": ["\"1d4b2097ac622ba702d19de498f005747a8b21d3\""]
          },
          "webhook_secret": {
            "type": ["string", "null"],
            "examples": ["\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\""]
          },
          "pem": {
            "type": "string",
            "examples": [
              "\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\""
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "name",
          "description",
          "external_url",
          "html_url",
          "created_at",
          "updated_at",
          "permissions",
          "events"
        ]
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "url": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "validation-error-simple": {
        "title": "Validation Error Simple",
        "description": "Validation Error Simple",
        "type": "object",
        "required": ["message", "documentation_url"],
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "errors": { "type": "array", "items": { "type": "string" } }
        }
      },
      "webhook-config-url": {
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "format": "uri",
        "examples": ["https://example.com/webhook"]
      },
      "webhook-config-content-type": {
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "examples": ["\"json\""]
      },
      "webhook-config-secret": {
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.4/webhooks/event-payloads/#delivery-headers).",
        "examples": ["\"********\""]
      },
      "webhook-config-insecure-ssl": {
        "oneOf": [
          {
            "type": "string",
            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
            "examples": ["\"0\""]
          },
          { "type": "number" }
        ]
      },
      "webhook-config": {
        "title": "Webhook Configuration",
        "description": "Configuration object of the webhook",
        "type": "object",
        "properties": {
          "url": { "$ref": "#/components/schemas/webhook-config-url" },
          "content_type": {
            "$ref": "#/components/schemas/webhook-config-content-type"
          },
          "secret": { "$ref": "#/components/schemas/webhook-config-secret" },
          "insecure_ssl": {
            "$ref": "#/components/schemas/webhook-config-insecure-ssl"
          }
        }
      },
      "hook-delivery-item": {
        "title": "Simple webhook delivery",
        "description": "Delivery made by a webhook, without request and response information.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the webhook delivery.",
            "type": "integer",
            "examples": [42]
          },
          "guid": {
            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
            "type": "string",
            "examples": ["58474f00-b361-11eb-836d-0e4f3503ccbe"]
          },
          "delivered_at": {
            "description": "Time when the webhook delivery occurred.",
            "type": "string",
            "format": "date-time",
            "examples": ["2021-05-12T20:33:44Z"]
          },
          "redelivery": {
            "description": "Whether the webhook delivery is a redelivery.",
            "type": "boolean",
            "examples": [false]
          },
          "duration": {
            "description": "Time spent delivering.",
            "type": "number",
            "examples": [0.03]
          },
          "status": {
            "description": "Describes the response returned after attempting the delivery.",
            "type": "string",
            "examples": ["failed to connect"]
          },
          "status_code": {
            "description": "Status code received when delivery was made.",
            "type": "integer",
            "examples": [502]
          },
          "event": {
            "description": "The event that triggered the delivery.",
            "type": "string",
            "examples": ["issues"]
          },
          "action": {
            "description": "The type of activity for the event that triggered the delivery.",
            "type": ["string", "null"],
            "examples": ["opened"]
          },
          "installation_id": {
            "description": "The id of the GitHub App installation associated with this event.",
            "type": ["integer", "null"],
            "examples": [123]
          },
          "repository_id": {
            "description": "The id of the repository associated with this event.",
            "type": ["integer", "null"],
            "examples": [123]
          }
        },
        "required": [
          "id",
          "guid",
          "delivered_at",
          "redelivery",
          "duration",
          "status",
          "status_code",
          "event",
          "action",
          "installation_id",
          "repository_id"
        ]
      },
      "scim-error": {
        "title": "Scim Error",
        "description": "Scim Error",
        "type": "object",
        "properties": {
          "message": { "type": ["string", "null"] },
          "documentation_url": { "type": ["string", "null"] },
          "detail": { "type": ["string", "null"] },
          "status": { "type": "integer" },
          "scimType": { "type": ["string", "null"] },
          "schemas": { "type": "array", "items": { "type": "string" } }
        }
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": ["message", "documentation_url"],
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["code"],
              "properties": {
                "resource": { "type": "string" },
                "field": { "type": "string" },
                "message": { "type": "string" },
                "code": { "type": "string" },
                "index": { "type": "integer" },
                "value": {
                  "oneOf": [
                    { "type": ["string", "null"] },
                    { "type": ["integer", "null"] },
                    { "type": ["array", "null"], "items": { "type": "string" } }
                  ]
                }
              }
            }
          }
        }
      },
      "hook-delivery": {
        "title": "Webhook delivery",
        "description": "Delivery made by a webhook.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the delivery.",
            "type": "integer",
            "examples": [42]
          },
          "guid": {
            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
            "type": "string",
            "examples": ["58474f00-b361-11eb-836d-0e4f3503ccbe"]
          },
          "delivered_at": {
            "description": "Time when the delivery was delivered.",
            "type": "string",
            "format": "date-time",
            "examples": ["2021-05-12T20:33:44Z"]
          },
          "redelivery": {
            "description": "Whether the delivery is a redelivery.",
            "type": "boolean",
            "examples": [false]
          },
          "duration": {
            "description": "Time spent delivering.",
            "type": "number",
            "examples": [0.03]
          },
          "status": {
            "description": "Description of the status of the attempted delivery",
            "type": "string",
            "examples": ["failed to connect"]
          },
          "status_code": {
            "description": "Status code received when delivery was made.",
            "type": "integer",
            "examples": [502]
          },
          "event": {
            "description": "The event that triggered the delivery.",
            "type": "string",
            "examples": ["issues"]
          },
          "action": {
            "description": "The type of activity for the event that triggered the delivery.",
            "type": ["string", "null"],
            "examples": ["opened"]
          },
          "installation_id": {
            "description": "The id of the GitHub App installation associated with this event.",
            "type": ["integer", "null"],
            "examples": [123]
          },
          "repository_id": {
            "description": "The id of the repository associated with this event.",
            "type": ["integer", "null"],
            "examples": [123]
          },
          "url": {
            "description": "The URL target of the delivery.",
            "type": "string",
            "examples": ["https://www.example.com"]
          },
          "request": {
            "type": "object",
            "properties": {
              "headers": {
                "description": "The request headers sent with the webhook delivery.",
                "type": ["object", "null"],
                "additionalProperties": true
              },
              "payload": {
                "description": "The webhook payload.",
                "type": ["object", "null"],
                "additionalProperties": true
              }
            },
            "required": ["headers", "payload"]
          },
          "response": {
            "type": "object",
            "properties": {
              "headers": {
                "description": "The response headers received when the delivery was made.",
                "type": ["object", "null"],
                "additionalProperties": true
              },
              "payload": {
                "description": "The response payload received.",
                "type": ["string", "null"],
                "additionalProperties": true
              }
            },
            "required": ["headers", "payload"]
          }
        },
        "required": [
          "id",
          "guid",
          "delivered_at",
          "redelivery",
          "duration",
          "status",
          "status_code",
          "event",
          "action",
          "installation_id",
          "repository_id",
          "request",
          "response"
        ]
      },
      "enterprise": {
        "title": "Enterprise",
        "description": "An enterprise on GitHub.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the enterprise.",
            "type": ["string", "null"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/enterprises/octo-business"]
          },
          "website_url": {
            "description": "The enterprise's website URL.",
            "type": ["string", "null"],
            "format": "uri"
          },
          "id": {
            "description": "Unique identifier of the enterprise",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": {
            "description": "The name of the enterprise.",
            "type": "string",
            "examples": ["Octo Business"]
          },
          "slug": {
            "description": "The slug url identifier for the enterprise.",
            "type": "string",
            "examples": ["octo-business"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2019-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2019-01-26T19:14:43Z"]
          },
          "avatar_url": { "type": "string", "format": "uri" }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "slug",
          "html_url",
          "created_at",
          "updated_at",
          "avatar_url"
        ]
      },
      "integration-installation-request": {
        "title": "Integration Installation Request",
        "description": "Request to install an integration on a target",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the request installation.",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDExOkludGVncmF0aW9uMQ=="]
          },
          "account": {
            "anyOf": [
              { "$ref": "#/components/schemas/simple-user" },
              { "$ref": "#/components/schemas/enterprise" }
            ]
          },
          "requester": { "$ref": "#/components/schemas/simple-user" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2022-07-08T16:18:44-04:00"]
          }
        },
        "required": ["id", "account", "requester", "created_at"]
      },
      "installation": {
        "title": "Installation",
        "description": "Installation",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the installation.",
            "type": "integer",
            "examples": [1]
          },
          "account": {
            "anyOf": [
              { "$ref": "#/components/schemas/simple-user" },
              { "$ref": "#/components/schemas/enterprise" }
            ],
            "type": ["null", "object"]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": ["all", "selected"]
          },
          "access_tokens_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/installations/1/access_tokens"]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/installation/repositories"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/organizations/github/settings/installations/1"
            ]
          },
          "app_id": { "type": "integer", "examples": [1] },
          "target_id": {
            "description": "The ID of the user or organization this token is being scoped to.",
            "type": "integer"
          },
          "target_type": { "type": "string", "examples": ["Organization"] },
          "permissions": { "$ref": "#/components/schemas/app-permissions" },
          "events": { "type": "array", "items": { "type": "string" } },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "single_file_name": {
            "type": ["string", "null"],
            "examples": ["config.yaml"]
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "examples": [true]
          },
          "single_file_paths": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["config.yml", ".github/issue_TEMPLATE.md"]
          },
          "app_slug": { "type": "string", "examples": ["github-actions"] },
          "suspended_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "suspended_at": { "type": ["string", "null"], "format": "date-time" },
          "contact_email": {
            "type": ["string", "null"],
            "examples": ["\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\""]
          }
        },
        "required": [
          "id",
          "app_id",
          "app_slug",
          "target_id",
          "target_type",
          "single_file_name",
          "repository_selection",
          "access_tokens_url",
          "html_url",
          "repositories_url",
          "events",
          "account",
          "permissions",
          "created_at",
          "updated_at",
          "suspended_by",
          "suspended_at"
        ]
      },
      "license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": { "type": "string", "examples": ["mit"] },
          "name": { "type": "string", "examples": ["MIT License"] },
          "url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["https://api.github.com/licenses/mit"]
          },
          "spdx_id": { "type": ["string", "null"], "examples": ["MIT"] },
          "node_id": { "type": "string", "examples": ["MDc6TGljZW5zZW1pdA=="] },
          "html_url": { "type": "string", "format": "uri" }
        },
        "required": ["key", "name", "url", "spdx_id", "node_id"]
      },
      "repository": {
        "title": "Repository",
        "description": "A repository on GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "examples": ["Team Environment"]
          },
          "full_name": {
            "type": "string",
            "examples": ["octocat/Hello-World"]
          },
          "license": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/license-simple" }
            ]
          },
          "organization": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "forks": { "type": "integer" },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": { "type": "boolean" },
              "pull": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "push": { "type": "boolean" },
              "maintain": { "type": "boolean" }
            },
            "required": ["admin", "pull", "push"]
          },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["This your first repo!"]
          },
          "fork": { "type": "boolean" },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/Hello-World"]
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "git_url": {
            "type": "string",
            "examples": ["git:github.com/octocat/Hello-World.git"]
          },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "ssh_url": {
            "type": "string",
            "examples": ["git@github.com:octocat/Hello-World.git"]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": ["http://api.github.com/repos/octocat/Hello-World/tags"]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "clone_url": {
            "type": "string",
            "examples": ["https://github.com/octocat/Hello-World.git"]
          },
          "mirror_url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["git:git.example.com/octocat/Hello-World"]
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://svn.github.com/octocat/Hello-World"]
          },
          "homepage": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["https://github.com"]
          },
          "language": { "type": ["string", "null"] },
          "forks_count": { "type": "integer", "examples": [9] },
          "stargazers_count": { "type": "integer", "examples": [80] },
          "watchers_count": { "type": "integer", "examples": [80] },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "examples": [108]
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "examples": ["master"]
          },
          "open_issues_count": { "type": "integer", "examples": [0] },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "examples": [true]
          },
          "topics": { "type": "array", "items": { "type": "string" } },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_pages": { "type": "boolean" },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:06:43Z"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:14:43Z"]
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "template_repository": {
            "type": ["object", "null"],
            "properties": {
              "id": { "type": "integer" },
              "node_id": { "type": "string" },
              "name": { "type": "string" },
              "full_name": { "type": "string" },
              "owner": {
                "type": "object",
                "properties": {
                  "login": { "type": "string" },
                  "id": { "type": "integer" },
                  "node_id": { "type": "string" },
                  "avatar_url": { "type": "string" },
                  "gravatar_id": { "type": "string" },
                  "url": { "type": "string" },
                  "html_url": { "type": "string" },
                  "followers_url": { "type": "string" },
                  "following_url": { "type": "string" },
                  "gists_url": { "type": "string" },
                  "starred_url": { "type": "string" },
                  "subscriptions_url": { "type": "string" },
                  "organizations_url": { "type": "string" },
                  "repos_url": { "type": "string" },
                  "events_url": { "type": "string" },
                  "received_events_url": { "type": "string" },
                  "type": { "type": "string" },
                  "site_admin": { "type": "boolean" }
                }
              },
              "private": { "type": "boolean" },
              "html_url": { "type": "string" },
              "description": { "type": "string" },
              "fork": { "type": "boolean" },
              "url": { "type": "string" },
              "archive_url": { "type": "string" },
              "assignees_url": { "type": "string" },
              "blobs_url": { "type": "string" },
              "branches_url": { "type": "string" },
              "collaborators_url": { "type": "string" },
              "comments_url": { "type": "string" },
              "commits_url": { "type": "string" },
              "compare_url": { "type": "string" },
              "contents_url": { "type": "string" },
              "contributors_url": { "type": "string" },
              "deployments_url": { "type": "string" },
              "downloads_url": { "type": "string" },
              "events_url": { "type": "string" },
              "forks_url": { "type": "string" },
              "git_commits_url": { "type": "string" },
              "git_refs_url": { "type": "string" },
              "git_tags_url": { "type": "string" },
              "git_url": { "type": "string" },
              "issue_comment_url": { "type": "string" },
              "issue_events_url": { "type": "string" },
              "issues_url": { "type": "string" },
              "keys_url": { "type": "string" },
              "labels_url": { "type": "string" },
              "languages_url": { "type": "string" },
              "merges_url": { "type": "string" },
              "milestones_url": { "type": "string" },
              "notifications_url": { "type": "string" },
              "pulls_url": { "type": "string" },
              "releases_url": { "type": "string" },
              "ssh_url": { "type": "string" },
              "stargazers_url": { "type": "string" },
              "statuses_url": { "type": "string" },
              "subscribers_url": { "type": "string" },
              "subscription_url": { "type": "string" },
              "tags_url": { "type": "string" },
              "teams_url": { "type": "string" },
              "trees_url": { "type": "string" },
              "clone_url": { "type": "string" },
              "mirror_url": { "type": "string" },
              "hooks_url": { "type": "string" },
              "svn_url": { "type": "string" },
              "homepage": { "type": "string" },
              "language": { "type": "string" },
              "forks_count": { "type": "integer" },
              "stargazers_count": { "type": "integer" },
              "watchers_count": { "type": "integer" },
              "size": { "type": "integer" },
              "default_branch": { "type": "string" },
              "open_issues_count": { "type": "integer" },
              "is_template": { "type": "boolean" },
              "topics": { "type": "array", "items": { "type": "string" } },
              "has_issues": { "type": "boolean" },
              "has_projects": { "type": "boolean" },
              "has_wiki": { "type": "boolean" },
              "has_pages": { "type": "boolean" },
              "has_downloads": { "type": "boolean" },
              "archived": { "type": "boolean" },
              "disabled": { "type": "boolean" },
              "visibility": { "type": "string" },
              "pushed_at": { "type": "string" },
              "created_at": { "type": "string" },
              "updated_at": { "type": "string" },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": { "type": "boolean" },
                  "maintain": { "type": "boolean" },
                  "push": { "type": "boolean" },
                  "triage": { "type": "boolean" },
                  "pull": { "type": "boolean" }
                }
              },
              "allow_rebase_merge": { "type": "boolean" },
              "temp_clone_token": { "type": "string" },
              "allow_squash_merge": { "type": "boolean" },
              "allow_auto_merge": { "type": "boolean" },
              "delete_branch_on_merge": { "type": "boolean" },
              "allow_update_branch": { "type": "boolean" },
              "allow_merge_commit": { "type": "boolean" },
              "subscribers_count": { "type": "integer" },
              "network_count": { "type": "integer" }
            }
          },
          "temp_clone_token": { "type": "string" },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "subscribers_count": { "type": "integer" },
          "network_count": { "type": "integer" },
          "open_issues": { "type": "integer" },
          "watchers": { "type": "integer" },
          "master_branch": { "type": "string" },
          "starred_at": {
            "type": "string",
            "examples": ["\"2020-07-09T00:17:42Z\""]
          },
          "anonymous_access_enabled": {
            "type": "boolean",
            "description": "Whether anonymous git access is enabled for this repository"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "installation-token": {
        "title": "Installation Token",
        "description": "Authentication token for a GitHub App installed on a user or org.",
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "expires_at": { "type": "string" },
          "permissions": { "$ref": "#/components/schemas/app-permissions" },
          "repository_selection": {
            "type": "string",
            "enum": ["all", "selected"]
          },
          "repositories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/repository" }
          },
          "single_file": { "type": "string", "examples": ["README.md"] },
          "has_multiple_single_files": {
            "type": "boolean",
            "examples": [true]
          },
          "single_file_paths": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["config.yml", ".github/issue_TEMPLATE.md"]
          }
        },
        "required": ["token", "expires_at"]
      },
      "application-grant": {
        "title": "Application Grant",
        "description": "The authorization associated with an OAuth Access.",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1] },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/applications/grants/1"]
          },
          "app": {
            "type": "object",
            "properties": {
              "client_id": { "type": "string" },
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["client_id", "name", "url"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T17:26:27Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T20:39:23Z"]
          },
          "scopes": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["public_repo"]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          }
        },
        "required": ["app", "id", "scopes", "url", "created_at", "updated_at"]
      },
      "code-of-conduct": {
        "title": "Code Of Conduct",
        "description": "Code Of Conduct",
        "type": "object",
        "properties": {
          "key": { "type": "string", "examples": ["contributor_covenant"] },
          "name": { "type": "string", "examples": ["Contributor Covenant"] },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/codes_of_conduct/contributor_covenant"
            ]
          },
          "body": {
            "type": "string",
            "examples": [
              "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
            ]
          },
          "html_url": { "type": ["string", "null"], "format": "uri" }
        },
        "required": ["url", "html_url", "key", "name"]
      },
      "announcement-message": {
        "type": ["string", "null"],
        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-server@3.4/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
        "examples": ["Very **important** announcement about _something_."]
      },
      "announcement-expiration": {
        "type": ["string", "null"],
        "format": "date-time",
        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
        "examples": ["\"2021-01-01T00:00:00.000-07:00\""]
      },
      "announcement": {
        "title": "Enterprise Announcement",
        "description": "Enterprise global announcement",
        "type": "object",
        "properties": {
          "announcement": {
            "$ref": "#/components/schemas/announcement-message"
          },
          "expires_at": {
            "$ref": "#/components/schemas/announcement-expiration"
          }
        },
        "required": ["announcement"]
      },
      "license-info": {
        "type": "object",
        "properties": {
          "seats": { "oneOf": [{ "type": "string" }, { "type": "integer" }] },
          "seats_used": { "type": "integer" },
          "seats_available": {
            "oneOf": [{ "type": "string" }, { "type": "integer" }]
          },
          "kind": { "type": "string" },
          "days_until_expiration": { "type": "integer" },
          "expire_at": { "type": "string" }
        }
      },
      "enterprise-repository-overview": {
        "title": "Repository Enterprise Stats",
        "type": "object",
        "properties": {
          "total_repos": { "type": "integer" },
          "root_repos": { "type": "integer" },
          "fork_repos": { "type": "integer" },
          "org_repos": { "type": "integer" },
          "total_pushes": { "type": "integer" },
          "total_wikis": { "type": "integer" }
        },
        "required": [
          "total_repos",
          "root_repos",
          "fork_repos",
          "org_repos",
          "total_pushes",
          "total_wikis"
        ]
      },
      "enterprise-hook-overview": {
        "title": "Hooks Enterprise Stats",
        "type": "object",
        "properties": {
          "total_hooks": { "type": "integer" },
          "active_hooks": { "type": "integer" },
          "inactive_hooks": { "type": "integer" }
        },
        "required": ["total_hooks", "active_hooks", "inactive_hooks"]
      },
      "enterprise-page-overview": {
        "title": "Enterprise Pages Stats",
        "type": "object",
        "properties": { "total_pages": { "type": "integer" } },
        "required": ["total_pages"]
      },
      "enterprise-organization-overview": {
        "title": "Enterprise Organization Stats",
        "type": "object",
        "properties": {
          "total_orgs": { "type": "integer" },
          "disabled_orgs": { "type": "integer" },
          "total_teams": { "type": "integer" },
          "total_team_members": { "type": "integer" }
        },
        "required": [
          "total_orgs",
          "disabled_orgs",
          "total_teams",
          "total_team_members"
        ]
      },
      "enterprise-user-overview": {
        "title": "Enterprise User Stats",
        "type": "object",
        "properties": {
          "total_users": { "type": "integer" },
          "admin_users": { "type": "integer" },
          "suspended_users": { "type": "integer" }
        },
        "required": ["total_users", "admin_users", "suspended_users"]
      },
      "enterprise-pull-request-overview": {
        "title": "Enterprise Pull Request Stats",
        "type": "object",
        "properties": {
          "total_pulls": { "type": "integer" },
          "merged_pulls": { "type": "integer" },
          "mergeable_pulls": { "type": "integer" },
          "unmergeable_pulls": { "type": "integer" }
        },
        "required": [
          "total_pulls",
          "merged_pulls",
          "mergeable_pulls",
          "unmergeable_pulls"
        ]
      },
      "enterprise-issue-overview": {
        "title": "Enterprise Issue Stats",
        "type": "object",
        "properties": {
          "total_issues": { "type": "integer" },
          "open_issues": { "type": "integer" },
          "closed_issues": { "type": "integer" }
        },
        "required": ["total_issues", "open_issues", "closed_issues"]
      },
      "enterprise-milestone-overview": {
        "title": "Enterprise Milestone Stats",
        "type": "object",
        "properties": {
          "total_milestones": { "type": "integer" },
          "open_milestones": { "type": "integer" },
          "closed_milestones": { "type": "integer" }
        },
        "required": ["total_milestones", "open_milestones", "closed_milestones"]
      },
      "enterprise-gist-overview": {
        "title": "Enterprise Gist Stats",
        "type": "object",
        "properties": {
          "total_gists": { "type": "integer" },
          "private_gists": { "type": "integer" },
          "public_gists": { "type": "integer" }
        },
        "required": ["total_gists", "private_gists", "public_gists"]
      },
      "enterprise-comment-overview": {
        "title": "Enterprise Comment Stats",
        "type": "object",
        "properties": {
          "total_commit_comments": { "type": "integer" },
          "total_gist_comments": { "type": "integer" },
          "total_issue_comments": { "type": "integer" },
          "total_pull_request_comments": { "type": "integer" }
        },
        "required": [
          "total_commit_comments",
          "total_gist_comments",
          "total_issue_comments",
          "total_pull_request_comments"
        ]
      },
      "enterprise-overview": {
        "type": "object",
        "properties": {
          "repos": {
            "$ref": "#/components/schemas/enterprise-repository-overview"
          },
          "hooks": { "$ref": "#/components/schemas/enterprise-hook-overview" },
          "pages": { "$ref": "#/components/schemas/enterprise-page-overview" },
          "orgs": {
            "$ref": "#/components/schemas/enterprise-organization-overview"
          },
          "users": { "$ref": "#/components/schemas/enterprise-user-overview" },
          "pulls": {
            "$ref": "#/components/schemas/enterprise-pull-request-overview"
          },
          "issues": {
            "$ref": "#/components/schemas/enterprise-issue-overview"
          },
          "milestones": {
            "$ref": "#/components/schemas/enterprise-milestone-overview"
          },
          "gists": { "$ref": "#/components/schemas/enterprise-gist-overview" },
          "comments": {
            "$ref": "#/components/schemas/enterprise-comment-overview"
          }
        }
      },
      "enabled-organizations": {
        "type": "string",
        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
        "enum": ["all", "none", "selected"]
      },
      "allowed-actions": {
        "type": "string",
        "description": "The permissions policy that controls the actions that are allowed to run.",
        "enum": ["all", "local_only", "selected"]
      },
      "selected-actions-url": {
        "type": "string",
        "description": "The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`."
      },
      "actions-enterprise-permissions": {
        "type": "object",
        "properties": {
          "enabled_organizations": {
            "$ref": "#/components/schemas/enabled-organizations"
          },
          "selected_organizations_url": {
            "type": "string",
            "description": "The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when `enabled_organizations` is set to `selected`."
          },
          "allowed_actions": { "$ref": "#/components/schemas/allowed-actions" },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": ["enabled_organizations"]
      },
      "selected-actions": {
        "type": "object",
        "properties": {
          "github_owned_allowed": {
            "type": "boolean",
            "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization."
          },
          "patterns_allowed": {
            "type": "array",
            "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.",
            "items": { "type": "string" }
          }
        },
        "required": ["github_owned_allowed", "patterns_allowed"]
      },
      "runner-groups-enterprise": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "visibility": { "type": "string" },
          "default": { "type": "boolean" },
          "selected_organizations_url": { "type": "string" },
          "runners_url": { "type": "string" },
          "allows_public_repositories": { "type": "boolean" }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "allows_public_repositories",
          "default",
          "runners_url"
        ]
      },
      "runner-label": {
        "title": "Self hosted runner label",
        "description": "A label for a self hosted runner",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the label."
          },
          "name": { "type": "string", "description": "Name of the label." },
          "type": {
            "type": "string",
            "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
            "enum": ["read-only", "custom"]
          }
        },
        "required": ["name"]
      },
      "runner": {
        "title": "Self hosted runners",
        "description": "A self hosted runner",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the runner.",
            "type": "integer",
            "examples": [5]
          },
          "name": {
            "description": "The name of the runner.",
            "type": "string",
            "examples": ["iMac"]
          },
          "os": {
            "description": "The Operating System of the runner.",
            "type": "string",
            "examples": ["macos"]
          },
          "status": {
            "description": "The status of the runner.",
            "type": "string",
            "examples": ["online"]
          },
          "busy": { "type": "boolean" },
          "labels": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/runner-label" }
          }
        },
        "required": ["id", "name", "os", "status", "busy", "labels"]
      },
      "runner-application": {
        "title": "Runner Application",
        "description": "Runner Application",
        "type": "object",
        "properties": {
          "os": { "type": "string" },
          "architecture": { "type": "string" },
          "download_url": { "type": "string" },
          "filename": { "type": "string" },
          "temp_download_token": {
            "description": "A short lived bearer token used to download the runner, if needed.",
            "type": "string"
          },
          "sha256_checksum": { "type": "string" }
        },
        "required": ["os", "architecture", "download_url", "filename"]
      },
      "authentication-token": {
        "title": "Authentication Token",
        "description": "Authentication Token",
        "type": "object",
        "properties": {
          "token": {
            "description": "The token used for authentication",
            "type": "string",
            "examples": ["v1.1f699f1069f60xxx"]
          },
          "expires_at": {
            "description": "The time this token expires",
            "type": "string",
            "format": "date-time",
            "examples": ["2016-07-11T22:14:10Z"]
          },
          "permissions": {
            "type": "object",
            "examples": [{ "issues": "read", "deployments": "write" }]
          },
          "repositories": {
            "description": "The repositories this token has access to",
            "type": "array",
            "items": { "$ref": "#/components/schemas/repository" }
          },
          "single_file": {
            "type": ["string", "null"],
            "examples": ["config.yaml"]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": ["all", "selected"]
          }
        },
        "required": ["token", "expires_at"]
      },
      "audit-log-event": {
        "type": "object",
        "properties": {
          "@timestamp": {
            "type": "integer",
            "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "action": {
            "type": "string",
            "description": "The name of the action that was performed, for example `user.login` or `repo.create`."
          },
          "active": { "type": "boolean" },
          "active_was": { "type": "boolean" },
          "actor": {
            "type": "string",
            "description": "The actor who performed the action."
          },
          "actor_id": {
            "type": "integer",
            "description": "The id of the actor who performed the action."
          },
          "actor_location": {
            "type": "object",
            "properties": { "country_name": { "type": "string" } }
          },
          "data": { "type": "object", "additionalProperties": true },
          "org_id": { "type": "integer" },
          "user_id": { "type": "integer" },
          "business_id": { "type": "integer" },
          "blocked_user": {
            "type": "string",
            "description": "The username of the account being blocked."
          },
          "business": { "type": "string" },
          "config": { "type": "array", "items": { "type": "object" } },
          "config_was": { "type": "array", "items": { "type": "object" } },
          "content_type": { "type": "string" },
          "operation_type": { "type": "string" },
          "created_at": {
            "type": "integer",
            "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "deploy_key_fingerprint": { "type": "string" },
          "_document_id": {
            "type": "string",
            "description": "A unique identifier for an audit event."
          },
          "emoji": { "type": "string" },
          "events": { "type": "array", "items": { "type": "object" } },
          "events_were": { "type": "array", "items": { "type": "object" } },
          "explanation": { "type": "string" },
          "fingerprint": { "type": "string" },
          "hook_id": { "type": "integer" },
          "limited_availability": { "type": "boolean" },
          "message": { "type": "string" },
          "name": { "type": "string" },
          "old_user": { "type": "string" },
          "openssh_public_key": { "type": "string" },
          "org": { "type": "string" },
          "previous_visibility": { "type": "string" },
          "read_only": { "type": "boolean" },
          "repo": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository_public": { "type": "boolean" },
          "target_login": { "type": "string" },
          "team": { "type": "string" },
          "transport_protocol": {
            "type": "integer",
            "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "transport_protocol_name": {
            "type": "string",
            "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "user": {
            "type": "string",
            "description": "The user that was affected by the action performed (if available)."
          },
          "visibility": {
            "type": "string",
            "description": "The repository visibility, for example `public` or `private`."
          }
        }
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "secret-scanning-alert-state": {
        "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.",
        "type": "string",
        "enum": ["open", "resolved"]
      },
      "secret-scanning-alert-resolution": {
        "type": ["string", "null"],
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert.",
        "enum": ["false_positive", "wont_fix", "revoked", "used_in_tests", null]
      },
      "simple-repository": {
        "title": "Simple Repository",
        "description": "A GitHub repository.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique identifier of the repository.",
            "examples": [1296269]
          },
          "node_id": {
            "type": "string",
            "description": "The GraphQL identifier of the repository.",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": {
            "type": "string",
            "description": "The name of the repository.",
            "examples": ["Hello-World"]
          },
          "full_name": {
            "type": "string",
            "description": "The full, globally unique, name of the repository.",
            "examples": ["octocat/Hello-World"]
          },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to view the repository on GitHub.com.",
            "examples": ["https://github.com/octocat/Hello-World"]
          },
          "description": {
            "type": ["string", "null"],
            "description": "The repository description.",
            "examples": ["This your first repo!"]
          },
          "fork": {
            "type": "boolean",
            "description": "Whether the repository is a fork."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to get more information about the repository from the GitHub API.",
            "examples": ["https://api.github.com/repos/octocat/Hello-World"]
          },
          "archive_url": {
            "type": "string",
            "description": "A template for the API URL to download the repository as an archive.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "assignees_url": {
            "type": "string",
            "description": "A template for the API URL to list the available assignees for issues in the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "blobs_url": {
            "type": "string",
            "description": "A template for the API URL to create or retrieve a raw Git blob in the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "branches_url": {
            "type": "string",
            "description": "A template for the API URL to get information about branches in the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "collaborators_url": {
            "type": "string",
            "description": "A template for the API URL to get information about collaborators of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "comments_url": {
            "type": "string",
            "description": "A template for the API URL to get information about comments on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "commits_url": {
            "type": "string",
            "description": "A template for the API URL to get information about commits on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "description": "A template for the API URL to compare two commits or refs.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "contents_url": {
            "type": "string",
            "description": "A template for the API URL to get the contents of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "description": "A template for the API URL to list the contributors to the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the deployments of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the downloads on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the events of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the forks of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "description": "A template for the API URL to get information about Git commits of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "description": "A template for the API URL to get information about Git refs of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "description": "A template for the API URL to get information about Git tags of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "issue_comment_url": {
            "type": "string",
            "description": "A template for the API URL to get information about issue comments on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "description": "A template for the API URL to get information about issue events on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "issues_url": {
            "type": "string",
            "description": "A template for the API URL to get information about issues on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "keys_url": {
            "type": "string",
            "description": "A template for the API URL to get information about deploy keys on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "labels_url": {
            "type": "string",
            "description": "A template for the API URL to get information about labels of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get information about the languages of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to merge branches in the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "milestones_url": {
            "type": "string",
            "description": "A template for the API URL to get information about milestones of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "description": "A template for the API URL to get information about notifications on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "pulls_url": {
            "type": "string",
            "description": "A template for the API URL to get information about pull requests on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "releases_url": {
            "type": "string",
            "description": "A template for the API URL to get information about releases on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the stargazers on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "statuses_url": {
            "type": "string",
            "description": "A template for the API URL to get information about statuses of a commit.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the subscribers on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to subscribe to notifications for this repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to get information about tags on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/tags"
            ]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the teams on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "description": "A template for the API URL to create or retrieve a raw Git tree of the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "description": "The API URL to list the hooks on the repository.",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "organization-secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "updated_at": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/alert-updated-at" }
            ]
          },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "locations_url": {
            "type": "string",
            "format": "uri",
            "description": "The REST API URL of the code locations for this alert."
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
          },
          "resolved_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          },
          "repository": { "$ref": "#/components/schemas/simple-repository" }
        }
      },
      "advanced-security-active-committers-user": {
        "type": "object",
        "properties": {
          "user_login": { "type": "string" },
          "last_pushed_date": { "type": "string", "examples": ["2021-11-03"] }
        },
        "required": ["user_login", "last_pushed_date"]
      },
      "advanced-security-active-committers-repository": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "examples": ["octocat/Hello-World"] },
          "advanced_security_committers": {
            "type": "integer",
            "examples": [25]
          },
          "advanced_security_committers_breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advanced-security-active-committers-user"
            }
          }
        },
        "required": [
          "name",
          "advanced_security_committers",
          "advanced_security_committers_breakdown"
        ]
      },
      "advanced-security-active-committers": {
        "type": "object",
        "properties": {
          "total_advanced_security_committers": {
            "type": "integer",
            "examples": [25]
          },
          "total_count": { "type": "integer", "examples": [2] },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advanced-security-active-committers-repository"
            }
          }
        },
        "required": ["repositories"]
      },
      "actor": {
        "title": "Actor",
        "description": "Actor",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "login": { "type": "string" },
          "display_login": { "type": "string" },
          "gravatar_id": { "type": ["string", "null"] },
          "url": { "type": "string", "format": "uri" },
          "avatar_url": { "type": "string", "format": "uri" }
        },
        "required": ["id", "login", "gravatar_id", "url", "avatar_url"]
      },
      "milestone": {
        "title": "Milestone",
        "description": "A collection of related issues and pull requests.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/milestones/1"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/milestones/v1.0"
            ]
          },
          "labels_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels"
            ]
          },
          "id": { "type": "integer", "examples": [1002604] },
          "node_id": {
            "type": "string",
            "examples": ["MDk6TWlsZXN0b25lMTAwMjYwNA=="]
          },
          "number": {
            "description": "The number of the milestone.",
            "type": "integer",
            "examples": [42]
          },
          "state": {
            "description": "The state of the milestone.",
            "type": "string",
            "enum": ["open", "closed"],
            "default": "open",
            "examples": ["open"]
          },
          "title": {
            "description": "The title of the milestone.",
            "type": "string",
            "examples": ["v1.0"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["Tracking milestone for version 1.0"]
          },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "open_issues": { "type": "integer", "examples": [4] },
          "closed_issues": { "type": "integer", "examples": [8] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-10T20:09:31Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2014-03-03T18:58:10Z"]
          },
          "closed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2013-02-12T13:22:01Z"]
          },
          "due_on": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2012-10-09T23:39:01Z"]
          }
        },
        "required": [
          "closed_issues",
          "creator",
          "description",
          "due_on",
          "closed_at",
          "id",
          "node_id",
          "labels_url",
          "html_url",
          "number",
          "open_issues",
          "state",
          "title",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "author-association": {
        "title": "author_association",
        "type": "string",
        "description": "How the author is associated with the repository.",
        "enum": [
          "COLLABORATOR",
          "CONTRIBUTOR",
          "FIRST_TIMER",
          "FIRST_TIME_CONTRIBUTOR",
          "MANNEQUIN",
          "MEMBER",
          "NONE",
          "OWNER"
        ],
        "examples": ["OWNER"]
      },
      "reaction-rollup": {
        "title": "Reaction Rollup",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "total_count": { "type": "integer" },
          "+1": { "type": "integer" },
          "-1": { "type": "integer" },
          "laugh": { "type": "integer" },
          "confused": { "type": "integer" },
          "heart": { "type": "integer" },
          "hooray": { "type": "integer" },
          "eyes": { "type": "integer" },
          "rocket": { "type": "integer" }
        },
        "required": [
          "url",
          "total_count",
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "eyes",
          "rocket"
        ]
      },
      "issue": {
        "title": "Issue",
        "description": "Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": {
            "description": "URL for the issue",
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repositories/42/issues/1"]
          },
          "repository_url": { "type": "string", "format": "uri" },
          "labels_url": { "type": "string" },
          "comments_url": { "type": "string", "format": "uri" },
          "events_url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "number": {
            "description": "Number uniquely identifying the issue within its repository",
            "type": "integer",
            "examples": [42]
          },
          "state": {
            "description": "State of the issue; either 'open' or 'closed'",
            "type": "string",
            "examples": ["open"]
          },
          "state_reason": {
            "description": "The reason for the current state",
            "type": ["string", "null"],
            "enum": ["completed", "reopened", "not_planned", null],
            "examples": ["not_planned"]
          },
          "title": {
            "description": "Title of the issue",
            "type": "string",
            "examples": ["Widget creation fails in Safari on OS X 10.8"]
          },
          "body": {
            "description": "Contents of the issue",
            "type": ["string", "null"],
            "examples": [
              "It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?"
            ]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "labels": {
            "description": "Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
            "type": "array",
            "items": {
              "oneOf": [
                { "type": "string" },
                {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "format": "int64" },
                    "node_id": { "type": "string" },
                    "url": { "type": "string", "format": "uri" },
                    "name": { "type": "string" },
                    "description": { "type": ["string", "null"] },
                    "color": { "type": ["string", "null"] },
                    "default": { "type": "boolean" }
                  }
                }
              ]
            },
            "examples": ["bug", "registration"]
          },
          "assignee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "assignees": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "milestone": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/milestone" }
            ]
          },
          "locked": { "type": "boolean" },
          "active_lock_reason": { "type": ["string", "null"] },
          "comments": { "type": "integer" },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": ["string", "null"],
                "format": "date-time"
              },
              "diff_url": { "type": ["string", "null"], "format": "uri" },
              "html_url": { "type": ["string", "null"], "format": "uri" },
              "patch_url": { "type": ["string", "null"], "format": "uri" },
              "url": { "type": ["string", "null"], "format": "uri" }
            },
            "required": ["diff_url", "html_url", "patch_url", "url"]
          },
          "closed_at": { "type": ["string", "null"], "format": "date-time" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "draft": { "type": "boolean" },
          "closed_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body_html": { "type": "string" },
          "body_text": { "type": "string" },
          "timeline_url": { "type": "string", "format": "uri" },
          "repository": { "$ref": "#/components/schemas/repository" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "issue-comment": {
        "title": "Issue Comment",
        "description": "Comments provide a way for people to collaborate on an issue.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the issue comment",
            "type": "integer",
            "examples": [42]
          },
          "node_id": { "type": "string" },
          "url": {
            "description": "URL for the issue comment",
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repositories/42/issues/comments/1"
            ]
          },
          "body": {
            "description": "Contents of the issue comment",
            "type": "string",
            "examples": [
              "What version of Safari were you using when you observed this bug?"
            ]
          },
          "body_text": { "type": "string" },
          "body_html": { "type": "string" },
          "html_url": { "type": "string", "format": "uri" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "issue_url": { "type": "string", "format": "uri" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "id",
          "node_id",
          "html_url",
          "issue_url",
          "author_association",
          "user",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "event": {
        "title": "Event",
        "description": "Event",
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": ["string", "null"] },
          "actor": { "$ref": "#/components/schemas/actor" },
          "repo": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["id", "name", "url"]
          },
          "org": { "$ref": "#/components/schemas/actor" },
          "payload": {
            "type": "object",
            "properties": {
              "action": { "type": "string" },
              "issue": { "$ref": "#/components/schemas/issue" },
              "comment": { "$ref": "#/components/schemas/issue-comment" },
              "pages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "page_name": { "type": "string" },
                    "title": { "type": "string" },
                    "summary": { "type": ["string", "null"] },
                    "action": { "type": "string" },
                    "sha": { "type": "string" },
                    "html_url": { "type": "string" }
                  }
                }
              }
            }
          },
          "public": { "type": "boolean" },
          "created_at": { "type": ["string", "null"], "format": "date-time" }
        },
        "required": [
          "id",
          "type",
          "actor",
          "repo",
          "payload",
          "public",
          "created_at"
        ]
      },
      "link-with-type": {
        "title": "Link With Type",
        "description": "Hypermedia Link with Type",
        "type": "object",
        "properties": {
          "href": { "type": "string" },
          "type": { "type": "string" }
        },
        "required": ["href", "type"]
      },
      "feed": {
        "title": "Feed",
        "description": "Feed",
        "type": "object",
        "properties": {
          "timeline_url": {
            "type": "string",
            "examples": ["https://github.com/timeline"]
          },
          "user_url": {
            "type": "string",
            "examples": ["https://github.com/{user}"]
          },
          "current_user_public_url": {
            "type": "string",
            "examples": ["https://github.com/octocat"]
          },
          "current_user_url": {
            "type": "string",
            "examples": ["https://github.com/octocat.private?token=abc123"]
          },
          "current_user_actor_url": {
            "type": "string",
            "examples": [
              "https://github.com/octocat.private.actor?token=abc123"
            ]
          },
          "current_user_organization_url": {
            "type": "string",
            "examples": ["https://github.com/octocat-org"]
          },
          "current_user_organization_urls": {
            "type": "array",
            "items": { "type": "string", "format": "uri" },
            "examples": [
              "https://github.com/organizations/github/octocat.private.atom?token=abc123"
            ]
          },
          "security_advisories_url": {
            "type": "string",
            "examples": ["https://github.com/security-advisories"]
          },
          "repository_discussions_url": {
            "type": "string",
            "description": "A feed of discussions for a given repository.",
            "examples": ["https://github.com/{user}/{repo}/discussions"]
          },
          "repository_discussions_category_url": {
            "type": "string",
            "description": "A feed of discussions for a given repository and category.",
            "examples": [
              "https://github.com/{user}/{repo}/discussions/categories/{category}"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "timeline": { "$ref": "#/components/schemas/link-with-type" },
              "user": { "$ref": "#/components/schemas/link-with-type" },
              "security_advisories": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user": { "$ref": "#/components/schemas/link-with-type" },
              "current_user_public": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_actor": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organization": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organizations": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/link-with-type" }
              },
              "repository_discussions": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "repository_discussions_category": {
                "$ref": "#/components/schemas/link-with-type"
              }
            },
            "required": ["timeline", "user"]
          },
          "repository_discussions": {
            "$ref": "#/components/schemas/link-with-type"
          },
          "repository_discussions_category": {
            "$ref": "#/components/schemas/link-with-type"
          }
        },
        "required": ["_links", "timeline_url", "user_url"]
      },
      "base-gist": {
        "title": "Base Gist",
        "description": "Base Gist",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "forks_url": { "type": "string", "format": "uri" },
          "commits_url": { "type": "string", "format": "uri" },
          "id": { "type": "string" },
          "node_id": { "type": "string" },
          "git_pull_url": { "type": "string", "format": "uri" },
          "git_push_url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "files": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "filename": { "type": "string" },
                "type": { "type": "string" },
                "language": { "type": "string" },
                "raw_url": { "type": "string" },
                "size": { "type": "integer" }
              }
            }
          },
          "public": { "type": "boolean" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "description": { "type": ["string", "null"] },
          "comments": { "type": "integer" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "comments_url": { "type": "string", "format": "uri" },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "truncated": { "type": "boolean" },
          "forks": { "type": "array", "items": {} },
          "history": { "type": "array", "items": {} }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "forks_url",
          "commits_url",
          "git_pull_url",
          "git_push_url",
          "html_url",
          "comments_url",
          "public",
          "description",
          "comments",
          "user",
          "files",
          "created_at",
          "updated_at"
        ]
      },
      "public-user": {
        "title": "Public User",
        "description": "Public User",
        "type": "object",
        "properties": {
          "login": { "type": "string" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "avatar_url": { "type": "string", "format": "uri" },
          "gravatar_id": { "type": ["string", "null"] },
          "url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "followers_url": { "type": "string", "format": "uri" },
          "following_url": { "type": "string" },
          "gists_url": { "type": "string" },
          "starred_url": { "type": "string" },
          "subscriptions_url": { "type": "string", "format": "uri" },
          "organizations_url": { "type": "string", "format": "uri" },
          "repos_url": { "type": "string", "format": "uri" },
          "events_url": { "type": "string" },
          "received_events_url": { "type": "string", "format": "uri" },
          "type": { "type": "string" },
          "site_admin": { "type": "boolean" },
          "name": { "type": ["string", "null"] },
          "company": { "type": ["string", "null"] },
          "blog": { "type": ["string", "null"] },
          "location": { "type": ["string", "null"] },
          "email": { "type": ["string", "null"], "format": "email" },
          "hireable": { "type": ["boolean", "null"] },
          "bio": { "type": ["string", "null"] },
          "twitter_username": { "type": ["string", "null"] },
          "public_repos": { "type": "integer" },
          "public_gists": { "type": "integer" },
          "followers": { "type": "integer" },
          "following": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": { "type": "integer" },
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" }
            },
            "required": ["collaborators", "name", "space", "private_repos"]
          },
          "suspended_at": { "type": ["string", "null"], "format": "date-time" },
          "private_gists": { "type": "integer", "examples": [1] },
          "total_private_repos": { "type": "integer", "examples": [2] },
          "owned_private_repos": { "type": "integer", "examples": [2] },
          "disk_usage": { "type": "integer", "examples": [1] },
          "collaborators": { "type": "integer", "examples": [3] }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at"
        ],
        "additionalProperties": false
      },
      "gist-history": {
        "title": "Gist History",
        "description": "Gist History",
        "type": "object",
        "properties": {
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "version": { "type": "string" },
          "committed_at": { "type": "string", "format": "date-time" },
          "change_status": {
            "type": "object",
            "properties": {
              "total": { "type": "integer" },
              "additions": { "type": "integer" },
              "deletions": { "type": "integer" }
            }
          },
          "url": { "type": "string", "format": "uri" }
        }
      },
      "gist-simple": {
        "title": "Gist Simple",
        "description": "Gist Simple",
        "type": "object",
        "properties": {
          "forks": {
            "deprecated": true,
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "user": { "$ref": "#/components/schemas/public-user" },
                "created_at": { "type": "string", "format": "date-time" },
                "updated_at": { "type": "string", "format": "date-time" }
              }
            }
          },
          "history": {
            "deprecated": true,
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/gist-history" }
          },
          "fork_of": {
            "title": "Gist",
            "description": "Gist",
            "type": ["object", "null"],
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "forks_url": { "type": "string", "format": "uri" },
              "commits_url": { "type": "string", "format": "uri" },
              "id": { "type": "string" },
              "node_id": { "type": "string" },
              "git_pull_url": { "type": "string", "format": "uri" },
              "git_push_url": { "type": "string", "format": "uri" },
              "html_url": { "type": "string", "format": "uri" },
              "files": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "filename": { "type": "string" },
                    "type": { "type": "string" },
                    "language": { "type": "string" },
                    "raw_url": { "type": "string" },
                    "size": { "type": "integer" }
                  }
                }
              },
              "public": { "type": "boolean" },
              "created_at": { "type": "string", "format": "date-time" },
              "updated_at": { "type": "string", "format": "date-time" },
              "description": { "type": ["string", "null"] },
              "comments": { "type": "integer" },
              "user": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/simple-user" }
                ]
              },
              "comments_url": { "type": "string", "format": "uri" },
              "owner": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/simple-user" }
                ]
              },
              "truncated": { "type": "boolean" },
              "forks": { "type": "array", "items": {} },
              "history": { "type": "array", "items": {} }
            },
            "required": [
              "id",
              "node_id",
              "url",
              "forks_url",
              "commits_url",
              "git_pull_url",
              "git_push_url",
              "html_url",
              "comments_url",
              "public",
              "description",
              "comments",
              "user",
              "files",
              "created_at",
              "updated_at"
            ]
          },
          "url": { "type": "string" },
          "forks_url": { "type": "string" },
          "commits_url": { "type": "string" },
          "id": { "type": "string" },
          "node_id": { "type": "string" },
          "git_pull_url": { "type": "string" },
          "git_push_url": { "type": "string" },
          "html_url": { "type": "string" },
          "files": {
            "type": "object",
            "additionalProperties": {
              "type": ["object", "null"],
              "properties": {
                "filename": { "type": "string" },
                "type": { "type": "string" },
                "language": { "type": "string" },
                "raw_url": { "type": "string" },
                "size": { "type": "integer" },
                "truncated": { "type": "boolean" },
                "content": { "type": "string" }
              }
            }
          },
          "public": { "type": "boolean" },
          "created_at": { "type": "string" },
          "updated_at": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "comments": { "type": "integer" },
          "user": { "type": ["string", "null"] },
          "comments_url": { "type": "string" },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "truncated": { "type": "boolean" }
        }
      },
      "gist-comment": {
        "title": "Gist Comment",
        "description": "A comment made to a gist.",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDExOkdpc3RDb21tZW50MQ=="]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1"
            ]
          },
          "body": {
            "description": "The comment text.",
            "type": "string",
            "maxLength": 65535,
            "examples": ["Body of the attachment"]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-18T23:23:56Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-18T23:23:56Z"]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "user",
          "body",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "gist-commit": {
        "title": "Gist Commit",
        "description": "Gist Commit",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f"
            ]
          },
          "version": {
            "type": "string",
            "examples": ["57a7f021a713b1c5a6a199b54cc514735d2d462f"]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "change_status": {
            "type": "object",
            "properties": {
              "total": { "type": "integer" },
              "additions": { "type": "integer" },
              "deletions": { "type": "integer" }
            }
          },
          "committed_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2010-04-14T02:15:15Z"]
          }
        },
        "required": ["url", "user", "version", "committed_at", "change_status"]
      },
      "gitignore-template": {
        "title": "Gitignore Template",
        "description": "Gitignore Template",
        "type": "object",
        "properties": {
          "name": { "type": "string", "examples": ["C"] },
          "source": {
            "type": "string",
            "examples": [
              "# Object files\n*.o\n\n# Libraries\n*.lib\n*.a\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n"
            ]
          }
        },
        "required": ["name", "source"]
      },
      "license": {
        "title": "License",
        "description": "License",
        "type": "object",
        "properties": {
          "key": { "type": "string", "examples": ["mit"] },
          "name": { "type": "string", "examples": ["MIT License"] },
          "spdx_id": { "type": ["string", "null"], "examples": ["MIT"] },
          "url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["https://api.github.com/licenses/mit"]
          },
          "node_id": { "type": "string", "examples": ["MDc6TGljZW5zZW1pdA=="] },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["http://choosealicense.com/licenses/mit/"]
          },
          "description": {
            "type": "string",
            "examples": [
              "A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty."
            ]
          },
          "implementation": {
            "type": "string",
            "examples": [
              "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders."
            ]
          },
          "permissions": {
            "type": "array",
            "items": { "type": "string" },
            "examples": [
              "commercial-use",
              "modifications",
              "distribution",
              "sublicense",
              "private-use"
            ]
          },
          "conditions": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["include-copyright"]
          },
          "limitations": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["no-liability"]
          },
          "body": {
            "type": "string",
            "examples": [
              "\n\nThe MIT License (MIT)\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
            ]
          },
          "featured": { "type": "boolean", "examples": [true] }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id",
          "html_url",
          "description",
          "implementation",
          "permissions",
          "conditions",
          "limitations",
          "body",
          "featured"
        ]
      },
      "api-overview": {
        "title": "Api Overview",
        "description": "Api Overview",
        "type": "object",
        "properties": {
          "verifiable_password_authentication": {
            "type": "boolean",
            "examples": [true]
          },
          "packages": {
            "type": "array",
            "items": { "type": "string" },
            "examples": [
              "13.65.0.0/16",
              "157.55.204.33/32",
              "2a01:111:f403:f90c::/62"
            ]
          },
          "dependabot": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["192.168.7.15/32", "192.168.7.16/32"]
          },
          "installed_version": { "type": "string", "examples": ["3.4.0"] }
        },
        "required": ["verifiable_password_authentication"]
      },
      "minimal-repository": {
        "title": "Minimal Repository",
        "description": "Minimal Repository",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1296269] },
          "node_id": {
            "type": "string",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": { "type": "string", "examples": ["Hello-World"] },
          "full_name": {
            "type": "string",
            "examples": ["octocat/Hello-World"]
          },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "private": { "type": "boolean" },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["This your first repo!"]
          },
          "fork": { "type": "boolean" },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/Hello-World"]
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "git_url": { "type": "string" },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "ssh_url": { "type": "string" },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": ["http://api.github.com/repos/octocat/Hello-World/tags"]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "clone_url": { "type": "string" },
          "mirror_url": { "type": ["string", "null"] },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "svn_url": { "type": "string" },
          "homepage": { "type": ["string", "null"] },
          "language": { "type": ["string", "null"] },
          "forks_count": { "type": "integer" },
          "stargazers_count": { "type": "integer" },
          "watchers_count": { "type": "integer" },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer"
          },
          "default_branch": { "type": "string" },
          "open_issues_count": { "type": "integer" },
          "is_template": { "type": "boolean" },
          "topics": { "type": "array", "items": { "type": "string" } },
          "has_issues": { "type": "boolean" },
          "has_projects": { "type": "boolean" },
          "has_wiki": { "type": "boolean" },
          "has_pages": { "type": "boolean" },
          "has_downloads": { "type": "boolean" },
          "archived": { "type": "boolean" },
          "disabled": { "type": "boolean" },
          "visibility": { "type": "string" },
          "pushed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:06:43Z"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:14:43Z"]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": { "type": "boolean" },
              "maintain": { "type": "boolean" },
              "push": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "pull": { "type": "boolean" }
            }
          },
          "temp_clone_token": { "type": "string" },
          "delete_branch_on_merge": { "type": "boolean" },
          "subscribers_count": { "type": "integer" },
          "network_count": { "type": "integer" },
          "code_of_conduct": { "$ref": "#/components/schemas/code-of-conduct" },
          "license": {
            "type": ["object", "null"],
            "properties": {
              "key": { "type": "string" },
              "name": { "type": "string" },
              "spdx_id": { "type": "string" },
              "url": { "type": "string" },
              "node_id": { "type": "string" }
            }
          },
          "forks": { "type": "integer", "examples": [0] },
          "open_issues": { "type": "integer", "examples": [0] },
          "watchers": { "type": "integer", "examples": [0] },
          "allow_forking": { "type": "boolean" }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "thread": {
        "title": "Thread",
        "description": "Thread",
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "subject": {
            "type": "object",
            "properties": {
              "title": { "type": "string" },
              "url": { "type": "string" },
              "latest_comment_url": { "type": "string" },
              "type": { "type": "string" }
            },
            "required": ["title", "url", "latest_comment_url", "type"]
          },
          "reason": { "type": "string" },
          "unread": { "type": "boolean" },
          "updated_at": { "type": "string" },
          "last_read_at": { "type": ["string", "null"] },
          "url": { "type": "string" },
          "subscription_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/notifications/threads/2/subscription"
            ]
          }
        },
        "required": [
          "id",
          "unread",
          "reason",
          "updated_at",
          "last_read_at",
          "subject",
          "repository",
          "url",
          "subscription_url"
        ]
      },
      "thread-subscription": {
        "title": "Thread Subscription",
        "description": "Thread Subscription",
        "type": "object",
        "properties": {
          "subscribed": { "type": "boolean", "examples": [true] },
          "ignored": { "type": "boolean" },
          "reason": { "type": ["string", "null"] },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2012-10-06T21:34:12Z"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/notifications/threads/1/subscription"
            ]
          },
          "thread_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/notifications/threads/1"]
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/1"]
          }
        },
        "required": ["created_at", "ignored", "reason", "url", "subscribed"]
      },
      "organization-custom-repository-role": {
        "title": "Organization Custom Repository Role",
        "description": "Custom repository roles created by organization administrators",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the custom role.",
            "type": "integer"
          },
          "name": {
            "description": "The name of the custom role.",
            "type": "string"
          }
        },
        "required": ["id", "name"]
      },
      "organization-full": {
        "title": "Organization Full",
        "description": "Organization Full",
        "type": "object",
        "properties": {
          "login": { "type": "string", "examples": ["github"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDEyOk9yZ2FuaXphdGlvbjE="]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/repos"]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/events"]
          },
          "hooks_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/hooks"]
          },
          "issues_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/issues"]
          },
          "members_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/members{/member}"]
          },
          "public_members_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/orgs/github/public_members{/member}"
            ]
          },
          "avatar_url": {
            "type": "string",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["A great organization"]
          },
          "name": { "type": "string", "examples": ["github"] },
          "company": { "type": "string", "examples": ["GitHub"] },
          "blog": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/blog"]
          },
          "location": { "type": "string", "examples": ["San Francisco"] },
          "email": {
            "type": "string",
            "format": "email",
            "examples": ["octocat@github.com"]
          },
          "twitter_username": {
            "type": ["string", "null"],
            "examples": ["github"]
          },
          "is_verified": { "type": "boolean", "examples": [true] },
          "has_organization_projects": {
            "type": "boolean",
            "examples": [true]
          },
          "has_repository_projects": { "type": "boolean", "examples": [true] },
          "public_repos": { "type": "integer", "examples": [2] },
          "public_gists": { "type": "integer", "examples": [1] },
          "followers": { "type": "integer", "examples": [20] },
          "following": { "type": "integer", "examples": [0] },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "type": { "type": "string", "examples": ["Organization"] },
          "total_private_repos": { "type": "integer", "examples": [100] },
          "owned_private_repos": { "type": "integer", "examples": [100] },
          "private_gists": { "type": ["integer", "null"], "examples": [81] },
          "disk_usage": { "type": ["integer", "null"], "examples": [10000] },
          "collaborators": { "type": ["integer", "null"], "examples": [8] },
          "billing_email": {
            "type": ["string", "null"],
            "format": "email",
            "examples": ["org@example.com"]
          },
          "plan": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" },
              "filled_seats": { "type": "integer" },
              "seats": { "type": "integer" }
            },
            "required": ["name", "space", "private_repos"]
          },
          "default_repository_permission": { "type": ["string", "null"] },
          "members_can_create_repositories": {
            "type": ["boolean", "null"],
            "examples": [true]
          },
          "two_factor_requirement_enabled": {
            "type": ["boolean", "null"],
            "examples": [true]
          },
          "members_allowed_repository_creation_type": {
            "type": "string",
            "examples": ["all"]
          },
          "members_can_create_public_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_private_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_internal_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_pages": { "type": "boolean", "examples": [true] },
          "members_can_create_public_pages": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_private_pages": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_fork_private_repositories": {
            "type": ["boolean", "null"],
            "examples": [false]
          },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description",
          "html_url",
          "has_organization_projects",
          "has_repository_projects",
          "public_repos",
          "public_gists",
          "followers",
          "following",
          "type",
          "created_at",
          "updated_at"
        ]
      },
      "enabled-repositories": {
        "type": "string",
        "description": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions.",
        "enum": ["all", "none", "selected"]
      },
      "actions-organization-permissions": {
        "type": "object",
        "properties": {
          "enabled_repositories": {
            "$ref": "#/components/schemas/enabled-repositories"
          },
          "selected_repositories_url": {
            "type": "string",
            "description": "The API URL to use to get or set the selected repositories that are allowed to run GitHub Actions, when `enabled_repositories` is set to `selected`."
          },
          "allowed_actions": { "$ref": "#/components/schemas/allowed-actions" },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": ["enabled_repositories"]
      },
      "runner-groups-org": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "visibility": { "type": "string" },
          "default": { "type": "boolean" },
          "selected_repositories_url": {
            "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
            "type": "string"
          },
          "runners_url": { "type": "string" },
          "inherited": { "type": "boolean" },
          "inherited_allows_public_repositories": { "type": "boolean" },
          "allows_public_repositories": { "type": "boolean" }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "default",
          "runners_url",
          "inherited",
          "allows_public_repositories"
        ]
      },
      "organization-actions-secret": {
        "title": "Actions Secret for an Organization",
        "description": "Secrets for GitHub Actions for an organization.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "type": "string",
            "examples": ["SECRET_TOKEN"]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "visibility": {
            "description": "Visibility of a secret",
            "enum": ["all", "private", "selected"],
            "type": "string"
          },
          "selected_repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/org/secrets/my_secret/repositories"
            ]
          }
        },
        "required": ["name", "created_at", "updated_at", "visibility"]
      },
      "actions-public-key": {
        "title": "ActionsPublicKey",
        "description": "The public key used for setting Actions Secrets.",
        "type": "object",
        "properties": {
          "key_id": {
            "description": "The identifier for the key.",
            "type": "string",
            "examples": ["1234567"]
          },
          "key": {
            "description": "The Base64 encoded public key.",
            "type": "string",
            "examples": ["hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="]
          },
          "id": { "type": "integer", "examples": [2] },
          "url": {
            "type": "string",
            "examples": ["https://api.github.com/user/keys/2"]
          },
          "title": {
            "type": "string",
            "examples": ["ssh-rsa AAAAB3NzaC1yc2EAAA"]
          },
          "created_at": {
            "type": "string",
            "examples": ["2011-01-26T19:01:12Z"]
          }
        },
        "required": ["key_id", "key"]
      },
      "empty-object": {
        "title": "Empty Object",
        "description": "An object without any properties.",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "organization-dependabot-secret": {
        "title": "Dependabot Secret for an Organization",
        "description": "Secrets for GitHub Dependabot for an organization.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "type": "string",
            "examples": ["SECRET_TOKEN"]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "visibility": {
            "description": "Visibility of a secret",
            "enum": ["all", "private", "selected"],
            "type": "string"
          },
          "selected_repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/org/dependabot/secrets/my_secret/repositories"
            ]
          }
        },
        "required": ["name", "created_at", "updated_at", "visibility"]
      },
      "dependabot-public-key": {
        "title": "DependabotPublicKey",
        "description": "The public key used for setting Dependabot Secrets.",
        "type": "object",
        "properties": {
          "key_id": {
            "description": "The identifier for the key.",
            "type": "string",
            "examples": ["1234567"]
          },
          "key": {
            "description": "The Base64 encoded public key.",
            "type": "string",
            "examples": ["hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="]
          }
        },
        "required": ["key_id", "key"]
      },
      "org-hook": {
        "title": "Org Hook",
        "description": "Org Hook",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1] },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/octocat/hooks/1"]
          },
          "ping_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/octocat/hooks/1/pings"]
          },
          "deliveries_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/orgs/octocat/hooks/1/deliveries"
            ]
          },
          "name": { "type": "string", "examples": ["web"] },
          "events": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["push", "pull_request"]
          },
          "active": { "type": "boolean", "examples": [true] },
          "config": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "examples": ["\"http://example.com/2\""]
              },
              "insecure_ssl": { "type": "string", "examples": ["\"0\""] },
              "content_type": { "type": "string", "examples": ["\"form\""] },
              "secret": { "type": "string", "examples": ["\"********\""] }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T20:39:23Z"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T17:26:27Z"]
          },
          "type": { "type": "string" }
        },
        "required": [
          "id",
          "url",
          "type",
          "name",
          "active",
          "events",
          "config",
          "ping_url",
          "created_at",
          "updated_at"
        ]
      },
      "org-membership": {
        "title": "Org Membership",
        "description": "Org Membership",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/orgs/octocat/memberships/defunkt"
            ]
          },
          "state": {
            "type": "string",
            "description": "The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.",
            "enum": ["active", "pending"],
            "examples": ["active"]
          },
          "role": {
            "type": "string",
            "description": "The user's membership type in the organization.",
            "enum": ["admin", "member", "billing_manager"],
            "examples": ["admin"]
          },
          "organization_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/octocat"]
          },
          "organization": {
            "$ref": "#/components/schemas/organization-simple"
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "permissions": {
            "type": "object",
            "properties": { "can_create_repository": { "type": "boolean" } },
            "required": ["can_create_repository"]
          }
        },
        "required": [
          "state",
          "role",
          "organization_url",
          "url",
          "organization",
          "user"
        ]
      },
      "migration": {
        "title": "Migration",
        "description": "A migration.",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [79] },
          "owner": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "guid": {
            "type": "string",
            "examples": ["0b989ba4-242f-11e5-81e1-c7b6966d2516"]
          },
          "state": { "type": "string", "examples": ["pending"] },
          "lock_repositories": { "type": "boolean", "examples": [true] },
          "exclude_metadata": { "type": "boolean" },
          "exclude_git_data": { "type": "boolean" },
          "exclude_attachments": { "type": "boolean" },
          "exclude_releases": { "type": "boolean" },
          "exclude_owner_projects": { "type": "boolean" },
          "org_metadata_only": { "type": "boolean" },
          "repositories": {
            "type": "array",
            "description": "The repositories included in the migration. Only returned for export migrations.",
            "items": { "$ref": "#/components/schemas/repository" }
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/octo-org/migrations/79"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2015-07-06T15:33:38-07:00"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2015-07-06T15:33:38-07:00"]
          },
          "node_id": { "type": "string" },
          "archive_url": { "type": "string", "format": "uri" },
          "exclude": { "type": "array", "items": {} }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "guid",
          "state",
          "lock_repositories",
          "exclude_metadata",
          "exclude_git_data",
          "exclude_attachments",
          "exclude_releases",
          "exclude_owner_projects",
          "org_metadata_only",
          "repositories",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "org-pre-receive-hook": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "enforcement": { "type": "string" },
          "configuration_url": { "type": "string" },
          "allow_downstream_configuration": { "type": "boolean" }
        }
      },
      "project": {
        "title": "Project",
        "description": "Projects are a way to organize columns and cards of work.",
        "type": "object",
        "properties": {
          "owner_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/api-playground/projects-test"
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/1002604"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/api-playground/projects-test/projects/12"
            ]
          },
          "columns_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/1002604/columns"]
          },
          "id": { "type": "integer", "examples": [1002604] },
          "node_id": {
            "type": "string",
            "examples": ["MDc6UHJvamVjdDEwMDI2MDQ="]
          },
          "name": {
            "description": "Name of the project",
            "type": "string",
            "examples": ["Week One Sprint"]
          },
          "body": {
            "description": "Body of the project",
            "type": ["string", "null"],
            "examples": [
              "This project represents the sprint of the first week in January"
            ]
          },
          "number": { "type": "integer", "examples": [1] },
          "state": {
            "description": "State of the project; either 'open' or 'closed'",
            "type": "string",
            "examples": ["open"]
          },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-10T20:09:31Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2014-03-03T18:58:10Z"]
          },
          "organization_permission": {
            "description": "The baseline permission that all organization members have on this project. Only present if owner is an organization.",
            "type": "string",
            "enum": ["read", "write", "admin", "none"]
          },
          "private": {
            "description": "Whether or not this project can be seen by everyone. Only present if owner is an organization.",
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "node_id",
          "number",
          "name",
          "body",
          "state",
          "url",
          "html_url",
          "owner_url",
          "creator",
          "columns_url",
          "created_at",
          "updated_at"
        ]
      },
      "team-simple": {
        "title": "Team Simple",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the team",
            "type": "integer",
            "examples": [1]
          },
          "node_id": { "type": "string", "examples": ["MDQ6VGVhbTE="] },
          "url": {
            "description": "URL for the team",
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/organizations/1/team/1"]
          },
          "members_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/organizations/1/team/1/members{/member}"
            ]
          },
          "name": {
            "description": "Name of the team",
            "type": "string",
            "examples": ["Justice League"]
          },
          "description": {
            "description": "Description of the team",
            "type": ["string", "null"],
            "examples": ["A great team."]
          },
          "permission": {
            "description": "Permission that the team will have for its repositories",
            "type": "string",
            "examples": ["admin"]
          },
          "privacy": {
            "description": "The level of privacy this team should have",
            "type": "string",
            "examples": ["closed"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/orgs/rails/teams/core"]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/organizations/1/team/1/repos"]
          },
          "slug": { "type": "string", "examples": ["justice-league"] },
          "ldap_dn": {
            "description": "Distinguished Name (DN) that team maps to within LDAP environment",
            "type": "string",
            "examples": ["uid=example,ou=users,dc=github,dc=com"]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug"
        ]
      },
      "team": {
        "title": "Team",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "privacy": { "type": "string" },
          "permission": { "type": "string" },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "push": { "type": "boolean" },
              "maintain": { "type": "boolean" },
              "admin": { "type": "boolean" }
            },
            "required": ["pull", "triage", "push", "maintain", "admin"]
          },
          "url": { "type": "string", "format": "uri" },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/orgs/rails/teams/core"]
          },
          "members_url": { "type": "string" },
          "repositories_url": { "type": "string", "format": "uri" },
          "parent": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/team-simple" }
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug",
          "parent"
        ]
      },
      "team-organization": {
        "title": "Team Organization",
        "description": "Team Organization",
        "type": "object",
        "properties": {
          "login": { "type": "string", "examples": ["github"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDEyOk9yZ2FuaXphdGlvbjE="]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/repos"]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/orgs/github/events"]
          },
          "hooks_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/hooks"]
          },
          "issues_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/issues"]
          },
          "members_url": {
            "type": "string",
            "examples": ["https://api.github.com/orgs/github/members{/member}"]
          },
          "public_members_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/orgs/github/public_members{/member}"
            ]
          },
          "avatar_url": {
            "type": "string",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["A great organization"]
          },
          "name": { "type": "string", "examples": ["github"] },
          "company": { "type": "string", "examples": ["GitHub"] },
          "blog": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/blog"]
          },
          "location": { "type": "string", "examples": ["San Francisco"] },
          "email": {
            "type": "string",
            "format": "email",
            "examples": ["octocat@github.com"]
          },
          "twitter_username": {
            "type": ["string", "null"],
            "examples": ["github"]
          },
          "is_verified": { "type": "boolean", "examples": [true] },
          "has_organization_projects": {
            "type": "boolean",
            "examples": [true]
          },
          "has_repository_projects": { "type": "boolean", "examples": [true] },
          "public_repos": { "type": "integer", "examples": [2] },
          "public_gists": { "type": "integer", "examples": [1] },
          "followers": { "type": "integer", "examples": [20] },
          "following": { "type": "integer", "examples": [0] },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "type": { "type": "string", "examples": ["Organization"] },
          "total_private_repos": { "type": "integer", "examples": [100] },
          "owned_private_repos": { "type": "integer", "examples": [100] },
          "private_gists": { "type": ["integer", "null"], "examples": [81] },
          "disk_usage": { "type": ["integer", "null"], "examples": [10000] },
          "collaborators": { "type": ["integer", "null"], "examples": [8] },
          "billing_email": {
            "type": ["string", "null"],
            "format": "email",
            "examples": ["org@example.com"]
          },
          "plan": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" },
              "filled_seats": { "type": "integer" },
              "seats": { "type": "integer" }
            },
            "required": ["name", "space", "private_repos"]
          },
          "default_repository_permission": { "type": ["string", "null"] },
          "members_can_create_repositories": {
            "type": ["boolean", "null"],
            "examples": [true]
          },
          "two_factor_requirement_enabled": {
            "type": ["boolean", "null"],
            "examples": [true]
          },
          "members_allowed_repository_creation_type": {
            "type": "string",
            "examples": ["all"]
          },
          "members_can_create_public_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_private_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_internal_repositories": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_pages": { "type": "boolean", "examples": [true] },
          "members_can_create_public_pages": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_create_private_pages": {
            "type": "boolean",
            "examples": [true]
          },
          "members_can_fork_private_repositories": {
            "type": ["boolean", "null"],
            "examples": [false]
          },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description",
          "html_url",
          "has_organization_projects",
          "has_repository_projects",
          "public_repos",
          "public_gists",
          "followers",
          "following",
          "type",
          "created_at",
          "updated_at"
        ]
      },
      "team-full": {
        "title": "Full Team",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the team",
            "type": "integer",
            "examples": [42]
          },
          "node_id": { "type": "string", "examples": ["MDQ6VGVhbTE="] },
          "url": {
            "description": "URL for the team",
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/organizations/1/team/1"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/orgs/rails/teams/core"]
          },
          "name": {
            "description": "Name of the team",
            "type": "string",
            "examples": ["Developers"]
          },
          "slug": { "type": "string", "examples": ["justice-league"] },
          "description": {
            "type": ["string", "null"],
            "examples": ["A great team."]
          },
          "privacy": {
            "description": "The level of privacy this team should have",
            "type": "string",
            "enum": ["closed", "secret"],
            "examples": ["closed"]
          },
          "permission": {
            "description": "Permission that the team will have for its repositories",
            "type": "string",
            "examples": ["push"]
          },
          "members_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/organizations/1/team/1/members{/member}"
            ]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/organizations/1/team/1/repos"]
          },
          "parent": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/team-simple" }
            ]
          },
          "members_count": { "type": "integer", "examples": [3] },
          "repos_count": { "type": "integer", "examples": [10] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2017-07-14T16:53:42Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2017-08-17T12:37:15Z"]
          },
          "organization": { "$ref": "#/components/schemas/team-organization" },
          "ldap_dn": {
            "description": "Distinguished Name (DN) that team maps to within LDAP environment",
            "type": "string",
            "examples": ["uid=example,ou=users,dc=github,dc=com"]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug",
          "created_at",
          "updated_at",
          "members_count",
          "repos_count",
          "organization"
        ]
      },
      "team-discussion": {
        "title": "Team Discussion",
        "description": "A team discussion is a persistent record of a free-form conversation within a team.",
        "type": "object",
        "properties": {
          "author": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": {
            "description": "The main text of the discussion.",
            "type": "string",
            "examples": [
              "Please suggest improvements to our workflow in comments."
            ]
          },
          "body_html": {
            "type": "string",
            "examples": [
              "<p>Hi! This is an area for us to collaborate as a team</p>"
            ]
          },
          "body_version": {
            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
            "type": "string",
            "examples": ["0307116bbf7ced493b8d8a346c650b71"]
          },
          "comments_count": { "type": "integer", "examples": [0] },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2018-01-25T18:56:31Z"]
          },
          "last_edited_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/orgs/github/teams/justice-league/discussions/1"
            ]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDE0OlRlYW1EaXNjdXNzaW9uMQ=="]
          },
          "number": {
            "description": "The unique sequence number of a team discussion.",
            "type": "integer",
            "examples": [42]
          },
          "pinned": {
            "description": "Whether or not this discussion should be pinned for easy retrieval.",
            "type": "boolean",
            "examples": [true]
          },
          "private": {
            "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
            "type": "boolean",
            "examples": [true]
          },
          "team_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/organizations/1/team/2343027"]
          },
          "title": {
            "description": "The title of the discussion.",
            "type": "string",
            "examples": ["How can we improve our workflow?"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2018-01-25T18:56:31Z"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/1/team/2343027/discussions/1"
            ]
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "author",
          "body",
          "body_html",
          "body_version",
          "comments_count",
          "comments_url",
          "created_at",
          "last_edited_at",
          "html_url",
          "pinned",
          "private",
          "node_id",
          "number",
          "team_url",
          "title",
          "updated_at",
          "url"
        ]
      },
      "team-discussion-comment": {
        "title": "Team Discussion Comment",
        "description": "A reply to a discussion within a team.",
        "type": "object",
        "properties": {
          "author": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": {
            "description": "The main text of the comment.",
            "type": "string",
            "examples": ["I agree with this suggestion."]
          },
          "body_html": {
            "type": "string",
            "examples": ["<p>Do you like apples?</p>"]
          },
          "body_version": {
            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
            "type": "string",
            "examples": ["0307116bbf7ced493b8d8a346c650b71"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2018-01-15T23:53:58Z"]
          },
          "last_edited_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "discussion_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/1/team/2403582/discussions/1"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
            ]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="]
          },
          "number": {
            "description": "The unique sequence number of a team discussion comment.",
            "type": "integer",
            "examples": [42]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2018-01-15T23:53:58Z"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
            ]
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "author",
          "body",
          "body_html",
          "body_version",
          "created_at",
          "last_edited_at",
          "discussion_url",
          "html_url",
          "node_id",
          "number",
          "updated_at",
          "url"
        ]
      },
      "reaction": {
        "title": "Reaction",
        "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1] },
          "node_id": { "type": "string", "examples": ["MDg6UmVhY3Rpb24x"] },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "content": {
            "description": "The reaction to use",
            "type": "string",
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray",
              "rocket",
              "eyes"
            ],
            "examples": ["heart"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-05-20T20:09:31Z"]
          }
        },
        "required": ["id", "node_id", "user", "content", "created_at"]
      },
      "team-membership": {
        "title": "Team Membership",
        "description": "Team Membership",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "role": {
            "description": "The role of the user in the team.",
            "enum": ["member", "maintainer"],
            "default": "member",
            "type": "string",
            "examples": ["member"]
          },
          "state": {
            "description": "The state of the user's membership in the team.",
            "type": "string",
            "enum": ["active", "pending"]
          }
        },
        "required": ["role", "state", "url"]
      },
      "team-project": {
        "title": "Team Project",
        "description": "A team's access to a project.",
        "type": "object",
        "properties": {
          "owner_url": { "type": "string" },
          "url": { "type": "string" },
          "html_url": { "type": "string" },
          "columns_url": { "type": "string" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "name": { "type": "string" },
          "body": { "type": ["string", "null"] },
          "number": { "type": "integer" },
          "state": { "type": "string" },
          "creator": { "$ref": "#/components/schemas/simple-user" },
          "created_at": { "type": "string" },
          "updated_at": { "type": "string" },
          "organization_permission": {
            "description": "The organization permission for this project. Only present when owner is an organization.",
            "type": "string"
          },
          "private": {
            "description": "Whether the project is private or not. Only present when owner is an organization.",
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "read": { "type": "boolean" },
              "write": { "type": "boolean" },
              "admin": { "type": "boolean" }
            },
            "required": ["read", "write", "admin"]
          }
        },
        "required": [
          "owner_url",
          "url",
          "html_url",
          "columns_url",
          "id",
          "node_id",
          "name",
          "body",
          "number",
          "state",
          "creator",
          "created_at",
          "updated_at",
          "permissions"
        ]
      },
      "team-repository": {
        "title": "Team Repository",
        "description": "A team's access to a repository.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "examples": ["Team Environment"]
          },
          "full_name": {
            "type": "string",
            "examples": ["octocat/Hello-World"]
          },
          "license": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/license-simple" }
            ]
          },
          "forks": { "type": "integer" },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": { "type": "boolean" },
              "pull": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "push": { "type": "boolean" },
              "maintain": { "type": "boolean" }
            },
            "required": ["admin", "pull", "push"]
          },
          "owner": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["This your first repo!"]
          },
          "fork": { "type": "boolean" },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/Hello-World"]
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "git_url": {
            "type": "string",
            "examples": ["git:github.com/octocat/Hello-World.git"]
          },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "ssh_url": {
            "type": "string",
            "examples": ["git@github.com:octocat/Hello-World.git"]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": ["http://api.github.com/repos/octocat/Hello-World/tags"]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "clone_url": {
            "type": "string",
            "examples": ["https://github.com/octocat/Hello-World.git"]
          },
          "mirror_url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["git:git.example.com/octocat/Hello-World"]
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://svn.github.com/octocat/Hello-World"]
          },
          "homepage": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["https://github.com"]
          },
          "language": { "type": ["string", "null"] },
          "forks_count": { "type": "integer", "examples": [9] },
          "stargazers_count": { "type": "integer", "examples": [80] },
          "watchers_count": { "type": "integer", "examples": [80] },
          "size": { "type": "integer", "examples": [108] },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "examples": ["master"]
          },
          "open_issues_count": { "type": "integer", "examples": [0] },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "examples": [true]
          },
          "topics": { "type": "array", "items": { "type": "string" } },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "has_pages": { "type": "boolean" },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:06:43Z"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:14:43Z"]
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "template_repository": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/repository" }
            ]
          },
          "temp_clone_token": { "type": "string" },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "examples": [true]
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "default": false,
            "type": "boolean",
            "examples": [false]
          },
          "subscribers_count": { "type": "integer" },
          "network_count": { "type": "integer" },
          "open_issues": { "type": "integer" },
          "watchers": { "type": "integer" },
          "master_branch": { "type": "string" }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "project-card": {
        "title": "Project Card",
        "description": "Project cards represent a scope of work.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/columns/cards/1478"]
          },
          "id": {
            "description": "The project card's ID",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDExOlByb2plY3RDYXJkMTQ3OA=="]
          },
          "note": {
            "type": ["string", "null"],
            "examples": ["Add payload for delete Project column"]
          },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-09-05T14:21:06Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-09-05T14:20:22Z"]
          },
          "archived": {
            "description": "Whether or not the card is archived",
            "type": "boolean",
            "examples": [false]
          },
          "column_name": { "type": "string" },
          "project_id": { "type": "string" },
          "column_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/columns/367"]
          },
          "content_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/api-playground/projects-test/issues/3"
            ]
          },
          "project_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/120"]
          }
        },
        "required": [
          "id",
          "node_id",
          "note",
          "url",
          "column_url",
          "project_url",
          "creator",
          "created_at",
          "updated_at"
        ]
      },
      "project-column": {
        "title": "Project Column",
        "description": "Project columns contain cards of work.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/columns/367"]
          },
          "project_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/120"]
          },
          "cards_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/projects/columns/367/cards"]
          },
          "id": {
            "description": "The unique identifier of the project column",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDEzOlByb2plY3RDb2x1bW4zNjc="]
          },
          "name": {
            "description": "Name of the project column",
            "type": "string",
            "examples": ["Remaining tasks"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-09-05T14:18:44Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-09-05T14:22:28Z"]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "project_url",
          "cards_url",
          "name",
          "created_at",
          "updated_at"
        ]
      },
      "project-collaborator-permission": {
        "title": "Project Collaborator Permission",
        "description": "Project Collaborator Permission",
        "type": "object",
        "properties": {
          "permission": { "type": "string" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          }
        },
        "required": ["permission", "user"]
      },
      "rate-limit": {
        "title": "Rate Limit",
        "type": "object",
        "properties": {
          "limit": { "type": "integer" },
          "remaining": { "type": "integer" },
          "reset": { "type": "integer" },
          "used": { "type": "integer" }
        },
        "required": ["limit", "remaining", "reset", "used"]
      },
      "rate-limit-overview": {
        "title": "Rate Limit Overview",
        "description": "Rate Limit Overview",
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "properties": {
              "core": { "$ref": "#/components/schemas/rate-limit" },
              "graphql": { "$ref": "#/components/schemas/rate-limit" },
              "search": { "$ref": "#/components/schemas/rate-limit" },
              "source_import": { "$ref": "#/components/schemas/rate-limit" },
              "integration_manifest": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "code_scanning_upload": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "actions_runner_registration": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "scim": { "$ref": "#/components/schemas/rate-limit" }
            },
            "required": ["core", "search"]
          },
          "rate": { "$ref": "#/components/schemas/rate-limit" }
        },
        "required": ["rate", "resources"]
      },
      "code-of-conduct-simple": {
        "title": "Code Of Conduct Simple",
        "description": "Code of Conduct Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/github/docs/community/code_of_conduct"
            ]
          },
          "key": { "type": "string", "examples": ["citizen_code_of_conduct"] },
          "name": { "type": "string", "examples": ["Citizen Code of Conduct"] },
          "html_url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": [
              "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md"
            ]
          }
        },
        "required": ["url", "key", "name", "html_url"]
      },
      "security-and-analysis": {
        "type": ["object", "null"],
        "properties": {
          "advanced_security": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "enum": ["enabled", "disabled"] }
            }
          },
          "secret_scanning": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "enum": ["enabled", "disabled"] }
            }
          },
          "secret_scanning_push_protection": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "enum": ["enabled", "disabled"] }
            }
          }
        }
      },
      "full-repository": {
        "title": "Full Repository",
        "description": "Full Repository",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1296269] },
          "node_id": {
            "type": "string",
            "examples": ["MDEwOlJlcG9zaXRvcnkxMjk2MjY5"]
          },
          "name": { "type": "string", "examples": ["Hello-World"] },
          "full_name": {
            "type": "string",
            "examples": ["octocat/Hello-World"]
          },
          "owner": { "$ref": "#/components/schemas/simple-user" },
          "private": { "type": "boolean" },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["This your first repo!"]
          },
          "fork": { "type": "boolean" },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/Hello-World"]
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "git_url": {
            "type": "string",
            "examples": ["git:github.com/octocat/Hello-World.git"]
          },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "ssh_url": {
            "type": "string",
            "examples": ["git@github.com:octocat/Hello-World.git"]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": ["http://api.github.com/repos/octocat/Hello-World/tags"]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "clone_url": {
            "type": "string",
            "examples": ["https://github.com/octocat/Hello-World.git"]
          },
          "mirror_url": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["git:git.example.com/octocat/Hello-World"]
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://svn.github.com/octocat/Hello-World"]
          },
          "homepage": {
            "type": ["string", "null"],
            "format": "uri",
            "examples": ["https://github.com"]
          },
          "language": { "type": ["string", "null"] },
          "forks_count": { "type": "integer", "examples": [9] },
          "stargazers_count": { "type": "integer", "examples": [80] },
          "watchers_count": { "type": "integer", "examples": [80] },
          "size": {
            "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
            "type": "integer",
            "examples": [108]
          },
          "default_branch": { "type": "string", "examples": ["master"] },
          "open_issues_count": { "type": "integer", "examples": [0] },
          "is_template": { "type": "boolean", "examples": [true] },
          "topics": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["octocat", "atom", "electron", "API"]
          },
          "has_issues": { "type": "boolean", "examples": [true] },
          "has_projects": { "type": "boolean", "examples": [true] },
          "has_wiki": { "type": "boolean", "examples": [true] },
          "has_pages": { "type": "boolean" },
          "has_downloads": { "type": "boolean", "examples": [true] },
          "archived": { "type": "boolean" },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "type": "string",
            "examples": ["public"]
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:06:43Z"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:14:43Z"]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": { "type": "boolean" },
              "maintain": { "type": "boolean" },
              "push": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "pull": { "type": "boolean" }
            },
            "required": ["admin", "pull", "push"]
          },
          "allow_rebase_merge": { "type": "boolean", "examples": [true] },
          "template_repository": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/repository" }
            ]
          },
          "temp_clone_token": { "type": ["string", "null"] },
          "allow_squash_merge": { "type": "boolean", "examples": [true] },
          "allow_auto_merge": { "type": "boolean", "examples": [false] },
          "delete_branch_on_merge": { "type": "boolean", "examples": [false] },
          "allow_merge_commit": { "type": "boolean", "examples": [true] },
          "allow_update_branch": { "type": "boolean", "examples": [true] },
          "allow_forking": { "type": "boolean", "examples": [true] },
          "subscribers_count": { "type": "integer", "examples": [42] },
          "network_count": { "type": "integer", "examples": [0] },
          "license": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/license-simple" }
            ]
          },
          "organization": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "parent": { "$ref": "#/components/schemas/repository" },
          "source": { "$ref": "#/components/schemas/repository" },
          "forks": { "type": "integer" },
          "master_branch": { "type": "string" },
          "open_issues": { "type": "integer" },
          "watchers": { "type": "integer" },
          "anonymous_access_enabled": {
            "description": "Whether anonymous git access is allowed.",
            "default": true,
            "type": "boolean"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct-simple"
          },
          "security_and_analysis": {
            "$ref": "#/components/schemas/security-and-analysis"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "has_discussions",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "network_count",
          "subscribers_count"
        ]
      },
      "artifact": {
        "title": "Artifact",
        "description": "An artifact",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [5] },
          "node_id": { "type": "string", "examples": ["MDEwOkNoZWNrU3VpdGU1"] },
          "name": {
            "description": "The name of the artifact.",
            "type": "string",
            "examples": ["AdventureWorks.Framework"]
          },
          "size_in_bytes": {
            "description": "The size in bytes of the artifact.",
            "type": "integer",
            "examples": [12345]
          },
          "url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/artifacts/5"
            ]
          },
          "archive_download_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip"
            ]
          },
          "expired": {
            "description": "Whether or not the artifact has expired.",
            "type": "boolean"
          },
          "created_at": { "type": ["string", "null"], "format": "date-time" },
          "expires_at": { "type": ["string", "null"], "format": "date-time" },
          "updated_at": { "type": ["string", "null"], "format": "date-time" },
          "workflow_run": {
            "type": ["object", "null"],
            "properties": {
              "id": { "type": "integer", "examples": [10] },
              "repository_id": { "type": "integer", "examples": [42] },
              "head_repository_id": { "type": "integer", "examples": [42] },
              "head_branch": { "type": "string", "examples": ["main"] },
              "head_sha": {
                "type": "string",
                "examples": ["009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"]
              }
            }
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "size_in_bytes",
          "url",
          "archive_download_url",
          "expired",
          "created_at",
          "expires_at",
          "updated_at"
        ]
      },
      "job": {
        "title": "Job",
        "description": "Information of a job execution in a workflow run",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the job.",
            "type": "integer",
            "examples": [21]
          },
          "run_id": {
            "description": "The id of the associated workflow run.",
            "type": "integer",
            "examples": [5]
          },
          "run_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5"
            ]
          },
          "run_attempt": {
            "type": "integer",
            "description": "Attempt number of the associated workflow run, 1 for first attempt and higher if the workflow was re-run.",
            "examples": [1]
          },
          "node_id": { "type": "string", "examples": ["MDg6Q2hlY2tSdW40"] },
          "head_sha": {
            "description": "The SHA of the commit that is being run.",
            "type": "string",
            "examples": ["009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"]
          },
          "url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/jobs/21"
            ]
          },
          "html_url": {
            "type": ["string", "null"],
            "examples": ["https://github.com/github/hello-world/runs/4"]
          },
          "status": {
            "description": "The phase of the lifecycle that the job is currently in.",
            "type": "string",
            "enum": ["queued", "in_progress", "completed"],
            "examples": ["queued"]
          },
          "conclusion": {
            "description": "The outcome of the job.",
            "type": ["string", "null"],
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required",
              null
            ],
            "examples": ["success"]
          },
          "started_at": {
            "description": "The time that the job started, in ISO 8601 format.",
            "format": "date-time",
            "type": "string",
            "examples": ["2019-08-08T08:00:00-07:00"]
          },
          "completed_at": {
            "description": "The time that the job finished, in ISO 8601 format.",
            "format": "date-time",
            "type": ["string", "null"],
            "examples": ["2019-08-08T08:00:00-07:00"]
          },
          "name": {
            "description": "The name of the job.",
            "type": "string",
            "examples": ["test-coverage"]
          },
          "steps": {
            "description": "Steps in this job.",
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "status", "conclusion", "number"],
              "properties": {
                "status": {
                  "description": "The phase of the lifecycle that the job is currently in.",
                  "type": "string",
                  "enum": ["queued", "in_progress", "completed"],
                  "examples": ["queued"]
                },
                "conclusion": {
                  "description": "The outcome of the job.",
                  "type": ["string", "null"],
                  "examples": ["success"]
                },
                "name": {
                  "description": "The name of the job.",
                  "type": "string",
                  "examples": ["test-coverage"]
                },
                "number": { "type": "integer", "examples": [1] },
                "started_at": {
                  "description": "The time that the step started, in ISO 8601 format.",
                  "format": "date-time",
                  "type": ["string", "null"],
                  "examples": ["2019-08-08T08:00:00-07:00"]
                },
                "completed_at": {
                  "description": "The time that the job finished, in ISO 8601 format.",
                  "format": "date-time",
                  "type": ["string", "null"],
                  "examples": ["2019-08-08T08:00:00-07:00"]
                }
              }
            }
          },
          "check_run_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/check-runs/4"
            ]
          },
          "labels": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Labels for the workflow job. Specified by the \"runs_on\" attribute in the action's workflow file.",
            "examples": ["self-hosted", "foo", "bar"]
          },
          "runner_id": {
            "type": ["integer", "null"],
            "description": "The ID of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)",
            "examples": [1]
          },
          "runner_name": {
            "type": ["string", "null"],
            "description": "The name of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)",
            "examples": ["my runner"]
          },
          "runner_group_id": {
            "type": ["integer", "null"],
            "description": "The ID of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)",
            "examples": [2]
          },
          "runner_group_name": {
            "type": ["string", "null"],
            "description": "The name of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)",
            "examples": ["my runner group"]
          }
        },
        "required": [
          "id",
          "node_id",
          "run_id",
          "run_url",
          "head_sha",
          "workflow_name",
          "head_branch",
          "name",
          "url",
          "html_url",
          "status",
          "conclusion",
          "started_at",
          "completed_at",
          "check_run_url",
          "labels",
          "runner_id",
          "runner_name",
          "runner_group_id",
          "runner_group_name"
        ]
      },
      "actions-enabled": {
        "type": "boolean",
        "description": "Whether GitHub Actions is enabled on the repository."
      },
      "actions-repository-permissions": {
        "type": "object",
        "properties": {
          "enabled": { "$ref": "#/components/schemas/actions-enabled" },
          "allowed_actions": { "$ref": "#/components/schemas/allowed-actions" },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": ["enabled"]
      },
      "pull-request-minimal": {
        "title": "Pull Request Minimal",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "number": { "type": "integer" },
          "url": { "type": "string" },
          "head": {
            "type": "object",
            "properties": {
              "ref": { "type": "string" },
              "sha": { "type": "string" },
              "repo": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "url": { "type": "string" },
                  "name": { "type": "string" }
                },
                "required": ["id", "url", "name"]
              }
            },
            "required": ["ref", "sha", "repo"]
          },
          "base": {
            "type": "object",
            "properties": {
              "ref": { "type": "string" },
              "sha": { "type": "string" },
              "repo": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "url": { "type": "string" },
                  "name": { "type": "string" }
                },
                "required": ["id", "url", "name"]
              }
            },
            "required": ["ref", "sha", "repo"]
          }
        },
        "required": ["id", "number", "url", "head", "base"]
      },
      "simple-commit": {
        "title": "Simple Commit",
        "description": "A commit.",
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "tree_id": { "type": "string" },
          "message": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "author": {
            "type": ["object", "null"],
            "properties": {
              "name": { "type": "string" },
              "email": { "type": "string" }
            },
            "required": ["name", "email"]
          },
          "committer": {
            "type": ["object", "null"],
            "properties": {
              "name": { "type": "string" },
              "email": { "type": "string" }
            },
            "required": ["name", "email"]
          }
        },
        "required": [
          "id",
          "tree_id",
          "message",
          "timestamp",
          "author",
          "committer"
        ]
      },
      "workflow-run": {
        "title": "Workflow Run",
        "description": "An invocation of a workflow",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the workflow run.",
            "examples": [5]
          },
          "name": {
            "type": ["string", "null"],
            "description": "The name of the workflow run.",
            "examples": ["Build"]
          },
          "node_id": { "type": "string", "examples": ["MDEwOkNoZWNrU3VpdGU1"] },
          "check_suite_id": {
            "type": "integer",
            "description": "The ID of the associated check suite.",
            "examples": [42]
          },
          "check_suite_node_id": {
            "type": "string",
            "description": "The node ID of the associated check suite.",
            "examples": ["MDEwOkNoZWNrU3VpdGU0Mg=="]
          },
          "head_branch": { "type": ["string", "null"], "examples": ["master"] },
          "head_sha": {
            "description": "The SHA of the head commit that points to the version of the workflow being run.",
            "type": "string",
            "examples": ["009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"]
          },
          "run_number": {
            "type": "integer",
            "description": "The auto incrementing run number for the workflow run.",
            "examples": [106]
          },
          "event": { "type": "string", "examples": ["push"] },
          "status": { "type": ["string", "null"], "examples": ["completed"] },
          "conclusion": { "type": ["string", "null"], "examples": ["neutral"] },
          "workflow_id": {
            "type": "integer",
            "description": "The ID of the parent workflow.",
            "examples": [5]
          },
          "url": {
            "type": "string",
            "description": "The URL to the workflow run.",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5"
            ]
          },
          "html_url": {
            "type": "string",
            "examples": ["https://github.com/github/hello-world/suites/4"]
          },
          "pull_requests": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/pull-request-minimal" }
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "jobs_url": {
            "description": "The URL to the jobs for the workflow run.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
            ]
          },
          "logs_url": {
            "description": "The URL to download the logs for the workflow run.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
            ]
          },
          "check_suite_url": {
            "description": "The URL to the associated check suite.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/check-suites/12"
            ]
          },
          "artifacts_url": {
            "description": "The URL to the artifacts for the workflow run.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
            ]
          },
          "cancel_url": {
            "description": "The URL to cancel the workflow run.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
            ]
          },
          "rerun_url": {
            "description": "The URL to rerun the workflow run.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
            ]
          },
          "workflow_url": {
            "description": "The URL to the workflow.",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
            ]
          },
          "head_commit": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-commit" }
            ]
          },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "head_repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "head_repository_id": { "type": "integer", "examples": [5] }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "run_number",
          "display_title",
          "event",
          "status",
          "conclusion",
          "head_sha",
          "path",
          "workflow_id",
          "url",
          "html_url",
          "created_at",
          "updated_at",
          "head_commit",
          "head_repository",
          "repository",
          "jobs_url",
          "logs_url",
          "check_suite_url",
          "cancel_url",
          "rerun_url",
          "artifacts_url",
          "workflow_url",
          "pull_requests"
        ]
      },
      "environment-approvals": {
        "title": "Environment Approval",
        "description": "An entry in the reviews log for environment deployments",
        "type": "object",
        "properties": {
          "environments": {
            "description": "The list of environments that were approved or rejected",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The id of the environment.",
                  "type": "integer",
                  "examples": [56780428]
                },
                "node_id": {
                  "type": "string",
                  "examples": ["MDExOkVudmlyb25tZW50NTY3ODA0Mjg="]
                },
                "name": {
                  "description": "The name of the environment.",
                  "type": "string",
                  "examples": ["staging"]
                },
                "url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/repos/github/hello-world/environments/staging"
                  ]
                },
                "html_url": {
                  "type": "string",
                  "examples": [
                    "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
                  ]
                },
                "created_at": {
                  "description": "The time that the environment was created, in ISO 8601 format.",
                  "format": "date-time",
                  "type": "string",
                  "examples": ["2020-11-23T22:00:40Z"]
                },
                "updated_at": {
                  "description": "The time that the environment was last updated, in ISO 8601 format.",
                  "format": "date-time",
                  "type": "string",
                  "examples": ["2020-11-23T22:00:40Z"]
                }
              }
            }
          },
          "state": {
            "description": "Whether deployment to the environment(s) was approved or rejected or pending (with comments)",
            "enum": ["approved", "rejected", "pending"],
            "type": "string",
            "examples": ["approved"]
          },
          "user": { "$ref": "#/components/schemas/simple-user" },
          "comment": {
            "type": "string",
            "description": "The comment submitted with the deployment review",
            "examples": ["Ship it!"]
          }
        },
        "required": ["environments", "state", "user", "comment"]
      },
      "deployment-reviewer-type": {
        "type": "string",
        "description": "The type of reviewer.",
        "enum": ["User", "Team"],
        "examples": ["User"]
      },
      "pending-deployment": {
        "title": "Pending Deployment",
        "description": "Details of a deployment that is waiting for protection rules to pass",
        "type": "object",
        "properties": {
          "environment": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the environment.",
                "type": "integer",
                "examples": [56780428]
              },
              "node_id": {
                "type": "string",
                "examples": ["MDExOkVudmlyb25tZW50NTY3ODA0Mjg="]
              },
              "name": {
                "description": "The name of the environment.",
                "type": "string",
                "examples": ["staging"]
              },
              "url": {
                "type": "string",
                "examples": [
                  "https://api.github.com/repos/github/hello-world/environments/staging"
                ]
              },
              "html_url": {
                "type": "string",
                "examples": [
                  "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
                ]
              }
            }
          },
          "wait_timer": {
            "type": "integer",
            "description": "The set duration of the wait timer",
            "examples": [30]
          },
          "wait_timer_started_at": {
            "description": "The time that the wait timer began.",
            "format": "date-time",
            "type": ["string", "null"],
            "examples": ["2020-11-23T22:00:40Z"]
          },
          "current_user_can_approve": {
            "description": "Whether the currently authenticated user can approve the deployment",
            "type": "boolean",
            "examples": [true]
          },
          "reviewers": {
            "type": "array",
            "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/deployment-reviewer-type"
                },
                "reviewer": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/simple-user" },
                    { "$ref": "#/components/schemas/team" }
                  ]
                }
              }
            }
          }
        },
        "required": [
          "environment",
          "wait_timer",
          "wait_timer_started_at",
          "current_user_can_approve",
          "reviewers"
        ]
      },
      "deployment": {
        "title": "Deployment",
        "description": "A request for a specific ref(branch,sha,tag) to be deployed",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/1"
            ]
          },
          "id": {
            "description": "Unique identifier of the deployment",
            "type": "integer",
            "examples": [42]
          },
          "node_id": { "type": "string", "examples": ["MDEwOkRlcGxveW1lbnQx"] },
          "sha": {
            "type": "string",
            "examples": ["a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d"]
          },
          "ref": {
            "description": "The ref to deploy. This can be a branch, tag, or sha.",
            "type": "string",
            "examples": ["topic-branch"]
          },
          "task": {
            "description": "Parameter to specify a task to execute",
            "type": "string",
            "examples": ["deploy"]
          },
          "payload": {
            "oneOf": [
              { "type": "object", "additionalProperties": true },
              { "type": "string" }
            ]
          },
          "original_environment": { "type": "string", "examples": ["staging"] },
          "environment": {
            "description": "Name for the target deployment environment.",
            "type": "string",
            "examples": ["production"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["Deploy request from hubot"]
          },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/1/statuses"
            ]
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/example"]
          },
          "transient_environment": {
            "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
            "type": "boolean",
            "examples": [true]
          },
          "production_environment": {
            "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
            "type": "boolean",
            "examples": [true]
          },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "sha",
          "ref",
          "task",
          "environment",
          "creator",
          "payload",
          "description",
          "statuses_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "actions-secret": {
        "title": "Actions Secret",
        "description": "Set secrets for GitHub Actions.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "type": "string",
            "examples": ["SECRET_TOKEN"]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["name", "created_at", "updated_at"]
      },
      "workflow": {
        "title": "Workflow",
        "description": "A GitHub Actions workflow",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [5] },
          "node_id": { "type": "string", "examples": ["MDg6V29ya2Zsb3cxMg=="] },
          "name": { "type": "string", "examples": ["CI"] },
          "path": { "type": "string", "examples": ["ruby.yaml"] },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "deleted",
              "disabled_fork",
              "disabled_inactivity",
              "disabled_manually"
            ],
            "examples": ["active"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2019-12-06T14:20:20.000Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2019-12-06T14:20:20.000Z"]
          },
          "url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/actions/setup-ruby/workflows/5"
            ]
          },
          "html_url": {
            "type": "string",
            "examples": [
              "https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml"
            ]
          },
          "badge_url": {
            "type": "string",
            "examples": [
              "https://github.com/actions/setup-ruby/workflows/CI/badge.svg"
            ]
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2019-12-06T14:20:20.000Z"]
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "path",
          "state",
          "url",
          "html_url",
          "badge_url",
          "created_at",
          "updated_at"
        ]
      },
      "autolink": {
        "title": "Autolink reference",
        "description": "An autolink reference.",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [3] },
          "key_prefix": {
            "description": "The prefix of a key that is linkified.",
            "type": "string",
            "examples": ["TICKET-"]
          },
          "url_template": {
            "description": "A template for the target URL that is generated if a key was found.",
            "type": "string",
            "examples": ["https://example.com/TICKET?query=<num>"]
          }
        },
        "required": ["id", "key_prefix", "url_template"]
      },
      "protected-branch-required-status-check": {
        "title": "Protected Branch Required Status Check",
        "description": "Protected Branch Required Status Check",
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "enforcement_level": { "type": "string" },
          "contexts": { "type": "array", "items": { "type": "string" } },
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "context": { "type": "string" },
                "app_id": { "type": ["integer", "null"] }
              },
              "required": ["context", "app_id"]
            }
          },
          "contexts_url": { "type": "string" },
          "strict": { "type": "boolean" }
        },
        "required": ["contexts", "checks"]
      },
      "protected-branch-admin-enforced": {
        "title": "Protected Branch Admin Enforced",
        "description": "Protected Branch Admin Enforced",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins"
            ]
          },
          "enabled": { "type": "boolean", "examples": [true] }
        },
        "required": ["url", "enabled"]
      },
      "protected-branch-pull-request-review": {
        "title": "Protected Branch Pull Request Review",
        "description": "Protected Branch Pull Request Review",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions"
            ]
          },
          "dismissal_restrictions": {
            "type": "object",
            "properties": {
              "users": {
                "description": "The list of users with review dismissal access.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/simple-user" }
              },
              "teams": {
                "description": "The list of teams with review dismissal access.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/team" }
              },
              "apps": {
                "description": "The list of apps with review dismissal access.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/integration" }
              },
              "url": {
                "type": "string",
                "examples": [
                  "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions\""
                ]
              },
              "users_url": {
                "type": "string",
                "examples": [
                  "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users\""
                ]
              },
              "teams_url": {
                "type": "string",
                "examples": [
                  "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams\""
                ]
              }
            }
          },
          "bypass_pull_request_allowances": {
            "type": "object",
            "description": "Allow specific users, teams, or apps to bypass pull request requirements.",
            "properties": {
              "users": {
                "description": "The list of users allowed to bypass pull request requirements.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/simple-user" }
              },
              "teams": {
                "description": "The list of teams allowed to bypass pull request requirements.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/team" }
              },
              "apps": {
                "description": "The list of apps allowed to bypass pull request requirements.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/integration" }
              }
            }
          },
          "dismiss_stale_reviews": { "type": "boolean", "examples": [true] },
          "require_code_owner_reviews": {
            "type": "boolean",
            "examples": [true]
          },
          "required_approving_review_count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 6,
            "examples": [2]
          }
        },
        "required": ["dismiss_stale_reviews", "require_code_owner_reviews"]
      },
      "branch-restriction-policy": {
        "title": "Branch Restriction Policy",
        "description": "Branch Restriction Policy",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "users_url": { "type": "string", "format": "uri" },
          "teams_url": { "type": "string", "format": "uri" },
          "apps_url": { "type": "string", "format": "uri" },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "login": { "type": "string" },
                "id": { "type": "integer" },
                "node_id": { "type": "string" },
                "avatar_url": { "type": "string" },
                "gravatar_id": { "type": "string" },
                "url": { "type": "string" },
                "html_url": { "type": "string" },
                "followers_url": { "type": "string" },
                "following_url": { "type": "string" },
                "gists_url": { "type": "string" },
                "starred_url": { "type": "string" },
                "subscriptions_url": { "type": "string" },
                "organizations_url": { "type": "string" },
                "repos_url": { "type": "string" },
                "events_url": { "type": "string" },
                "received_events_url": { "type": "string" },
                "type": { "type": "string" },
                "site_admin": { "type": "boolean" }
              }
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "node_id": { "type": "string" },
                "url": { "type": "string" },
                "html_url": { "type": "string" },
                "name": { "type": "string" },
                "slug": { "type": "string" },
                "description": { "type": ["string", "null"] },
                "privacy": { "type": "string" },
                "permission": { "type": "string" },
                "members_url": { "type": "string" },
                "repositories_url": { "type": "string" },
                "parent": { "type": ["string", "null"] }
              }
            }
          },
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "slug": { "type": "string" },
                "node_id": { "type": "string" },
                "owner": {
                  "type": "object",
                  "properties": {
                    "login": { "type": "string" },
                    "id": { "type": "integer" },
                    "node_id": { "type": "string" },
                    "url": { "type": "string" },
                    "repos_url": { "type": "string" },
                    "events_url": { "type": "string" },
                    "hooks_url": { "type": "string" },
                    "issues_url": { "type": "string" },
                    "members_url": { "type": "string" },
                    "public_members_url": { "type": "string" },
                    "avatar_url": { "type": "string" },
                    "description": { "type": "string" },
                    "gravatar_id": { "type": "string", "examples": ["\"\""] },
                    "html_url": {
                      "type": "string",
                      "examples": [
                        "\"https://github.com/testorg-ea8ec76d71c3af4b\""
                      ]
                    },
                    "followers_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers\""
                      ]
                    },
                    "following_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}\""
                      ]
                    },
                    "gists_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}\""
                      ]
                    },
                    "starred_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}\""
                      ]
                    },
                    "subscriptions_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions\""
                      ]
                    },
                    "organizations_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs\""
                      ]
                    },
                    "received_events_url": {
                      "type": "string",
                      "examples": [
                        "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events\""
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": ["\"Organization\""]
                    },
                    "site_admin": { "type": "boolean", "examples": [false] }
                  }
                },
                "name": { "type": "string" },
                "description": { "type": "string" },
                "external_url": { "type": "string" },
                "html_url": { "type": "string" },
                "created_at": { "type": "string" },
                "updated_at": { "type": "string" },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "metadata": { "type": "string" },
                    "contents": { "type": "string" },
                    "issues": { "type": "string" },
                    "single_file": { "type": "string" }
                  }
                },
                "events": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        },
        "required": [
          "url",
          "users_url",
          "teams_url",
          "apps_url",
          "users",
          "teams",
          "apps"
        ]
      },
      "branch-protection": {
        "title": "Branch Protection",
        "description": "Branch Protection",
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "enabled": { "type": "boolean" },
          "required_status_checks": {
            "$ref": "#/components/schemas/protected-branch-required-status-check"
          },
          "enforce_admins": {
            "$ref": "#/components/schemas/protected-branch-admin-enforced"
          },
          "required_pull_request_reviews": {
            "$ref": "#/components/schemas/protected-branch-pull-request-review"
          },
          "restrictions": {
            "$ref": "#/components/schemas/branch-restriction-policy"
          },
          "required_linear_history": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } }
          },
          "allow_force_pushes": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } }
          },
          "allow_deletions": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } }
          },
          "block_creations": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } }
          },
          "required_conversation_resolution": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } }
          },
          "name": {
            "type": "string",
            "examples": ["\"branch/with/protection\""]
          },
          "protection_url": {
            "type": "string",
            "examples": [
              "\"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection\""
            ]
          },
          "required_signatures": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "examples": [
                  "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures"
                ]
              },
              "enabled": { "type": "boolean", "examples": [true] }
            },
            "required": ["url", "enabled"]
          }
        }
      },
      "short-branch": {
        "title": "Short Branch",
        "description": "Short Branch",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "commit": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["sha", "url"]
          },
          "protected": { "type": "boolean" },
          "protection": { "$ref": "#/components/schemas/branch-protection" },
          "protection_url": { "type": "string", "format": "uri" }
        },
        "required": ["name", "commit", "protected"]
      },
      "git-user": {
        "title": "Git User",
        "description": "Metaproperties for Git author/committer information.",
        "type": "object",
        "properties": {
          "name": { "type": "string", "examples": ["\"Chris Wanstrath\""] },
          "email": { "type": "string", "examples": ["\"chris@ozmm.org\""] },
          "date": {
            "type": "string",
            "examples": ["\"2007-10-29T02:42:39.000-07:00\""]
          }
        }
      },
      "verification": {
        "title": "Verification",
        "type": "object",
        "properties": {
          "verified": { "type": "boolean" },
          "reason": { "type": "string" },
          "payload": { "type": ["string", "null"] },
          "signature": { "type": ["string", "null"] }
        },
        "required": ["verified", "reason", "payload", "signature"]
      },
      "diff-entry": {
        "title": "Diff Entry",
        "description": "Diff Entry",
        "type": "object",
        "properties": {
          "sha": {
            "type": "string",
            "examples": ["bbcd538c8e72b8c175046e27cc8f907076331401"]
          },
          "filename": { "type": "string", "examples": ["file1.txt"] },
          "status": {
            "type": "string",
            "enum": [
              "added",
              "removed",
              "modified",
              "renamed",
              "copied",
              "changed",
              "unchanged"
            ],
            "examples": ["added"]
          },
          "additions": { "type": "integer", "examples": [103] },
          "deletions": { "type": "integer", "examples": [21] },
          "changes": { "type": "integer", "examples": [124] },
          "blob_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
            ]
          },
          "raw_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
            ]
          },
          "contents_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "patch": {
            "type": "string",
            "examples": [
              "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
            ]
          },
          "previous_filename": { "type": "string", "examples": ["file.txt"] }
        },
        "required": [
          "additions",
          "blob_url",
          "changes",
          "contents_url",
          "deletions",
          "filename",
          "raw_url",
          "sha",
          "status"
        ]
      },
      "commit": {
        "title": "Commit",
        "description": "Commit",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "sha": {
            "type": "string",
            "examples": ["6dcb09b5b57875f334f61aebed695e2e4193db5e"]
          },
          "node_id": {
            "type": "string",
            "examples": [
              "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ=="
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments"
            ]
          },
          "commit": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "examples": [
                  "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                ]
              },
              "author": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/git-user" }
                ]
              },
              "committer": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/git-user" }
                ]
              },
              "message": { "type": "string", "examples": ["Fix all the bugs"] },
              "comment_count": { "type": "integer", "examples": [0] },
              "tree": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string",
                    "examples": ["827efc6d56897b048c772eb4087f854f46256132"]
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "examples": [
                      "https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132"
                    ]
                  }
                },
                "required": ["sha", "url"]
              },
              "verification": { "$ref": "#/components/schemas/verification" }
            },
            "required": [
              "author",
              "committer",
              "comment_count",
              "message",
              "tree",
              "url"
            ]
          },
          "author": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "committer": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sha": {
                  "type": "string",
                  "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "examples": [
                    "https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd"
                  ]
                },
                "html_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": [
                    "https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd"
                  ]
                }
              },
              "required": ["sha", "url"]
            }
          },
          "stats": {
            "type": "object",
            "properties": {
              "additions": { "type": "integer" },
              "deletions": { "type": "integer" },
              "total": { "type": "integer" }
            }
          },
          "files": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/diff-entry" }
          }
        },
        "required": [
          "url",
          "sha",
          "node_id",
          "html_url",
          "comments_url",
          "commit",
          "author",
          "committer",
          "parents"
        ]
      },
      "branch-with-protection": {
        "title": "Branch With Protection",
        "description": "Branch With Protection",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "commit": { "$ref": "#/components/schemas/commit" },
          "_links": {
            "type": "object",
            "properties": {
              "html": { "type": "string" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["html", "self"]
          },
          "protected": { "type": "boolean" },
          "protection": { "$ref": "#/components/schemas/branch-protection" },
          "protection_url": { "type": "string", "format": "uri" },
          "pattern": { "type": "string", "examples": ["\"mas*\""] },
          "required_approving_review_count": {
            "type": "integer",
            "examples": [1]
          }
        },
        "required": [
          "name",
          "commit",
          "_links",
          "protection",
          "protected",
          "protection_url"
        ]
      },
      "status-check-policy": {
        "title": "Status Check Policy",
        "description": "Status Check Policy",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks"
            ]
          },
          "strict": { "type": "boolean", "examples": [true] },
          "contexts": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["continuous-integration/travis-ci"]
          },
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "string",
                  "examples": ["continuous-integration/travis-ci"]
                },
                "app_id": { "type": ["integer", "null"] }
              },
              "required": ["context", "app_id"]
            }
          },
          "contexts_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
            ]
          }
        },
        "required": ["url", "contexts_url", "strict", "contexts", "checks"]
      },
      "protected-branch": {
        "title": "Protected Branch",
        "description": "Branch protections protect branches",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "required_status_checks": {
            "$ref": "#/components/schemas/status-check-policy"
          },
          "required_pull_request_reviews": {
            "type": "object",
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "dismiss_stale_reviews": { "type": "boolean" },
              "require_code_owner_reviews": { "type": "boolean" },
              "required_approving_review_count": { "type": "integer" },
              "dismissal_restrictions": {
                "type": "object",
                "properties": {
                  "url": { "type": "string", "format": "uri" },
                  "users_url": { "type": "string", "format": "uri" },
                  "teams_url": { "type": "string", "format": "uri" },
                  "users": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/simple-user" }
                  },
                  "teams": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/team" }
                  },
                  "apps": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/integration" }
                  }
                },
                "required": ["url", "users_url", "teams_url", "users", "teams"]
              },
              "bypass_pull_request_allowances": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/simple-user" }
                  },
                  "teams": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/team" }
                  },
                  "apps": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/integration" }
                  }
                },
                "required": ["users", "teams"]
              }
            },
            "required": ["url"]
          },
          "required_signatures": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "examples": [
                  "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures"
                ]
              },
              "enabled": { "type": "boolean", "examples": [true] }
            },
            "required": ["url", "enabled"]
          },
          "enforce_admins": {
            "type": "object",
            "properties": {
              "url": { "type": "string", "format": "uri" },
              "enabled": { "type": "boolean" }
            },
            "additionalProperties": false,
            "required": ["url", "enabled"]
          },
          "required_linear_history": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } },
            "additionalProperties": false,
            "required": ["enabled"]
          },
          "allow_force_pushes": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } },
            "additionalProperties": false,
            "required": ["enabled"]
          },
          "allow_deletions": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } },
            "additionalProperties": false,
            "required": ["enabled"]
          },
          "restrictions": {
            "$ref": "#/components/schemas/branch-restriction-policy"
          },
          "required_conversation_resolution": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } },
            "additionalProperties": false
          },
          "block_creations": {
            "type": "object",
            "properties": { "enabled": { "type": "boolean" } },
            "additionalProperties": false,
            "required": ["enabled"]
          }
        },
        "required": ["url"]
      },
      "deployment-simple": {
        "title": "Deployment",
        "description": "A deployment created as the result of an Actions check run from a workflow that references an environment",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/1"
            ]
          },
          "id": {
            "description": "Unique identifier of the deployment",
            "type": "integer",
            "examples": [42]
          },
          "node_id": { "type": "string", "examples": ["MDEwOkRlcGxveW1lbnQx"] },
          "task": {
            "description": "Parameter to specify a task to execute",
            "type": "string",
            "examples": ["deploy"]
          },
          "original_environment": { "type": "string", "examples": ["staging"] },
          "environment": {
            "description": "Name for the target deployment environment.",
            "type": "string",
            "examples": ["production"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["Deploy request from hubot"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/1/statuses"
            ]
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/example"]
          },
          "transient_environment": {
            "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
            "type": "boolean",
            "examples": [true]
          },
          "production_environment": {
            "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
            "type": "boolean",
            "examples": [true]
          },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "task",
          "environment",
          "description",
          "statuses_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "check-run": {
        "title": "CheckRun",
        "description": "A check performed on the code of a given code change",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the check.",
            "type": "integer",
            "examples": [21]
          },
          "head_sha": {
            "description": "The SHA of the commit that is being checked.",
            "type": "string",
            "examples": ["009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"]
          },
          "node_id": { "type": "string", "examples": ["MDg6Q2hlY2tSdW40"] },
          "external_id": { "type": ["string", "null"], "examples": ["42"] },
          "url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/check-runs/4"
            ]
          },
          "html_url": {
            "type": ["string", "null"],
            "examples": ["https://github.com/github/hello-world/runs/4"]
          },
          "details_url": {
            "type": ["string", "null"],
            "examples": ["https://example.com"]
          },
          "status": {
            "description": "The phase of the lifecycle that the check is currently in.",
            "type": "string",
            "enum": ["queued", "in_progress", "completed"],
            "examples": ["queued"]
          },
          "conclusion": {
            "type": ["string", "null"],
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required",
              null
            ],
            "examples": ["neutral"]
          },
          "started_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2018-05-04T01:14:52Z"]
          },
          "completed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2018-05-04T01:14:52Z"]
          },
          "output": {
            "type": "object",
            "properties": {
              "title": { "type": ["string", "null"] },
              "summary": { "type": ["string", "null"] },
              "text": { "type": ["string", "null"] },
              "annotations_count": { "type": "integer" },
              "annotations_url": { "type": "string", "format": "uri" }
            },
            "required": [
              "title",
              "summary",
              "text",
              "annotations_count",
              "annotations_url"
            ]
          },
          "name": {
            "description": "The name of the check.",
            "type": "string",
            "examples": ["test-coverage"]
          },
          "check_suite": {
            "type": ["object", "null"],
            "properties": { "id": { "type": "integer" } },
            "required": ["id"]
          },
          "app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "pull_requests": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/pull-request-minimal" }
          },
          "deployment": { "$ref": "#/components/schemas/deployment-simple" }
        },
        "required": [
          "id",
          "node_id",
          "head_sha",
          "name",
          "url",
          "html_url",
          "details_url",
          "status",
          "conclusion",
          "started_at",
          "completed_at",
          "external_id",
          "check_suite",
          "output",
          "app",
          "pull_requests"
        ]
      },
      "check-annotation": {
        "title": "Check Annotation",
        "description": "Check Annotation",
        "type": "object",
        "properties": {
          "path": { "type": "string", "examples": ["README.md"] },
          "start_line": { "type": "integer", "examples": [2] },
          "end_line": { "type": "integer", "examples": [2] },
          "start_column": { "type": ["integer", "null"], "examples": [5] },
          "end_column": { "type": ["integer", "null"], "examples": [10] },
          "annotation_level": {
            "type": ["string", "null"],
            "examples": ["warning"]
          },
          "title": {
            "type": ["string", "null"],
            "examples": ["Spell Checker"]
          },
          "message": {
            "type": ["string", "null"],
            "examples": ["Check your spelling for 'banaas'."]
          },
          "raw_details": {
            "type": ["string", "null"],
            "examples": ["Do you mean 'bananas' or 'banana'?"]
          },
          "blob_href": { "type": "string" }
        },
        "required": [
          "path",
          "blob_href",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "annotation_level",
          "title",
          "message",
          "raw_details"
        ]
      },
      "check-suite": {
        "title": "CheckSuite",
        "description": "A suite of checks performed on the code of a given code change",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [5] },
          "node_id": { "type": "string", "examples": ["MDEwOkNoZWNrU3VpdGU1"] },
          "head_branch": { "type": ["string", "null"], "examples": ["master"] },
          "head_sha": {
            "description": "The SHA of the head commit that is being checked.",
            "type": "string",
            "examples": ["009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"]
          },
          "status": {
            "type": ["string", "null"],
            "enum": ["queued", "in_progress", "completed", null],
            "examples": ["completed"]
          },
          "conclusion": {
            "type": ["string", "null"],
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required",
              "startup_failure",
              "stale",
              null
            ],
            "examples": ["neutral"]
          },
          "url": {
            "type": ["string", "null"],
            "examples": [
              "https://api.github.com/repos/github/hello-world/check-suites/5"
            ]
          },
          "before": {
            "type": ["string", "null"],
            "examples": ["146e867f55c26428e5f9fade55a9bbf5e95a7912"]
          },
          "after": {
            "type": ["string", "null"],
            "examples": ["d6fde92930d4715a2b49857d24b940956b26d2d3"]
          },
          "pull_requests": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/pull-request-minimal" }
          },
          "app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "created_at": { "type": ["string", "null"], "format": "date-time" },
          "updated_at": { "type": ["string", "null"], "format": "date-time" },
          "head_commit": { "$ref": "#/components/schemas/simple-commit" },
          "latest_check_runs_count": { "type": "integer" },
          "check_runs_url": { "type": "string" },
          "rerequestable": { "type": "boolean" },
          "runs_rerequestable": { "type": "boolean" }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "status",
          "conclusion",
          "head_sha",
          "url",
          "before",
          "after",
          "created_at",
          "updated_at",
          "app",
          "head_commit",
          "repository",
          "latest_check_runs_count",
          "check_runs_url",
          "pull_requests"
        ]
      },
      "check-suite-preference": {
        "title": "Check Suite Preference",
        "description": "Check suite configuration preferences for a repository.",
        "type": "object",
        "required": ["preferences", "repository"],
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "auto_trigger_checks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "app_id": { "type": "integer" },
                    "setting": { "type": "boolean" }
                  },
                  "required": ["app_id", "setting"]
                }
              }
            }
          },
          "repository": { "$ref": "#/components/schemas/minimal-repository" }
        }
      },
      "code-scanning-analysis-tool-name": {
        "type": "string",
        "description": "The name of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool-guid": {
        "type": ["string", "null"],
        "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
      },
      "code-scanning-ref": {
        "type": "string",
        "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`."
      },
      "code-scanning-alert-state": {
        "type": "string",
        "description": "State of a code scanning alert.",
        "enum": ["open", "closed", "dismissed", "fixed"]
      },
      "alert-instances-url": {
        "type": "string",
        "description": "The REST API URL for fetching the list of instances for an alert.",
        "format": "uri",
        "readOnly": true
      },
      "alert-fixed-at": {
        "type": ["string", "null"],
        "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "alert-dismissed-at": {
        "type": ["string", "null"],
        "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "code-scanning-alert-dismissed-reason": {
        "type": ["string", "null"],
        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert.",
        "enum": [null, "false positive", "won't fix", "used in tests"]
      },
      "code-scanning-alert-rule-summary": {
        "type": "object",
        "properties": {
          "id": {
            "type": ["string", "null"],
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "tags": {
            "type": ["array", "null"],
            "description": "A set of tags applicable for the rule.",
            "items": { "type": "string" }
          },
          "severity": {
            "type": ["string", "null"],
            "description": "The severity of the alert.",
            "enum": ["none", "note", "warning", "error", null]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          }
        }
      },
      "code-scanning-analysis-tool-version": {
        "type": ["string", "null"],
        "description": "The version of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
          },
          "version": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
          },
          "guid": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
          }
        }
      },
      "code-scanning-analysis-analysis-key": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
      },
      "code-scanning-alert-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
      },
      "code-scanning-analysis-category": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code."
      },
      "code-scanning-alert-location": {
        "type": "object",
        "description": "Describe a region within a file for the alert.",
        "properties": {
          "path": { "type": "string" },
          "start_line": { "type": "integer" },
          "end_line": { "type": "integer" },
          "start_column": { "type": "integer" },
          "end_column": { "type": "integer" }
        }
      },
      "code-scanning-alert-classification": {
        "type": ["string", "null"],
        "description": "A classification of the file. For example to identify it as generated.",
        "enum": ["source", "generated", "test", "library", null]
      },
      "code-scanning-alert-instance": {
        "type": "object",
        "properties": {
          "ref": { "$ref": "#/components/schemas/code-scanning-ref" },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-alert-environment"
          },
          "category": {
            "$ref": "#/components/schemas/code-scanning-analysis-category"
          },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "commit_sha": { "type": "string" },
          "message": {
            "type": "object",
            "properties": { "text": { "type": "string" } }
          },
          "location": {
            "$ref": "#/components/schemas/code-scanning-alert-location"
          },
          "html_url": { "type": "string" },
          "classifications": {
            "type": "array",
            "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
            "items": {
              "$ref": "#/components/schemas/code-scanning-alert-classification"
            }
          }
        }
      },
      "code-scanning-alert-items": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "updated_at": { "$ref": "#/components/schemas/alert-updated-at" },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "fixed_at": { "$ref": "#/components/schemas/alert-fixed-at" },
          "dismissed_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "dismissed_at": { "$ref": "#/components/schemas/alert-dismissed-at" },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance"
        ]
      },
      "code-scanning-alert-rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": ["string", "null"],
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "type": ["string", "null"],
            "description": "The severity of the alert.",
            "enum": ["none", "note", "warning", "error", null]
          },
          "security_severity_level": {
            "type": ["string", "null"],
            "description": "The security severity of the alert.",
            "enum": ["low", "medium", "high", "critical", null]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          },
          "full_description": {
            "type": "string",
            "description": "description of the rule used to detect the alert."
          },
          "tags": {
            "type": ["array", "null"],
            "description": "A set of tags applicable for the rule.",
            "items": { "type": "string" }
          },
          "help": {
            "type": ["string", "null"],
            "description": "Detailed documentation for the rule as GitHub Flavored Markdown."
          },
          "help_uri": {
            "type": ["string", "null"],
            "description": "A link to the documentation for the rule used to detect the alert."
          }
        }
      },
      "code-scanning-alert": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "updated_at": { "$ref": "#/components/schemas/alert-updated-at" },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "fixed_at": { "$ref": "#/components/schemas/alert-fixed-at" },
          "dismissed_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "dismissed_at": { "$ref": "#/components/schemas/alert-dismissed-at" },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": { "$ref": "#/components/schemas/code-scanning-alert-rule" },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance"
        ]
      },
      "code-scanning-alert-set-state": {
        "description": "Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`.",
        "type": "string",
        "enum": ["open", "dismissed"]
      },
      "code-scanning-analysis-sarif-id": {
        "type": "string",
        "description": "An identifier for the upload.",
        "examples": ["6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53"]
      },
      "code-scanning-analysis-commit-sha": {
        "description": "The SHA of the commit to which the analysis you are uploading relates.",
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "pattern": "^[0-9a-fA-F]+$"
      },
      "code-scanning-analysis-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which this analysis was performed."
      },
      "code-scanning-analysis-created-at": {
        "type": "string",
        "description": "The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "code-scanning-analysis-url": {
        "type": "string",
        "description": "The REST API URL of the analysis resource.",
        "format": "uri",
        "readOnly": true
      },
      "code-scanning-analysis": {
        "type": "object",
        "properties": {
          "ref": { "$ref": "#/components/schemas/code-scanning-ref" },
          "commit_sha": {
            "$ref": "#/components/schemas/code-scanning-analysis-commit-sha"
          },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-analysis-environment"
          },
          "category": {
            "$ref": "#/components/schemas/code-scanning-analysis-category"
          },
          "error": {
            "type": "string",
            "examples": ["error reading field xyz"]
          },
          "created_at": {
            "$ref": "#/components/schemas/code-scanning-analysis-created-at"
          },
          "results_count": {
            "type": "integer",
            "description": "The total number of results in the analysis."
          },
          "rules_count": {
            "type": "integer",
            "description": "The total number of rules used in the analysis."
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier for this analysis."
          },
          "url": { "$ref": "#/components/schemas/code-scanning-analysis-url" },
          "sarif_id": {
            "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "deletable": { "type": "boolean" },
          "warning": {
            "type": "string",
            "description": "Warning generated when processing the analysis",
            "examples": ["123 results were ignored"]
          }
        },
        "required": [
          "ref",
          "commit_sha",
          "analysis_key",
          "environment",
          "error",
          "created_at",
          "results_count",
          "rules_count",
          "id",
          "url",
          "sarif_id",
          "tool",
          "deletable",
          "warning"
        ]
      },
      "code-scanning-analysis-deletion": {
        "title": "Analysis deletion",
        "description": "Successful deletion of a code scanning analysis",
        "type": "object",
        "properties": {
          "next_analysis_url": {
            "type": ["string", "null"],
            "description": "Next deletable analysis in chain, without last analysis deletion confirmation",
            "format": "uri",
            "readOnly": true
          },
          "confirm_delete_url": {
            "type": ["string", "null"],
            "description": "Next deletable analysis in chain, with last analysis deletion confirmation",
            "format": "uri",
            "readOnly": true
          }
        },
        "required": ["next_analysis_url", "confirm_delete_url"]
      },
      "code-scanning-analysis-sarif-file": {
        "description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string. For more information, see \"[SARIF support for code scanning](https://docs.github.com/enterprise-server@3.4/code-security/secure-coding/sarif-support-for-code-scanning).\"",
        "type": "string"
      },
      "code-scanning-sarifs-receipt": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
          },
          "url": {
            "type": "string",
            "description": "The REST API URL for checking the status of the upload.",
            "format": "uri",
            "readOnly": true
          }
        }
      },
      "code-scanning-sarifs-status": {
        "type": "object",
        "properties": {
          "processing_status": {
            "type": "string",
            "enum": ["pending", "complete", "failed"],
            "description": "`pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed."
          },
          "analyses_url": {
            "type": ["string", "null"],
            "description": "The REST API URL for getting the analyses associated with the upload.",
            "format": "uri",
            "readOnly": true
          },
          "errors": {
            "type": ["array", "null"],
            "items": { "type": "string" },
            "description": "Any errors that ocurred during processing of the delivery.",
            "readOnly": true
          }
        }
      },
      "collaborator": {
        "title": "Collaborator",
        "description": "Collaborator",
        "type": "object",
        "properties": {
          "login": { "type": "string", "examples": ["octocat"] },
          "id": { "type": "integer", "examples": [1] },
          "email": { "type": ["string", "null"] },
          "name": { "type": ["string", "null"] },
          "node_id": { "type": "string", "examples": ["MDQ6VXNlcjE="] },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "gravatar_id": {
            "type": ["string", "null"],
            "examples": ["41d064eb2195891e12d0413f63227ea7"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/followers"]
          },
          "following_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/following{/other_user}"
            ]
          },
          "gists_url": {
            "type": "string",
            "examples": ["https://api.github.com/users/octocat/gists{/gist_id}"]
          },
          "starred_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/starred{/owner}{/repo}"
            ]
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/subscriptions"]
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/orgs"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/repos"]
          },
          "events_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/events{/privacy}"
            ]
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/received_events"]
          },
          "type": { "type": "string", "examples": ["User"] },
          "site_admin": { "type": "boolean" },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "push": { "type": "boolean" },
              "maintain": { "type": "boolean" },
              "admin": { "type": "boolean" }
            },
            "required": ["pull", "push", "admin"]
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "repository-invitation": {
        "title": "Repository Invitation",
        "description": "Repository invitations let you manage who you collaborate with.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository invitation.",
            "type": "integer",
            "examples": [42]
          },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "invitee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "inviter": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "permissions": {
            "description": "The permission associated with the invitation.",
            "type": "string",
            "enum": ["read", "write", "admin", "triage", "maintain"],
            "examples": ["read"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-06-13T14:52:50-05:00"]
          },
          "expired": {
            "description": "Whether or not the invitation has expired",
            "type": "boolean"
          },
          "url": {
            "description": "URL for the repository invitation",
            "type": "string",
            "examples": ["https://api.github.com/user/repository-invitations/1"]
          },
          "html_url": {
            "type": "string",
            "examples": ["https://github.com/octocat/Hello-World/invitations"]
          },
          "node_id": { "type": "string" }
        },
        "required": [
          "id",
          "node_id",
          "permissions",
          "inviter",
          "invitee",
          "repository",
          "url",
          "html_url",
          "created_at"
        ]
      },
      "repository-collaborator-permission": {
        "title": "Repository Collaborator Permission",
        "description": "Repository Collaborator Permission",
        "type": "object",
        "properties": {
          "permission": { "type": "string" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/collaborator" }
            ]
          }
        },
        "required": ["permission", "user"]
      },
      "commit-comment": {
        "title": "Commit Comment",
        "description": "Commit Comment",
        "type": "object",
        "properties": {
          "html_url": { "type": "string", "format": "uri" },
          "url": { "type": "string", "format": "uri" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "body": { "type": "string" },
          "path": { "type": ["string", "null"] },
          "position": { "type": ["integer", "null"] },
          "line": { "type": ["integer", "null"] },
          "commit_id": { "type": "string" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "url",
          "html_url",
          "id",
          "node_id",
          "user",
          "position",
          "line",
          "path",
          "commit_id",
          "body",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "branch-short": {
        "title": "Branch Short",
        "description": "Branch Short",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "commit": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "url": { "type": "string" }
            },
            "required": ["sha", "url"]
          },
          "protected": { "type": "boolean" }
        },
        "required": ["name", "commit", "protected"]
      },
      "link": {
        "title": "Link",
        "description": "Hypermedia Link",
        "type": "object",
        "properties": { "href": { "type": "string" } },
        "required": ["href"]
      },
      "auto-merge": {
        "title": "Auto merge",
        "description": "The status of auto merging a pull request.",
        "type": ["object", "null"],
        "properties": {
          "enabled_by": { "$ref": "#/components/schemas/simple-user" },
          "merge_method": {
            "type": "string",
            "description": "The merge method to use.",
            "enum": ["merge", "squash", "rebase"]
          },
          "commit_title": {
            "type": "string",
            "description": "Title for the merge commit message."
          },
          "commit_message": {
            "type": "string",
            "description": "Commit message for the merge commit."
          }
        },
        "required": [
          "enabled_by",
          "merge_method",
          "commit_title",
          "commit_message"
        ]
      },
      "pull-request-simple": {
        "title": "Pull Request Simple",
        "description": "Pull Request Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
            ]
          },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDExOlB1bGxSZXF1ZXN0MQ=="]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World/pull/1347"]
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1347.diff"
            ]
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1347.patch"
            ]
          },
          "issue_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/1347"
            ]
          },
          "commits_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
            ]
          },
          "review_comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
            ]
          },
          "review_comment_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
            ]
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
            ]
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "number": { "type": "integer", "examples": [1347] },
          "state": { "type": "string", "examples": ["open"] },
          "locked": { "type": "boolean", "examples": [true] },
          "title": { "type": "string", "examples": ["new-feature"] },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": {
            "type": ["string", "null"],
            "examples": ["Please pull these awesome changes"]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "format": "int64" },
                "node_id": { "type": "string" },
                "url": { "type": "string" },
                "name": { "type": "string" },
                "description": { "type": "string" },
                "color": { "type": "string" },
                "default": { "type": "boolean" }
              },
              "required": [
                "id",
                "node_id",
                "url",
                "name",
                "description",
                "color",
                "default"
              ]
            }
          },
          "milestone": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/milestone" }
            ]
          },
          "active_lock_reason": {
            "type": ["string", "null"],
            "examples": ["too heated"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "closed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "merged_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "merge_commit_sha": {
            "type": ["string", "null"],
            "examples": ["e5bd3914e2e596debea16f433f57875b5b90bcd6"]
          },
          "assignee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "assignees": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "requested_reviewers": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "requested_teams": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/team" }
          },
          "head": {
            "type": "object",
            "properties": {
              "label": { "type": "string" },
              "ref": { "type": "string" },
              "repo": { "$ref": "#/components/schemas/repository" },
              "sha": { "type": "string" },
              "user": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/simple-user" }
                ]
              }
            },
            "required": ["label", "ref", "repo", "sha", "user"]
          },
          "base": {
            "type": "object",
            "properties": {
              "label": { "type": "string" },
              "ref": { "type": "string" },
              "repo": { "$ref": "#/components/schemas/repository" },
              "sha": { "type": "string" },
              "user": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/simple-user" }
                ]
              }
            },
            "required": ["label", "ref", "repo", "sha", "user"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "comments": { "$ref": "#/components/schemas/link" },
              "commits": { "$ref": "#/components/schemas/link" },
              "statuses": { "$ref": "#/components/schemas/link" },
              "html": { "$ref": "#/components/schemas/link" },
              "issue": { "$ref": "#/components/schemas/link" },
              "review_comments": { "$ref": "#/components/schemas/link" },
              "review_comment": { "$ref": "#/components/schemas/link" },
              "self": { "$ref": "#/components/schemas/link" }
            },
            "required": [
              "comments",
              "commits",
              "statuses",
              "html",
              "issue",
              "review_comments",
              "review_comment",
              "self"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "auto_merge": { "$ref": "#/components/schemas/auto-merge" },
          "draft": {
            "description": "Indicates whether or not the pull request is a draft.",
            "type": "boolean",
            "examples": [false]
          }
        },
        "required": [
          "_links",
          "assignee",
          "labels",
          "base",
          "body",
          "closed_at",
          "comments_url",
          "commits_url",
          "created_at",
          "diff_url",
          "head",
          "html_url",
          "id",
          "node_id",
          "issue_url",
          "merge_commit_sha",
          "merged_at",
          "milestone",
          "number",
          "patch_url",
          "review_comment_url",
          "review_comments_url",
          "statuses_url",
          "state",
          "locked",
          "title",
          "updated_at",
          "url",
          "user",
          "author_association",
          "auto_merge"
        ]
      },
      "simple-commit-status": {
        "title": "Simple Commit Status",
        "type": "object",
        "properties": {
          "description": { "type": ["string", "null"] },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "state": { "type": "string" },
          "context": { "type": "string" },
          "target_url": { "type": ["string", "null"], "format": "uri" },
          "required": { "type": ["boolean", "null"] },
          "avatar_url": { "type": ["string", "null"], "format": "uri" },
          "url": { "type": "string", "format": "uri" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "description",
          "id",
          "node_id",
          "state",
          "context",
          "target_url",
          "avatar_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "combined-commit-status": {
        "title": "Combined Commit Status",
        "description": "Combined Commit Status",
        "type": "object",
        "properties": {
          "state": { "type": "string" },
          "statuses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/simple-commit-status" }
          },
          "sha": { "type": "string" },
          "total_count": { "type": "integer" },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "commit_url": { "type": "string", "format": "uri" },
          "url": { "type": "string", "format": "uri" }
        },
        "required": [
          "state",
          "sha",
          "total_count",
          "statuses",
          "repository",
          "commit_url",
          "url"
        ]
      },
      "status": {
        "title": "Status",
        "description": "The status of a commit.",
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "avatar_url": { "type": ["string", "null"] },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "state": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "target_url": { "type": ["string", "null"] },
          "context": { "type": "string" },
          "created_at": { "type": "string" },
          "updated_at": { "type": "string" },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          }
        },
        "required": [
          "url",
          "avatar_url",
          "id",
          "node_id",
          "state",
          "description",
          "target_url",
          "context",
          "created_at",
          "updated_at",
          "creator"
        ]
      },
      "commit-comparison": {
        "title": "Commit Comparison",
        "description": "Commit Comparison",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/compare/master...topic"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/compare/master...topic"
            ]
          },
          "permalink_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17"
            ]
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/compare/master...topic.diff"
            ]
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/compare/master...topic.patch"
            ]
          },
          "base_commit": { "$ref": "#/components/schemas/commit" },
          "merge_base_commit": { "$ref": "#/components/schemas/commit" },
          "status": {
            "type": "string",
            "enum": ["diverged", "ahead", "behind", "identical"],
            "examples": ["ahead"]
          },
          "ahead_by": { "type": "integer", "examples": [4] },
          "behind_by": { "type": "integer", "examples": [5] },
          "total_commits": { "type": "integer", "examples": [6] },
          "commits": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/commit" }
          },
          "files": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/diff-entry" }
          }
        },
        "required": [
          "url",
          "html_url",
          "permalink_url",
          "diff_url",
          "patch_url",
          "base_commit",
          "merge_base_commit",
          "status",
          "ahead_by",
          "behind_by",
          "total_commits",
          "commits"
        ]
      },
      "content-tree": {
        "title": "Content Tree",
        "description": "Content Tree",
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "size": { "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "git_url": { "type": ["string", "null"], "format": "uri" },
          "html_url": { "type": ["string", "null"], "format": "uri" },
          "download_url": { "type": ["string", "null"], "format": "uri" },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "size": { "type": "integer" },
                "name": { "type": "string" },
                "path": { "type": "string" },
                "content": { "type": "string" },
                "sha": { "type": "string" },
                "url": { "type": "string", "format": "uri" },
                "git_url": { "type": ["string", "null"], "format": "uri" },
                "html_url": { "type": ["string", "null"], "format": "uri" },
                "download_url": { "type": ["string", "null"], "format": "uri" },
                "_links": {
                  "type": "object",
                  "properties": {
                    "git": { "type": ["string", "null"], "format": "uri" },
                    "html": { "type": ["string", "null"], "format": "uri" },
                    "self": { "type": "string", "format": "uri" }
                  },
                  "required": ["git", "html", "self"]
                }
              },
              "required": [
                "_links",
                "git_url",
                "html_url",
                "download_url",
                "name",
                "path",
                "sha",
                "size",
                "type",
                "url"
              ]
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": { "type": ["string", "null"], "format": "uri" },
              "html": { "type": ["string", "null"], "format": "uri" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["git", "html", "self"]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding"
        ]
      },
      "content-directory": {
        "title": "Content Directory",
        "description": "A list of directory items",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["dir", "file", "submodule", "symlink"]
            },
            "size": { "type": "integer" },
            "name": { "type": "string" },
            "path": { "type": "string" },
            "content": { "type": "string" },
            "sha": { "type": "string" },
            "url": { "type": "string", "format": "uri" },
            "git_url": { "type": ["string", "null"], "format": "uri" },
            "html_url": { "type": ["string", "null"], "format": "uri" },
            "download_url": { "type": ["string", "null"], "format": "uri" },
            "_links": {
              "type": "object",
              "properties": {
                "git": { "type": ["string", "null"], "format": "uri" },
                "html": { "type": ["string", "null"], "format": "uri" },
                "self": { "type": "string", "format": "uri" }
              },
              "required": ["git", "html", "self"]
            }
          },
          "required": [
            "_links",
            "git_url",
            "html_url",
            "download_url",
            "name",
            "path",
            "sha",
            "size",
            "type",
            "url"
          ]
        }
      },
      "content-file": {
        "title": "Content File",
        "description": "Content File",
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["file"] },
          "encoding": { "type": "string" },
          "size": { "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "content": { "type": "string" },
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "git_url": { "type": ["string", "null"], "format": "uri" },
          "html_url": { "type": ["string", "null"], "format": "uri" },
          "download_url": { "type": ["string", "null"], "format": "uri" },
          "_links": {
            "type": "object",
            "properties": {
              "git": { "type": ["string", "null"], "format": "uri" },
              "html": { "type": ["string", "null"], "format": "uri" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["git", "html", "self"]
          },
          "target": { "type": "string", "examples": ["\"actual/actual.md\""] },
          "submodule_git_url": {
            "type": "string",
            "examples": ["\"git://example.com/defunkt/dotjs.git\""]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding"
        ]
      },
      "content-symlink": {
        "title": "Symlink Content",
        "description": "An object describing a symlink",
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["symlink"] },
          "target": { "type": "string" },
          "size": { "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "git_url": { "type": ["string", "null"], "format": "uri" },
          "html_url": { "type": ["string", "null"], "format": "uri" },
          "download_url": { "type": ["string", "null"], "format": "uri" },
          "_links": {
            "type": "object",
            "properties": {
              "git": { "type": ["string", "null"], "format": "uri" },
              "html": { "type": ["string", "null"], "format": "uri" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["git", "html", "self"]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "target"
        ]
      },
      "content-submodule": {
        "title": "Submodule Content",
        "description": "An object describing a submodule",
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["submodule"] },
          "submodule_git_url": { "type": "string", "format": "uri" },
          "size": { "type": "integer" },
          "name": { "type": "string" },
          "path": { "type": "string" },
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "git_url": { "type": ["string", "null"], "format": "uri" },
          "html_url": { "type": ["string", "null"], "format": "uri" },
          "download_url": { "type": ["string", "null"], "format": "uri" },
          "_links": {
            "type": "object",
            "properties": {
              "git": { "type": ["string", "null"], "format": "uri" },
              "html": { "type": ["string", "null"], "format": "uri" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["git", "html", "self"]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "submodule_git_url"
        ]
      },
      "file-commit": {
        "title": "File Commit",
        "description": "File Commit",
        "type": "object",
        "required": ["content", "commit"],
        "properties": {
          "content": {
            "type": ["object", "null"],
            "properties": {
              "name": { "type": "string" },
              "path": { "type": "string" },
              "sha": { "type": "string" },
              "size": { "type": "integer" },
              "url": { "type": "string" },
              "html_url": { "type": "string" },
              "git_url": { "type": "string" },
              "download_url": { "type": "string" },
              "type": { "type": "string" },
              "_links": {
                "type": "object",
                "properties": {
                  "self": { "type": "string" },
                  "git": { "type": "string" },
                  "html": { "type": "string" }
                }
              }
            }
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "node_id": { "type": "string" },
              "url": { "type": "string" },
              "html_url": { "type": "string" },
              "author": {
                "type": "object",
                "properties": {
                  "date": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              },
              "committer": {
                "type": "object",
                "properties": {
                  "date": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              },
              "message": { "type": "string" },
              "tree": {
                "type": "object",
                "properties": {
                  "url": { "type": "string" },
                  "sha": { "type": "string" }
                }
              },
              "parents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": { "type": "string" },
                    "html_url": { "type": "string" },
                    "sha": { "type": "string" }
                  }
                }
              },
              "verification": {
                "type": "object",
                "properties": {
                  "verified": { "type": "boolean" },
                  "reason": { "type": "string" },
                  "signature": { "type": ["string", "null"] },
                  "payload": { "type": ["string", "null"] }
                }
              }
            }
          }
        }
      },
      "contributor": {
        "title": "Contributor",
        "description": "Contributor",
        "type": "object",
        "properties": {
          "login": { "type": "string" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "avatar_url": { "type": "string", "format": "uri" },
          "gravatar_id": { "type": ["string", "null"] },
          "url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "followers_url": { "type": "string", "format": "uri" },
          "following_url": { "type": "string" },
          "gists_url": { "type": "string" },
          "starred_url": { "type": "string" },
          "subscriptions_url": { "type": "string", "format": "uri" },
          "organizations_url": { "type": "string", "format": "uri" },
          "repos_url": { "type": "string", "format": "uri" },
          "events_url": { "type": "string" },
          "received_events_url": { "type": "string", "format": "uri" },
          "type": { "type": "string" },
          "site_admin": { "type": "boolean" },
          "contributions": { "type": "integer" },
          "email": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["contributions", "type"]
      },
      "dependabot-secret": {
        "title": "Dependabot Secret",
        "description": "Set secrets for Dependabot.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "type": "string",
            "examples": ["MY_ARTIFACTORY_PASSWORD"]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["name", "created_at", "updated_at"]
      },
      "deployment-status": {
        "title": "Deployment Status",
        "description": "The status of a deployment.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/42/statuses/1"
            ]
          },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDE2OkRlcGxveW1lbnRTdGF0dXMx"]
          },
          "state": {
            "description": "The state of the status.",
            "enum": [
              "error",
              "failure",
              "inactive",
              "pending",
              "success",
              "queued",
              "in_progress"
            ],
            "type": "string",
            "examples": ["success"]
          },
          "creator": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "description": {
            "description": "A short description of the status.",
            "default": "",
            "type": "string",
            "maxLength": 140,
            "examples": ["Deployment finished successfully."]
          },
          "environment": {
            "description": "The environment of the deployment that the status is for.",
            "default": "",
            "type": "string",
            "examples": ["production"]
          },
          "target_url": {
            "description": "Deprecated: the URL to associate with this status.",
            "default": "",
            "type": "string",
            "format": "uri",
            "examples": ["https://example.com/deployment/42/output"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-07-20T01:19:13Z"]
          },
          "deployment_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/deployments/42"
            ]
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/example"]
          },
          "environment_url": {
            "description": "The URL for accessing your environment.",
            "default": "",
            "type": "string",
            "format": "uri",
            "examples": ["https://staging.example.com/"]
          },
          "log_url": {
            "description": "The URL to associate with this status.",
            "default": "",
            "type": "string",
            "format": "uri",
            "examples": ["https://example.com/deployment/42/output"]
          },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "state",
          "creator",
          "description",
          "deployment_url",
          "target_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "wait-timer": {
        "type": "integer",
        "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).",
        "examples": [30]
      },
      "deployment-branch-policy-settings": {
        "type": ["object", "null"],
        "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
        "properties": {
          "protected_branches": {
            "type": "boolean",
            "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`."
          },
          "custom_branch_policies": {
            "type": "boolean",
            "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`."
          }
        },
        "required": ["protected_branches", "custom_branch_policies"]
      },
      "environment": {
        "title": "Environment",
        "description": "Details of a deployment environment",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the environment.",
            "type": "integer",
            "examples": [56780428]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDExOkVudmlyb25tZW50NTY3ODA0Mjg="]
          },
          "name": {
            "description": "The name of the environment.",
            "type": "string",
            "examples": ["staging"]
          },
          "url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/github/hello-world/environments/staging"
            ]
          },
          "html_url": {
            "type": "string",
            "examples": [
              "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
            ]
          },
          "created_at": {
            "description": "The time that the environment was created, in ISO 8601 format.",
            "format": "date-time",
            "type": "string",
            "examples": ["2020-11-23T22:00:40Z"]
          },
          "updated_at": {
            "description": "The time that the environment was last updated, in ISO 8601 format.",
            "format": "date-time",
            "type": "string",
            "examples": ["2020-11-23T22:00:40Z"]
          },
          "protection_rules": {
            "type": "array",
            "description": "Built-in deployment protection rules for the environment.",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "examples": [3515] },
                    "node_id": {
                      "type": "string",
                      "examples": ["MDQ6R2F0ZTM1MTU="]
                    },
                    "type": { "type": "string", "examples": ["wait_timer"] },
                    "wait_timer": { "$ref": "#/components/schemas/wait-timer" }
                  },
                  "required": ["id", "node_id", "type"]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "examples": [3755] },
                    "node_id": {
                      "type": "string",
                      "examples": ["MDQ6R2F0ZTM3NTU="]
                    },
                    "type": {
                      "type": "string",
                      "examples": ["required_reviewers"]
                    },
                    "reviewers": {
                      "type": "array",
                      "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/deployment-reviewer-type"
                          },
                          "reviewer": {
                            "anyOf": [
                              { "$ref": "#/components/schemas/simple-user" },
                              { "$ref": "#/components/schemas/team" }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": ["id", "node_id", "type"]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "examples": [3515] },
                    "node_id": {
                      "type": "string",
                      "examples": ["MDQ6R2F0ZTM1MTU="]
                    },
                    "type": { "type": "string", "examples": ["branch_policy"] }
                  },
                  "required": ["id", "node_id", "type"]
                }
              ]
            }
          },
          "deployment_branch_policy": {
            "$ref": "#/components/schemas/deployment-branch-policy-settings"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "url",
          "html_url",
          "created_at",
          "updated_at"
        ]
      },
      "deployment-branch-policy": {
        "title": "Deployment branch policy",
        "description": "Details of a deployment branch policy.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the branch policy.",
            "type": "integer",
            "examples": [361471]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE="]
          },
          "name": {
            "description": "The name pattern that branches must match in order to deploy to the environment.",
            "type": "string",
            "examples": ["release/*"]
          }
        }
      },
      "deployment-branch-policy-name-pattern": {
        "title": "Deployment branch policy name pattern",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name pattern that branches must match in order to deploy to the environment.\n\nWildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.\nFor more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).",
            "type": "string",
            "examples": ["release/*"]
          }
        },
        "required": ["name"]
      },
      "short-blob": {
        "title": "Short Blob",
        "description": "Short Blob",
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "sha": { "type": "string" }
        },
        "required": ["url", "sha"]
      },
      "blob": {
        "title": "Blob",
        "description": "Blob",
        "type": "object",
        "properties": {
          "content": { "type": "string" },
          "encoding": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "sha": { "type": "string" },
          "size": { "type": ["integer", "null"] },
          "node_id": { "type": "string" },
          "highlighted_content": { "type": "string" }
        },
        "required": ["sha", "url", "node_id", "size", "content", "encoding"]
      },
      "git-commit": {
        "title": "Git Commit",
        "description": "Low-level Git commit operations within a repository",
        "type": "object",
        "properties": {
          "sha": {
            "description": "SHA for the commit",
            "type": "string",
            "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
          },
          "node_id": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "author": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "format": "date-time",
                "type": "string",
                "examples": ["2014-08-09T08:02:04+12:00"]
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "examples": ["monalisa.octocat@example.com"]
              },
              "name": {
                "description": "Name of the git user",
                "type": "string",
                "examples": ["Monalisa Octocat"]
              }
            },
            "required": ["email", "name", "date"]
          },
          "committer": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "format": "date-time",
                "type": "string",
                "examples": ["2014-08-09T08:02:04+12:00"]
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "examples": ["monalisa.octocat@example.com"]
              },
              "name": {
                "description": "Name of the git user",
                "type": "string",
                "examples": ["Monalisa Octocat"]
              }
            },
            "required": ["email", "name", "date"]
          },
          "message": {
            "description": "Message describing the purpose of the commit",
            "type": "string",
            "examples": ["Fix #42"]
          },
          "tree": {
            "type": "object",
            "properties": {
              "sha": {
                "description": "SHA for the commit",
                "type": "string",
                "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
              },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["sha", "url"]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sha": {
                  "description": "SHA for the commit",
                  "type": "string",
                  "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
                },
                "url": { "type": "string", "format": "uri" },
                "html_url": { "type": "string", "format": "uri" }
              },
              "required": ["sha", "url", "html_url"]
            }
          },
          "verification": {
            "type": "object",
            "properties": {
              "verified": { "type": "boolean" },
              "reason": { "type": "string" },
              "signature": { "type": ["string", "null"] },
              "payload": { "type": ["string", "null"] }
            },
            "required": ["verified", "reason", "signature", "payload"]
          },
          "html_url": { "type": "string", "format": "uri" }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "tree",
          "message",
          "parents",
          "verification"
        ]
      },
      "git-ref": {
        "title": "Git Reference",
        "description": "Git references within a repository",
        "type": "object",
        "properties": {
          "ref": { "type": "string" },
          "node_id": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "object": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "sha": {
                "description": "SHA for the reference",
                "type": "string",
                "minLength": 40,
                "maxLength": 40,
                "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
              },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["type", "sha", "url"]
          }
        },
        "required": ["ref", "node_id", "url", "object"]
      },
      "git-tag": {
        "title": "Git Tag",
        "description": "Metadata for a Git tag",
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "examples": [
              "MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw=="
            ]
          },
          "tag": {
            "description": "Name of the tag",
            "type": "string",
            "examples": ["v0.0.1"]
          },
          "sha": {
            "type": "string",
            "examples": ["940bd336248efae0f9ee5bc7b2d5c985887b16ac"]
          },
          "url": {
            "description": "URL for the tag",
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac"
            ]
          },
          "message": {
            "description": "Message describing the purpose of the tag",
            "type": "string",
            "examples": ["Initial public release"]
          },
          "tagger": {
            "type": "object",
            "properties": {
              "date": { "type": "string" },
              "email": { "type": "string" },
              "name": { "type": "string" }
            },
            "required": ["date", "email", "name"]
          },
          "object": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "type": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["sha", "type", "url"]
          },
          "verification": { "$ref": "#/components/schemas/verification" }
        },
        "required": [
          "sha",
          "url",
          "node_id",
          "tagger",
          "object",
          "tag",
          "message"
        ]
      },
      "git-tree": {
        "title": "Git Tree",
        "description": "The hierarchy between files in a Git repository.",
        "type": "object",
        "properties": {
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "truncated": { "type": "boolean" },
          "tree": {
            "description": "Objects specifying a tree structure",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": { "type": "string", "examples": ["test/file.rb"] },
                "mode": { "type": "string", "examples": ["040000"] },
                "type": { "type": "string", "examples": ["tree"] },
                "sha": {
                  "type": "string",
                  "examples": ["23f6827669e43831def8a7ad935069c8bd418261"]
                },
                "size": { "type": "integer", "examples": [12] },
                "url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261"
                  ]
                }
              }
            },
            "examples": [
              {
                "path": "file.rb",
                "mode": "100644",
                "type": "blob",
                "size": 30,
                "sha": "44b4fc6d56897b048c772eb4087f854f46256132",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132",
                "properties": {
                  "path": { "type": "string" },
                  "mode": { "type": "string" },
                  "type": { "type": "string" },
                  "size": { "type": "integer" },
                  "sha": { "type": "string" },
                  "url": { "type": "string" }
                },
                "required": ["path", "mode", "type", "sha", "url", "size"]
              }
            ]
          }
        },
        "required": ["sha", "url", "tree", "truncated"]
      },
      "hook-response": {
        "title": "Hook Response",
        "type": "object",
        "properties": {
          "code": { "type": ["integer", "null"] },
          "status": { "type": ["string", "null"] },
          "message": { "type": ["string", "null"] }
        },
        "required": ["code", "status", "message"]
      },
      "hook": {
        "title": "Webhook",
        "description": "Webhooks for repositories.",
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": {
            "description": "Unique identifier of the webhook.",
            "type": "integer",
            "examples": [42]
          },
          "name": {
            "description": "The name of a valid service, use 'web' for a webhook.",
            "type": "string",
            "examples": ["web"]
          },
          "active": {
            "description": "Determines whether the hook is actually triggered on pushes.",
            "type": "boolean",
            "examples": [true]
          },
          "events": {
            "description": "Determines what events the hook is triggered for. Default: ['push'].",
            "type": "array",
            "items": { "type": "string" },
            "examples": ["push", "pull_request"]
          },
          "config": {
            "type": "object",
            "properties": {
              "email": { "type": "string", "examples": ["\"foo@bar.com\""] },
              "password": { "type": "string", "examples": ["\"foo\""] },
              "room": { "type": "string", "examples": ["\"roomer\""] },
              "subdomain": { "type": "string", "examples": ["\"foo\""] },
              "url": { "$ref": "#/components/schemas/webhook-config-url" },
              "insecure_ssl": {
                "$ref": "#/components/schemas/webhook-config-insecure-ssl"
              },
              "content_type": {
                "$ref": "#/components/schemas/webhook-config-content-type"
              },
              "digest": { "type": "string", "examples": ["\"sha256\""] },
              "secret": {
                "$ref": "#/components/schemas/webhook-config-secret"
              },
              "token": { "type": "string", "examples": ["\"abc\""] }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T20:39:23Z"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-09-06T17:26:27Z"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/hooks/1"
            ]
          },
          "test_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
            ]
          },
          "ping_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
            ]
          },
          "deliveries_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries"
            ]
          },
          "last_response": { "$ref": "#/components/schemas/hook-response" }
        },
        "required": [
          "id",
          "url",
          "type",
          "name",
          "active",
          "events",
          "config",
          "ping_url",
          "created_at",
          "updated_at",
          "last_response",
          "test_url"
        ]
      },
      "issue-event-label": {
        "title": "Issue Event Label",
        "description": "Issue Event Label",
        "type": "object",
        "properties": {
          "name": { "type": ["string", "null"] },
          "color": { "type": ["string", "null"] }
        },
        "required": ["name", "color"]
      },
      "issue-event-dismissed-review": {
        "title": "Issue Event Dismissed Review",
        "type": "object",
        "properties": {
          "state": { "type": "string" },
          "review_id": { "type": "integer" },
          "dismissal_message": { "type": ["string", "null"] },
          "dismissal_commit_id": { "type": ["string", "null"] }
        },
        "required": ["state", "review_id", "dismissal_message"]
      },
      "issue-event-milestone": {
        "title": "Issue Event Milestone",
        "description": "Issue Event Milestone",
        "type": "object",
        "properties": { "title": { "type": "string" } },
        "required": ["title"]
      },
      "issue-event-project-card": {
        "title": "Issue Event Project Card",
        "description": "Issue Event Project Card",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "id": { "type": "integer" },
          "project_url": { "type": "string", "format": "uri" },
          "project_id": { "type": "integer" },
          "column_name": { "type": "string" },
          "previous_column_name": { "type": "string" }
        },
        "required": ["url", "id", "project_url", "project_id", "column_name"]
      },
      "issue-event-rename": {
        "title": "Issue Event Rename",
        "description": "Issue Event Rename",
        "type": "object",
        "properties": {
          "from": { "type": "string" },
          "to": { "type": "string" }
        },
        "required": ["from", "to"]
      },
      "issue-event": {
        "title": "Issue Event",
        "description": "Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [1] },
          "node_id": { "type": "string", "examples": ["MDEwOklzc3VlRXZlbnQx"] },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/events/1"
            ]
          },
          "actor": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "event": { "type": "string", "examples": ["closed"] },
          "commit_id": {
            "type": ["string", "null"],
            "examples": ["6dcb09b5b57875f334f61aebed695e2e4193db5e"]
          },
          "commit_url": {
            "type": ["string", "null"],
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "issue": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/issue" }
            ]
          },
          "label": { "$ref": "#/components/schemas/issue-event-label" },
          "assignee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "assigner": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "review_requester": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "requested_reviewer": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "requested_team": { "$ref": "#/components/schemas/team" },
          "dismissed_review": {
            "$ref": "#/components/schemas/issue-event-dismissed-review"
          },
          "milestone": { "$ref": "#/components/schemas/issue-event-milestone" },
          "project_card": {
            "$ref": "#/components/schemas/issue-event-project-card"
          },
          "rename": { "$ref": "#/components/schemas/issue-event-rename" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "lock_reason": { "type": ["string", "null"] },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at"
        ]
      },
      "labeled-issue-event": {
        "title": "Labeled Issue Event",
        "description": "Labeled Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "label": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "color": { "type": "string" }
            },
            "required": ["name", "color"]
          }
        },
        "required": [
          "label",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "unlabeled-issue-event": {
        "title": "Unlabeled Issue Event",
        "description": "Unlabeled Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "label": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "color": { "type": "string" }
            },
            "required": ["name", "color"]
          }
        },
        "required": [
          "label",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "assigned-issue-event": {
        "title": "Assigned Issue Event",
        "description": "Assigned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "$ref": "#/components/schemas/integration"
          },
          "assignee": { "$ref": "#/components/schemas/simple-user" },
          "assigner": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app",
          "assignee",
          "assigner"
        ]
      },
      "unassigned-issue-event": {
        "title": "Unassigned Issue Event",
        "description": "Unassigned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "assignee": { "$ref": "#/components/schemas/simple-user" },
          "assigner": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app",
          "assignee",
          "assigner"
        ]
      },
      "milestoned-issue-event": {
        "title": "Milestoned Issue Event",
        "description": "Milestoned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "milestone": {
            "type": "object",
            "properties": { "title": { "type": "string" } },
            "required": ["title"]
          }
        },
        "required": [
          "milestone",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "demilestoned-issue-event": {
        "title": "Demilestoned Issue Event",
        "description": "Demilestoned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "milestone": {
            "type": "object",
            "properties": { "title": { "type": "string" } },
            "required": ["title"]
          }
        },
        "required": [
          "milestone",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "renamed-issue-event": {
        "title": "Renamed Issue Event",
        "description": "Renamed Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "rename": {
            "type": "object",
            "properties": {
              "from": { "type": "string" },
              "to": { "type": "string" }
            },
            "required": ["from", "to"]
          }
        },
        "required": [
          "rename",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "review-requested-issue-event": {
        "title": "Review Requested Issue Event",
        "description": "Review Requested Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "review_requester": { "$ref": "#/components/schemas/simple-user" },
          "requested_team": { "$ref": "#/components/schemas/team" },
          "requested_reviewer": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "review_requester",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "review-request-removed-issue-event": {
        "title": "Review Request Removed Issue Event",
        "description": "Review Request Removed Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "review_requester": { "$ref": "#/components/schemas/simple-user" },
          "requested_team": { "$ref": "#/components/schemas/team" },
          "requested_reviewer": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "review_requester",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "review-dismissed-issue-event": {
        "title": "Review Dismissed Issue Event",
        "description": "Review Dismissed Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "dismissed_review": {
            "type": "object",
            "properties": {
              "state": { "type": "string" },
              "review_id": { "type": "integer" },
              "dismissal_message": { "type": ["string", "null"] },
              "dismissal_commit_id": { "type": "string" }
            },
            "required": ["state", "review_id", "dismissal_message"]
          }
        },
        "required": [
          "dismissed_review",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "locked-issue-event": {
        "title": "Locked Issue Event",
        "description": "Locked Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "lock_reason": {
            "type": ["string", "null"],
            "examples": ["\"off-topic\""]
          }
        },
        "required": [
          "lock_reason",
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "added-to-project-issue-event": {
        "title": "Added to Project Issue Event",
        "description": "Added to Project Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "project_card": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "url": { "type": "string", "format": "uri" },
              "project_id": { "type": "integer" },
              "project_url": { "type": "string", "format": "uri" },
              "column_name": { "type": "string" },
              "previous_column_name": { "type": "string" }
            },
            "required": [
              "id",
              "url",
              "project_id",
              "project_url",
              "column_name"
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "moved-column-in-project-issue-event": {
        "title": "Moved Column in Project Issue Event",
        "description": "Moved Column in Project Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "project_card": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "url": { "type": "string", "format": "uri" },
              "project_id": { "type": "integer" },
              "project_url": { "type": "string", "format": "uri" },
              "column_name": { "type": "string" },
              "previous_column_name": { "type": "string" }
            },
            "required": [
              "id",
              "url",
              "project_id",
              "project_url",
              "column_name"
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "removed-from-project-issue-event": {
        "title": "Removed from Project Issue Event",
        "description": "Removed from Project Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "project_card": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "url": { "type": "string", "format": "uri" },
              "project_id": { "type": "integer" },
              "project_url": { "type": "string", "format": "uri" },
              "column_name": { "type": "string" },
              "previous_column_name": { "type": "string" }
            },
            "required": [
              "id",
              "url",
              "project_id",
              "project_url",
              "column_name"
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "converted-note-to-issue-issue-event": {
        "title": "Converted Note to Issue Issue Event",
        "description": "Converted Note to Issue Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "$ref": "#/components/schemas/integration"
          },
          "project_card": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "url": { "type": "string", "format": "uri" },
              "project_id": { "type": "integer" },
              "project_url": { "type": "string", "format": "uri" },
              "column_name": { "type": "string" },
              "previous_column_name": { "type": "string" }
            },
            "required": [
              "id",
              "url",
              "project_id",
              "project_url",
              "column_name"
            ]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "issue-event-for-issue": {
        "title": "Issue Event for Issue",
        "description": "Issue Event for Issue",
        "anyOf": [
          { "$ref": "#/components/schemas/labeled-issue-event" },
          { "$ref": "#/components/schemas/unlabeled-issue-event" },
          { "$ref": "#/components/schemas/assigned-issue-event" },
          { "$ref": "#/components/schemas/unassigned-issue-event" },
          { "$ref": "#/components/schemas/milestoned-issue-event" },
          { "$ref": "#/components/schemas/demilestoned-issue-event" },
          { "$ref": "#/components/schemas/renamed-issue-event" },
          { "$ref": "#/components/schemas/review-requested-issue-event" },
          { "$ref": "#/components/schemas/review-request-removed-issue-event" },
          { "$ref": "#/components/schemas/review-dismissed-issue-event" },
          { "$ref": "#/components/schemas/locked-issue-event" },
          { "$ref": "#/components/schemas/added-to-project-issue-event" },
          {
            "$ref": "#/components/schemas/moved-column-in-project-issue-event"
          },
          { "$ref": "#/components/schemas/removed-from-project-issue-event" },
          { "$ref": "#/components/schemas/converted-note-to-issue-issue-event" }
        ]
      },
      "label": {
        "title": "Label",
        "description": "Color-coded labels help you categorize and filter your issues (just like labels in Gmail).",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "examples": [208045946]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDU6TGFiZWwyMDgwNDU5NDY="]
          },
          "url": {
            "description": "URL for the label",
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repositories/42/labels/bug"]
          },
          "name": {
            "description": "The name of the label.",
            "type": "string",
            "examples": ["bug"]
          },
          "description": {
            "type": ["string", "null"],
            "examples": ["Something isn't working"]
          },
          "color": {
            "description": "6-character hex code, without the leading #, identifying the color",
            "type": "string",
            "examples": ["FFFFFF"]
          },
          "default": { "type": "boolean", "examples": [true] }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "name",
          "description",
          "color",
          "default"
        ]
      },
      "timeline-comment-event": {
        "title": "Timeline Comment Event",
        "description": "Timeline Comment Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "id": {
            "description": "Unique identifier of the issue comment",
            "type": "integer",
            "examples": [42]
          },
          "node_id": { "type": "string" },
          "url": {
            "description": "URL for the issue comment",
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repositories/42/issues/comments/1"
            ]
          },
          "body": {
            "description": "Contents of the issue comment",
            "type": "string",
            "examples": [
              "What version of Safari were you using when you observed this bug?"
            ]
          },
          "body_text": { "type": "string" },
          "body_html": { "type": "string" },
          "html_url": { "type": "string", "format": "uri" },
          "user": { "$ref": "#/components/schemas/simple-user" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "issue_url": { "type": "string", "format": "uri" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "event",
          "actor",
          "id",
          "node_id",
          "html_url",
          "issue_url",
          "author_association",
          "user",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "timeline-cross-referenced-event": {
        "title": "Timeline Cross Referenced Event",
        "description": "Timeline Cross Referenced Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "source": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "issue": { "$ref": "#/components/schemas/issue" }
            }
          }
        },
        "required": ["event", "created_at", "updated_at", "source"]
      },
      "timeline-committed-event": {
        "title": "Timeline Committed Event",
        "description": "Timeline Committed Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "sha": {
            "description": "SHA for the commit",
            "type": "string",
            "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
          },
          "node_id": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "author": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "format": "date-time",
                "type": "string",
                "examples": ["2014-08-09T08:02:04+12:00"]
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "examples": ["monalisa.octocat@example.com"]
              },
              "name": {
                "description": "Name of the git user",
                "type": "string",
                "examples": ["Monalisa Octocat"]
              }
            },
            "required": ["email", "name", "date"]
          },
          "committer": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "format": "date-time",
                "type": "string",
                "examples": ["2014-08-09T08:02:04+12:00"]
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "examples": ["monalisa.octocat@example.com"]
              },
              "name": {
                "description": "Name of the git user",
                "type": "string",
                "examples": ["Monalisa Octocat"]
              }
            },
            "required": ["email", "name", "date"]
          },
          "message": {
            "description": "Message describing the purpose of the commit",
            "type": "string",
            "examples": ["Fix #42"]
          },
          "tree": {
            "type": "object",
            "properties": {
              "sha": {
                "description": "SHA for the commit",
                "type": "string",
                "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
              },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["sha", "url"]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sha": {
                  "description": "SHA for the commit",
                  "type": "string",
                  "examples": ["7638417db6d59f3c431d3e1f261cc637155684cd"]
                },
                "url": { "type": "string", "format": "uri" },
                "html_url": { "type": "string", "format": "uri" }
              },
              "required": ["sha", "url", "html_url"]
            }
          },
          "verification": {
            "type": "object",
            "properties": {
              "verified": { "type": "boolean" },
              "reason": { "type": "string" },
              "signature": { "type": ["string", "null"] },
              "payload": { "type": ["string", "null"] }
            },
            "required": ["verified", "reason", "signature", "payload"]
          },
          "html_url": { "type": "string", "format": "uri" }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "tree",
          "message",
          "parents",
          "verification"
        ]
      },
      "timeline-reviewed-event": {
        "title": "Timeline Reviewed Event",
        "description": "Timeline Reviewed Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "id": {
            "description": "Unique identifier of the review",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA="]
          },
          "user": { "$ref": "#/components/schemas/simple-user" },
          "body": {
            "description": "The text of the review.",
            "type": ["string", "null"],
            "examples": ["This looks great."]
          },
          "state": { "type": "string", "examples": ["CHANGES_REQUESTED"] },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
            ]
          },
          "pull_request_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/12"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "html": {
                "type": "object",
                "properties": { "href": { "type": "string" } },
                "required": ["href"]
              },
              "pull_request": {
                "type": "object",
                "properties": { "href": { "type": "string" } },
                "required": ["href"]
              }
            },
            "required": ["html", "pull_request"]
          },
          "submitted_at": { "type": "string", "format": "date-time" },
          "commit_id": {
            "description": "A commit SHA for the review.",
            "type": "string",
            "examples": ["54bb654c9e6025347f57900a4a5c2313a96b8035"]
          },
          "body_html": { "type": "string" },
          "body_text": { "type": "string" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          }
        },
        "required": [
          "event",
          "id",
          "node_id",
          "user",
          "body",
          "state",
          "commit_id",
          "html_url",
          "pull_request_url",
          "_links",
          "author_association"
        ]
      },
      "pull-request-review-comment": {
        "title": "Pull Request Review Comment",
        "description": "Pull Request Review Comments are comments on a portion of the Pull Request's diff.",
        "type": "object",
        "properties": {
          "url": {
            "description": "URL for the pull request review comment",
            "type": "string",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
            ]
          },
          "pull_request_review_id": {
            "description": "The ID of the pull request review to which the comment belongs.",
            "type": ["integer", "null"],
            "examples": [42]
          },
          "id": {
            "description": "The ID of the pull request review comment.",
            "type": "integer",
            "examples": [1]
          },
          "node_id": {
            "description": "The node ID of the pull request review comment.",
            "type": "string",
            "examples": ["MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw"]
          },
          "diff_hunk": {
            "description": "The diff of the line that the comment refers to.",
            "type": "string",
            "examples": [
              "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
            ]
          },
          "path": {
            "description": "The relative path of the file to which the comment applies.",
            "type": "string",
            "examples": ["config/database.yaml"]
          },
          "position": {
            "description": "The line index in the diff to which the comment applies. This field is deprecated; use `line` instead.",
            "type": "integer",
            "examples": [1]
          },
          "original_position": {
            "description": "The index of the original line in the diff to which the comment applies. This field is deprecated; use `original_line` instead.",
            "type": "integer",
            "examples": [4]
          },
          "commit_id": {
            "description": "The SHA of the commit to which the comment applies.",
            "type": "string",
            "examples": ["6dcb09b5b57875f334f61aebed695e2e4193db5e"]
          },
          "original_commit_id": {
            "description": "The SHA of the original commit to which the comment applies.",
            "type": "string",
            "examples": ["9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840"]
          },
          "in_reply_to_id": {
            "description": "The comment ID to reply to.",
            "type": "integer",
            "examples": [8]
          },
          "user": { "$ref": "#/components/schemas/simple-user" },
          "body": {
            "description": "The text of the comment.",
            "type": "string",
            "examples": [
              "We should probably include a check for null values here."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "html_url": {
            "description": "HTML URL for the pull request review comment.",
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
            ]
          },
          "pull_request_url": {
            "description": "URL for the pull request that the review comment belongs to.",
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "examples": [
                      "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                    ]
                  }
                },
                "required": ["href"]
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "examples": [
                      "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                    ]
                  }
                },
                "required": ["href"]
              },
              "pull_request": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "examples": [
                      "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                    ]
                  }
                },
                "required": ["href"]
              }
            },
            "required": ["self", "html", "pull_request"]
          },
          "start_line": {
            "type": ["integer", "null"],
            "description": "The first line of the range for a multi-line comment.",
            "examples": [2]
          },
          "original_start_line": {
            "type": ["integer", "null"],
            "description": "The first line of the range for a multi-line comment.",
            "examples": [2]
          },
          "start_side": {
            "type": ["string", "null"],
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": ["LEFT", "RIGHT", null],
            "default": "RIGHT"
          },
          "line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "type": "integer",
            "examples": [2]
          },
          "original_line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "type": "integer",
            "examples": [2]
          },
          "side": {
            "description": "The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment",
            "enum": ["LEFT", "RIGHT"],
            "default": "RIGHT",
            "type": "string"
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" },
          "body_html": {
            "type": "string",
            "examples": ["\"<p>comment body</p>\""]
          },
          "body_text": { "type": "string", "examples": ["\"comment body\""] }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "pull_request_review_id",
          "diff_hunk",
          "path",
          "position",
          "original_position",
          "commit_id",
          "original_commit_id",
          "user",
          "body",
          "created_at",
          "updated_at",
          "html_url",
          "pull_request_url",
          "author_association",
          "_links"
        ]
      },
      "timeline-line-commented-event": {
        "title": "Timeline Line Commented Event",
        "description": "Timeline Line Commented Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "node_id": { "type": "string" },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pull-request-review-comment"
            }
          }
        }
      },
      "timeline-commit-commented-event": {
        "title": "Timeline Commit Commented Event",
        "description": "Timeline Commit Commented Event",
        "type": "object",
        "properties": {
          "event": { "type": "string" },
          "node_id": { "type": "string" },
          "commit_id": { "type": "string" },
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/commit-comment" }
          }
        }
      },
      "timeline-assigned-issue-event": {
        "title": "Timeline Assigned Issue Event",
        "description": "Timeline Assigned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "assignee": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app",
          "assignee"
        ]
      },
      "timeline-unassigned-issue-event": {
        "title": "Timeline Unassigned Issue Event",
        "description": "Timeline Unassigned Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "assignee": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app",
          "assignee"
        ]
      },
      "state-change-issue-event": {
        "title": "State Change Issue Event",
        "description": "State Change Issue Event",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/simple-user" },
          "event": { "type": "string" },
          "commit_id": { "type": ["string", "null"] },
          "commit_url": { "type": ["string", "null"] },
          "created_at": { "type": "string" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "state_reason": { "type": ["string", "null"] }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at",
          "performed_via_github_app"
        ]
      },
      "timeline-issue-events": {
        "title": "Timeline Event",
        "description": "Timeline Event",
        "type": "object",
        "anyOf": [
          { "$ref": "#/components/schemas/labeled-issue-event" },
          { "$ref": "#/components/schemas/unlabeled-issue-event" },
          { "$ref": "#/components/schemas/milestoned-issue-event" },
          { "$ref": "#/components/schemas/demilestoned-issue-event" },
          { "$ref": "#/components/schemas/renamed-issue-event" },
          { "$ref": "#/components/schemas/review-requested-issue-event" },
          { "$ref": "#/components/schemas/review-request-removed-issue-event" },
          { "$ref": "#/components/schemas/review-dismissed-issue-event" },
          { "$ref": "#/components/schemas/locked-issue-event" },
          { "$ref": "#/components/schemas/added-to-project-issue-event" },
          {
            "$ref": "#/components/schemas/moved-column-in-project-issue-event"
          },
          { "$ref": "#/components/schemas/removed-from-project-issue-event" },
          {
            "$ref": "#/components/schemas/converted-note-to-issue-issue-event"
          },
          { "$ref": "#/components/schemas/timeline-comment-event" },
          { "$ref": "#/components/schemas/timeline-cross-referenced-event" },
          { "$ref": "#/components/schemas/timeline-committed-event" },
          { "$ref": "#/components/schemas/timeline-reviewed-event" },
          { "$ref": "#/components/schemas/timeline-line-commented-event" },
          { "$ref": "#/components/schemas/timeline-commit-commented-event" },
          { "$ref": "#/components/schemas/timeline-assigned-issue-event" },
          { "$ref": "#/components/schemas/timeline-unassigned-issue-event" },
          { "$ref": "#/components/schemas/state-change-issue-event" }
        ]
      },
      "deploy-key": {
        "title": "Deploy Key",
        "description": "An SSH key granting access to a single repository.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "key": { "type": "string" },
          "url": { "type": "string" },
          "title": { "type": "string" },
          "verified": { "type": "boolean" },
          "created_at": { "type": "string" },
          "read_only": { "type": "boolean" }
        },
        "required": [
          "id",
          "key",
          "url",
          "title",
          "verified",
          "created_at",
          "read_only"
        ]
      },
      "language": {
        "title": "Language",
        "description": "Language",
        "type": "object",
        "additionalProperties": { "type": "integer" }
      },
      "license-content": {
        "title": "License Content",
        "description": "License Content",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "path": { "type": "string" },
          "sha": { "type": "string" },
          "size": { "type": "integer" },
          "url": { "type": "string", "format": "uri" },
          "html_url": { "type": ["string", "null"], "format": "uri" },
          "git_url": { "type": ["string", "null"], "format": "uri" },
          "download_url": { "type": ["string", "null"], "format": "uri" },
          "type": { "type": "string" },
          "content": { "type": "string" },
          "encoding": { "type": "string" },
          "_links": {
            "type": "object",
            "properties": {
              "git": { "type": ["string", "null"], "format": "uri" },
              "html": { "type": ["string", "null"], "format": "uri" },
              "self": { "type": "string", "format": "uri" }
            },
            "required": ["git", "html", "self"]
          },
          "license": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/license-simple" }
            ]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding",
          "license"
        ]
      },
      "merged-upstream": {
        "title": "Merged upstream",
        "description": "Results of a successful merge upstream request",
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "merge_type": {
            "type": "string",
            "enum": ["merge", "fast-forward", "none"]
          },
          "base_branch": { "type": "string" }
        }
      },
      "pages-source-hash": {
        "title": "Pages Source Hash",
        "type": "object",
        "properties": {
          "branch": { "type": "string" },
          "path": { "type": "string" }
        },
        "required": ["branch", "path"]
      },
      "pages-https-certificate": {
        "title": "Pages Https Certificate",
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "new",
              "authorization_created",
              "authorization_pending",
              "authorized",
              "authorization_revoked",
              "issued",
              "uploaded",
              "approved",
              "errored",
              "bad_authz",
              "destroy_pending",
              "dns_changed"
            ],
            "examples": ["approved"]
          },
          "description": {
            "type": "string",
            "examples": ["Certificate is approved"]
          },
          "domains": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Array of the domain set and its alternate name (if it is configured)",
            "examples": ["example.com", "www.example.com"]
          },
          "expires_at": { "type": "string", "format": "date" }
        },
        "required": ["state", "description", "domains"]
      },
      "page": {
        "title": "GitHub Pages",
        "description": "The configuration for GitHub Pages for a repository.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The API address for accessing this Page resource.",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/github/hello-world/pages"
            ]
          },
          "status": {
            "type": ["string", "null"],
            "description": "The status of the most recent build of the Page.",
            "enum": ["built", "building", "errored", null],
            "examples": ["built"]
          },
          "cname": {
            "description": "The Pages site's custom domain",
            "type": ["string", "null"],
            "examples": ["example.com"]
          },
          "protected_domain_state": {
            "type": ["string", "null"],
            "description": "The state if the domain is verified",
            "enum": ["pending", "verified", "unverified", null],
            "examples": ["pending"]
          },
          "pending_domain_unverified_at": {
            "type": ["string", "null"],
            "description": "The timestamp when a pending domain becomes unverified.",
            "format": "date-time"
          },
          "custom_404": {
            "type": "boolean",
            "description": "Whether the Page has a custom 404 page.",
            "default": false,
            "examples": [false]
          },
          "html_url": {
            "type": "string",
            "description": "The web address the Page can be accessed from.",
            "format": "uri",
            "examples": ["https://example.com"]
          },
          "build_type": {
            "type": ["string", "null"],
            "description": "The process in which the Page will be built.",
            "enum": ["legacy", "workflow", null],
            "examples": ["legacy"]
          },
          "source": { "$ref": "#/components/schemas/pages-source-hash" },
          "public": {
            "type": "boolean",
            "description": "Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.",
            "examples": [true]
          },
          "https_certificate": {
            "$ref": "#/components/schemas/pages-https-certificate"
          },
          "https_enforced": {
            "type": "boolean",
            "description": "Whether https is enabled on the domain",
            "examples": [true]
          }
        },
        "required": ["url", "status", "cname", "custom_404", "public"]
      },
      "page-build": {
        "title": "Page Build",
        "description": "Page Build",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "status": { "type": "string" },
          "error": {
            "type": "object",
            "properties": { "message": { "type": ["string", "null"] } },
            "required": ["message"]
          },
          "pusher": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "commit": { "type": "string" },
          "duration": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "url",
          "status",
          "error",
          "pusher",
          "commit",
          "duration",
          "created_at",
          "updated_at"
        ]
      },
      "page-build-status": {
        "title": "Page Build Status",
        "description": "Page Build Status",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/github/hello-world/pages/builds/latest"
            ]
          },
          "status": { "type": "string", "examples": ["queued"] }
        },
        "required": ["url", "status"]
      },
      "repository-pre-receive-hook": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "enforcement": { "type": "string" },
          "configuration_url": { "type": "string" }
        }
      },
      "pull-request": {
        "type": "object",
        "title": "Pull Request",
        "description": "Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is sent, interested parties can review the set of changes, discuss potential modifications, and even push follow-up commits if necessary.",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
            ]
          },
          "id": { "type": "integer", "examples": [1] },
          "node_id": {
            "type": "string",
            "examples": ["MDExOlB1bGxSZXF1ZXN0MQ=="]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World/pull/1347"]
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1347.diff"
            ]
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1347.patch"
            ]
          },
          "issue_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/1347"
            ]
          },
          "commits_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
            ]
          },
          "review_comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
            ]
          },
          "review_comment_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
            ]
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
            ]
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
            ]
          },
          "number": {
            "description": "Number uniquely identifying the pull request within its repository.",
            "type": "integer",
            "examples": [42]
          },
          "state": {
            "description": "State of this Pull Request. Either `open` or `closed`.",
            "enum": ["open", "closed"],
            "type": "string",
            "examples": ["open"]
          },
          "locked": { "type": "boolean", "examples": [true] },
          "title": {
            "description": "The title of the pull request.",
            "type": "string",
            "examples": ["Amazing new feature"]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": {
            "type": ["string", "null"],
            "examples": ["Please pull these awesome changes"]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "format": "int64" },
                "node_id": { "type": "string" },
                "url": { "type": "string" },
                "name": { "type": "string" },
                "description": { "type": ["string", "null"] },
                "color": { "type": "string" },
                "default": { "type": "boolean" }
              },
              "required": [
                "id",
                "node_id",
                "url",
                "name",
                "description",
                "color",
                "default"
              ]
            }
          },
          "milestone": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/milestone" }
            ]
          },
          "active_lock_reason": {
            "type": ["string", "null"],
            "examples": ["too heated"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "closed_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "merged_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "examples": ["2011-01-26T19:01:12Z"]
          },
          "merge_commit_sha": {
            "type": ["string", "null"],
            "examples": ["e5bd3914e2e596debea16f433f57875b5b90bcd6"]
          },
          "assignee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "assignees": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "requested_reviewers": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "requested_teams": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/team-simple" }
          },
          "head": {
            "type": "object",
            "properties": {
              "label": { "type": "string" },
              "ref": { "type": "string" },
              "repo": {
                "type": ["object", "null"],
                "properties": {
                  "archive_url": { "type": "string" },
                  "assignees_url": { "type": "string" },
                  "blobs_url": { "type": "string" },
                  "branches_url": { "type": "string" },
                  "collaborators_url": { "type": "string" },
                  "comments_url": { "type": "string" },
                  "commits_url": { "type": "string" },
                  "compare_url": { "type": "string" },
                  "contents_url": { "type": "string" },
                  "contributors_url": { "type": "string", "format": "uri" },
                  "deployments_url": { "type": "string", "format": "uri" },
                  "description": { "type": ["string", "null"] },
                  "downloads_url": { "type": "string", "format": "uri" },
                  "events_url": { "type": "string", "format": "uri" },
                  "fork": { "type": "boolean" },
                  "forks_url": { "type": "string", "format": "uri" },
                  "full_name": { "type": "string" },
                  "git_commits_url": { "type": "string" },
                  "git_refs_url": { "type": "string" },
                  "git_tags_url": { "type": "string" },
                  "hooks_url": { "type": "string", "format": "uri" },
                  "html_url": { "type": "string", "format": "uri" },
                  "id": { "type": "integer" },
                  "node_id": { "type": "string" },
                  "issue_comment_url": { "type": "string" },
                  "issue_events_url": { "type": "string" },
                  "issues_url": { "type": "string" },
                  "keys_url": { "type": "string" },
                  "labels_url": { "type": "string" },
                  "languages_url": { "type": "string", "format": "uri" },
                  "merges_url": { "type": "string", "format": "uri" },
                  "milestones_url": { "type": "string" },
                  "name": { "type": "string" },
                  "notifications_url": { "type": "string" },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "avatar_url": { "type": "string", "format": "uri" },
                      "events_url": { "type": "string" },
                      "followers_url": { "type": "string", "format": "uri" },
                      "following_url": { "type": "string" },
                      "gists_url": { "type": "string" },
                      "gravatar_id": { "type": ["string", "null"] },
                      "html_url": { "type": "string", "format": "uri" },
                      "id": { "type": "integer" },
                      "node_id": { "type": "string" },
                      "login": { "type": "string" },
                      "organizations_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "received_events_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "repos_url": { "type": "string", "format": "uri" },
                      "site_admin": { "type": "boolean" },
                      "starred_url": { "type": "string" },
                      "subscriptions_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "type": { "type": "string" },
                      "url": { "type": "string", "format": "uri" }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url"
                    ]
                  },
                  "private": { "type": "boolean" },
                  "pulls_url": { "type": "string" },
                  "releases_url": { "type": "string" },
                  "stargazers_url": { "type": "string", "format": "uri" },
                  "statuses_url": { "type": "string" },
                  "subscribers_url": { "type": "string", "format": "uri" },
                  "subscription_url": { "type": "string", "format": "uri" },
                  "tags_url": { "type": "string", "format": "uri" },
                  "teams_url": { "type": "string", "format": "uri" },
                  "trees_url": { "type": "string" },
                  "url": { "type": "string", "format": "uri" },
                  "clone_url": { "type": "string" },
                  "default_branch": { "type": "string" },
                  "forks": { "type": "integer" },
                  "forks_count": { "type": "integer" },
                  "git_url": { "type": "string" },
                  "has_downloads": { "type": "boolean" },
                  "has_issues": { "type": "boolean" },
                  "has_projects": { "type": "boolean" },
                  "has_wiki": { "type": "boolean" },
                  "has_pages": { "type": "boolean" },
                  "has_discussions": { "type": "boolean" },
                  "homepage": { "type": ["string", "null"], "format": "uri" },
                  "language": { "type": ["string", "null"] },
                  "master_branch": { "type": "string" },
                  "archived": { "type": "boolean" },
                  "disabled": { "type": "boolean" },
                  "visibility": {
                    "description": "The repository visibility: public, private, or internal.",
                    "type": "string"
                  },
                  "mirror_url": { "type": ["string", "null"], "format": "uri" },
                  "open_issues": { "type": "integer" },
                  "open_issues_count": { "type": "integer" },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "admin": { "type": "boolean" },
                      "maintain": { "type": "boolean" },
                      "push": { "type": "boolean" },
                      "triage": { "type": "boolean" },
                      "pull": { "type": "boolean" }
                    },
                    "required": ["admin", "pull", "push"]
                  },
                  "temp_clone_token": { "type": "string" },
                  "allow_merge_commit": { "type": "boolean" },
                  "allow_squash_merge": { "type": "boolean" },
                  "allow_rebase_merge": { "type": "boolean" },
                  "license": {
                    "type": ["object", "null"],
                    "properties": {
                      "key": { "type": "string" },
                      "name": { "type": "string" },
                      "url": { "type": ["string", "null"], "format": "uri" },
                      "spdx_id": { "type": ["string", "null"] },
                      "node_id": { "type": "string" }
                    },
                    "required": ["key", "name", "url", "spdx_id", "node_id"]
                  },
                  "pushed_at": { "type": "string", "format": "date-time" },
                  "size": { "type": "integer" },
                  "ssh_url": { "type": "string" },
                  "stargazers_count": { "type": "integer" },
                  "svn_url": { "type": "string", "format": "uri" },
                  "topics": { "type": "array", "items": { "type": "string" } },
                  "watchers": { "type": "integer" },
                  "watchers_count": { "type": "integer" },
                  "created_at": { "type": "string", "format": "date-time" },
                  "updated_at": { "type": "string", "format": "date-time" },
                  "allow_forking": { "type": "boolean" },
                  "is_template": { "type": "boolean" }
                },
                "required": [
                  "archive_url",
                  "assignees_url",
                  "blobs_url",
                  "branches_url",
                  "collaborators_url",
                  "comments_url",
                  "commits_url",
                  "compare_url",
                  "contents_url",
                  "contributors_url",
                  "deployments_url",
                  "description",
                  "downloads_url",
                  "events_url",
                  "fork",
                  "forks_url",
                  "full_name",
                  "git_commits_url",
                  "git_refs_url",
                  "git_tags_url",
                  "hooks_url",
                  "html_url",
                  "id",
                  "node_id",
                  "issue_comment_url",
                  "issue_events_url",
                  "issues_url",
                  "keys_url",
                  "labels_url",
                  "languages_url",
                  "merges_url",
                  "milestones_url",
                  "name",
                  "notifications_url",
                  "owner",
                  "private",
                  "pulls_url",
                  "releases_url",
                  "stargazers_url",
                  "statuses_url",
                  "subscribers_url",
                  "subscription_url",
                  "tags_url",
                  "teams_url",
                  "trees_url",
                  "url",
                  "clone_url",
                  "default_branch",
                  "forks",
                  "forks_count",
                  "git_url",
                  "has_downloads",
                  "has_issues",
                  "has_projects",
                  "has_wiki",
                  "has_pages",
                  "has_discussions",
                  "homepage",
                  "language",
                  "archived",
                  "disabled",
                  "mirror_url",
                  "open_issues",
                  "open_issues_count",
                  "license",
                  "pushed_at",
                  "size",
                  "ssh_url",
                  "stargazers_count",
                  "svn_url",
                  "watchers",
                  "watchers_count",
                  "created_at",
                  "updated_at"
                ]
              },
              "sha": { "type": "string" },
              "user": {
                "type": "object",
                "properties": {
                  "avatar_url": { "type": "string", "format": "uri" },
                  "events_url": { "type": "string" },
                  "followers_url": { "type": "string", "format": "uri" },
                  "following_url": { "type": "string" },
                  "gists_url": { "type": "string" },
                  "gravatar_id": { "type": ["string", "null"] },
                  "html_url": { "type": "string", "format": "uri" },
                  "id": { "type": "integer" },
                  "node_id": { "type": "string" },
                  "login": { "type": "string" },
                  "organizations_url": { "type": "string", "format": "uri" },
                  "received_events_url": { "type": "string", "format": "uri" },
                  "repos_url": { "type": "string", "format": "uri" },
                  "site_admin": { "type": "boolean" },
                  "starred_url": { "type": "string" },
                  "subscriptions_url": { "type": "string", "format": "uri" },
                  "type": { "type": "string" },
                  "url": { "type": "string", "format": "uri" }
                },
                "required": [
                  "avatar_url",
                  "events_url",
                  "followers_url",
                  "following_url",
                  "gists_url",
                  "gravatar_id",
                  "html_url",
                  "id",
                  "node_id",
                  "login",
                  "organizations_url",
                  "received_events_url",
                  "repos_url",
                  "site_admin",
                  "starred_url",
                  "subscriptions_url",
                  "type",
                  "url"
                ]
              }
            },
            "required": ["label", "ref", "repo", "sha", "user"]
          },
          "base": {
            "type": "object",
            "properties": {
              "label": { "type": "string" },
              "ref": { "type": "string" },
              "repo": {
                "type": "object",
                "properties": {
                  "archive_url": { "type": "string" },
                  "assignees_url": { "type": "string" },
                  "blobs_url": { "type": "string" },
                  "branches_url": { "type": "string" },
                  "collaborators_url": { "type": "string" },
                  "comments_url": { "type": "string" },
                  "commits_url": { "type": "string" },
                  "compare_url": { "type": "string" },
                  "contents_url": { "type": "string" },
                  "contributors_url": { "type": "string", "format": "uri" },
                  "deployments_url": { "type": "string", "format": "uri" },
                  "description": { "type": ["string", "null"] },
                  "downloads_url": { "type": "string", "format": "uri" },
                  "events_url": { "type": "string", "format": "uri" },
                  "fork": { "type": "boolean" },
                  "forks_url": { "type": "string", "format": "uri" },
                  "full_name": { "type": "string" },
                  "git_commits_url": { "type": "string" },
                  "git_refs_url": { "type": "string" },
                  "git_tags_url": { "type": "string" },
                  "hooks_url": { "type": "string", "format": "uri" },
                  "html_url": { "type": "string", "format": "uri" },
                  "id": { "type": "integer" },
                  "is_template": { "type": "boolean" },
                  "node_id": { "type": "string" },
                  "issue_comment_url": { "type": "string" },
                  "issue_events_url": { "type": "string" },
                  "issues_url": { "type": "string" },
                  "keys_url": { "type": "string" },
                  "labels_url": { "type": "string" },
                  "languages_url": { "type": "string", "format": "uri" },
                  "merges_url": { "type": "string", "format": "uri" },
                  "milestones_url": { "type": "string" },
                  "name": { "type": "string" },
                  "notifications_url": { "type": "string" },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "avatar_url": { "type": "string", "format": "uri" },
                      "events_url": { "type": "string" },
                      "followers_url": { "type": "string", "format": "uri" },
                      "following_url": { "type": "string" },
                      "gists_url": { "type": "string" },
                      "gravatar_id": { "type": ["string", "null"] },
                      "html_url": { "type": "string", "format": "uri" },
                      "id": { "type": "integer" },
                      "node_id": { "type": "string" },
                      "login": { "type": "string" },
                      "organizations_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "received_events_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "repos_url": { "type": "string", "format": "uri" },
                      "site_admin": { "type": "boolean" },
                      "starred_url": { "type": "string" },
                      "subscriptions_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "type": { "type": "string" },
                      "url": { "type": "string", "format": "uri" }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url"
                    ]
                  },
                  "private": { "type": "boolean" },
                  "pulls_url": { "type": "string" },
                  "releases_url": { "type": "string" },
                  "stargazers_url": { "type": "string", "format": "uri" },
                  "statuses_url": { "type": "string" },
                  "subscribers_url": { "type": "string", "format": "uri" },
                  "subscription_url": { "type": "string", "format": "uri" },
                  "tags_url": { "type": "string", "format": "uri" },
                  "teams_url": { "type": "string", "format": "uri" },
                  "trees_url": { "type": "string" },
                  "url": { "type": "string", "format": "uri" },
                  "clone_url": { "type": "string" },
                  "default_branch": { "type": "string" },
                  "forks": { "type": "integer" },
                  "forks_count": { "type": "integer" },
                  "git_url": { "type": "string" },
                  "has_downloads": { "type": "boolean" },
                  "has_issues": { "type": "boolean" },
                  "has_projects": { "type": "boolean" },
                  "has_wiki": { "type": "boolean" },
                  "has_pages": { "type": "boolean" },
                  "has_discussions": { "type": "boolean" },
                  "homepage": { "type": ["string", "null"], "format": "uri" },
                  "language": { "type": ["string", "null"] },
                  "master_branch": { "type": "string" },
                  "archived": { "type": "boolean" },
                  "disabled": { "type": "boolean" },
                  "visibility": {
                    "description": "The repository visibility: public, private, or internal.",
                    "type": "string"
                  },
                  "mirror_url": { "type": ["string", "null"], "format": "uri" },
                  "open_issues": { "type": "integer" },
                  "open_issues_count": { "type": "integer" },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "admin": { "type": "boolean" },
                      "maintain": { "type": "boolean" },
                      "push": { "type": "boolean" },
                      "triage": { "type": "boolean" },
                      "pull": { "type": "boolean" }
                    },
                    "required": ["admin", "pull", "push"]
                  },
                  "temp_clone_token": { "type": "string" },
                  "allow_merge_commit": { "type": "boolean" },
                  "allow_squash_merge": { "type": "boolean" },
                  "allow_rebase_merge": { "type": "boolean" },
                  "license": {
                    "anyOf": [
                      { "type": "null" },
                      { "$ref": "#/components/schemas/license-simple" }
                    ]
                  },
                  "pushed_at": { "type": "string", "format": "date-time" },
                  "size": { "type": "integer" },
                  "ssh_url": { "type": "string" },
                  "stargazers_count": { "type": "integer" },
                  "svn_url": { "type": "string", "format": "uri" },
                  "topics": { "type": "array", "items": { "type": "string" } },
                  "watchers": { "type": "integer" },
                  "watchers_count": { "type": "integer" },
                  "created_at": { "type": "string", "format": "date-time" },
                  "updated_at": { "type": "string", "format": "date-time" },
                  "allow_forking": { "type": "boolean" }
                },
                "required": [
                  "archive_url",
                  "assignees_url",
                  "blobs_url",
                  "branches_url",
                  "collaborators_url",
                  "comments_url",
                  "commits_url",
                  "compare_url",
                  "contents_url",
                  "contributors_url",
                  "deployments_url",
                  "description",
                  "downloads_url",
                  "events_url",
                  "fork",
                  "forks_url",
                  "full_name",
                  "git_commits_url",
                  "git_refs_url",
                  "git_tags_url",
                  "hooks_url",
                  "html_url",
                  "id",
                  "node_id",
                  "issue_comment_url",
                  "issue_events_url",
                  "issues_url",
                  "keys_url",
                  "labels_url",
                  "languages_url",
                  "merges_url",
                  "milestones_url",
                  "name",
                  "notifications_url",
                  "owner",
                  "private",
                  "pulls_url",
                  "releases_url",
                  "stargazers_url",
                  "statuses_url",
                  "subscribers_url",
                  "subscription_url",
                  "tags_url",
                  "teams_url",
                  "trees_url",
                  "url",
                  "clone_url",
                  "default_branch",
                  "forks",
                  "forks_count",
                  "git_url",
                  "has_downloads",
                  "has_issues",
                  "has_projects",
                  "has_wiki",
                  "has_pages",
                  "has_discussions",
                  "homepage",
                  "language",
                  "archived",
                  "disabled",
                  "mirror_url",
                  "open_issues",
                  "open_issues_count",
                  "license",
                  "pushed_at",
                  "size",
                  "ssh_url",
                  "stargazers_count",
                  "svn_url",
                  "watchers",
                  "watchers_count",
                  "created_at",
                  "updated_at"
                ]
              },
              "sha": { "type": "string" },
              "user": {
                "type": "object",
                "properties": {
                  "avatar_url": { "type": "string", "format": "uri" },
                  "events_url": { "type": "string" },
                  "followers_url": { "type": "string", "format": "uri" },
                  "following_url": { "type": "string" },
                  "gists_url": { "type": "string" },
                  "gravatar_id": { "type": ["string", "null"] },
                  "html_url": { "type": "string", "format": "uri" },
                  "id": { "type": "integer" },
                  "node_id": { "type": "string" },
                  "login": { "type": "string" },
                  "organizations_url": { "type": "string", "format": "uri" },
                  "received_events_url": { "type": "string", "format": "uri" },
                  "repos_url": { "type": "string", "format": "uri" },
                  "site_admin": { "type": "boolean" },
                  "starred_url": { "type": "string" },
                  "subscriptions_url": { "type": "string", "format": "uri" },
                  "type": { "type": "string" },
                  "url": { "type": "string", "format": "uri" }
                },
                "required": [
                  "avatar_url",
                  "events_url",
                  "followers_url",
                  "following_url",
                  "gists_url",
                  "gravatar_id",
                  "html_url",
                  "id",
                  "node_id",
                  "login",
                  "organizations_url",
                  "received_events_url",
                  "repos_url",
                  "site_admin",
                  "starred_url",
                  "subscriptions_url",
                  "type",
                  "url"
                ]
              }
            },
            "required": ["label", "ref", "repo", "sha", "user"]
          },
          "_links": {
            "type": "object",
            "properties": {
              "comments": { "$ref": "#/components/schemas/link" },
              "commits": { "$ref": "#/components/schemas/link" },
              "statuses": { "$ref": "#/components/schemas/link" },
              "html": { "$ref": "#/components/schemas/link" },
              "issue": { "$ref": "#/components/schemas/link" },
              "review_comments": { "$ref": "#/components/schemas/link" },
              "review_comment": { "$ref": "#/components/schemas/link" },
              "self": { "$ref": "#/components/schemas/link" }
            },
            "required": [
              "comments",
              "commits",
              "statuses",
              "html",
              "issue",
              "review_comments",
              "review_comment",
              "self"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "auto_merge": { "$ref": "#/components/schemas/auto-merge" },
          "draft": {
            "description": "Indicates whether or not the pull request is a draft.",
            "type": "boolean",
            "examples": [false]
          },
          "merged": { "type": "boolean" },
          "mergeable": { "type": ["boolean", "null"], "examples": [true] },
          "rebaseable": { "type": ["boolean", "null"], "examples": [true] },
          "mergeable_state": { "type": "string", "examples": ["clean"] },
          "merged_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "comments": { "type": "integer", "examples": [10] },
          "review_comments": { "type": "integer", "examples": [0] },
          "maintainer_can_modify": {
            "description": "Indicates whether maintainers can modify the pull request.",
            "type": "boolean",
            "examples": [true]
          },
          "commits": { "type": "integer", "examples": [3] },
          "additions": { "type": "integer", "examples": [100] },
          "deletions": { "type": "integer", "examples": [3] },
          "changed_files": { "type": "integer", "examples": [5] }
        },
        "required": [
          "_links",
          "assignee",
          "labels",
          "base",
          "body",
          "closed_at",
          "comments_url",
          "commits_url",
          "created_at",
          "diff_url",
          "head",
          "html_url",
          "id",
          "node_id",
          "issue_url",
          "merge_commit_sha",
          "merged_at",
          "milestone",
          "number",
          "patch_url",
          "review_comment_url",
          "review_comments_url",
          "statuses_url",
          "state",
          "locked",
          "title",
          "updated_at",
          "url",
          "user",
          "author_association",
          "auto_merge",
          "additions",
          "changed_files",
          "comments",
          "commits",
          "deletions",
          "mergeable",
          "mergeable_state",
          "merged",
          "maintainer_can_modify",
          "merged_by",
          "review_comments"
        ]
      },
      "pull-request-merge-result": {
        "title": "Pull Request Merge Result",
        "description": "Pull Request Merge Result",
        "type": "object",
        "properties": {
          "sha": { "type": "string" },
          "merged": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "required": ["merged", "message", "sha"]
      },
      "pull-request-review-request": {
        "title": "Pull Request Review Request",
        "description": "Pull Request Review Request",
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/team" }
          }
        },
        "required": ["users", "teams"]
      },
      "pull-request-review": {
        "title": "Pull Request Review",
        "description": "Pull Request Reviews are reviews on pull requests.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the review",
            "type": "integer",
            "examples": [42]
          },
          "node_id": {
            "type": "string",
            "examples": ["MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA="]
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": {
            "description": "The text of the review.",
            "type": "string",
            "examples": ["This looks great."]
          },
          "state": { "type": "string", "examples": ["CHANGES_REQUESTED"] },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
            ]
          },
          "pull_request_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/12"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "html": {
                "type": "object",
                "properties": { "href": { "type": "string" } },
                "required": ["href"]
              },
              "pull_request": {
                "type": "object",
                "properties": { "href": { "type": "string" } },
                "required": ["href"]
              }
            },
            "required": ["html", "pull_request"]
          },
          "submitted_at": { "type": "string", "format": "date-time" },
          "commit_id": {
            "description": "A commit SHA for the review. If the commit object was garbage collected or forcibly deleted, then it no longer exists in Git and this value will be `null`.",
            "type": ["string", "null"],
            "examples": ["54bb654c9e6025347f57900a4a5c2313a96b8035"]
          },
          "body_html": { "type": "string" },
          "body_text": { "type": "string" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          }
        },
        "required": [
          "id",
          "node_id",
          "user",
          "body",
          "state",
          "commit_id",
          "html_url",
          "pull_request_url",
          "_links",
          "author_association"
        ]
      },
      "review-comment": {
        "title": "Legacy Review Comment",
        "description": "Legacy Review Comment",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
            ]
          },
          "pull_request_review_id": {
            "type": ["integer", "null"],
            "examples": [42]
          },
          "id": { "type": "integer", "examples": [10] },
          "node_id": {
            "type": "string",
            "examples": ["MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw"]
          },
          "diff_hunk": {
            "type": "string",
            "examples": [
              "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
            ]
          },
          "path": { "type": "string", "examples": ["file1.txt"] },
          "position": { "type": ["integer", "null"], "examples": [1] },
          "original_position": { "type": "integer", "examples": [4] },
          "commit_id": {
            "type": "string",
            "examples": ["6dcb09b5b57875f334f61aebed695e2e4193db5e"]
          },
          "original_commit_id": {
            "type": "string",
            "examples": ["9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840"]
          },
          "in_reply_to_id": { "type": "integer", "examples": [8] },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "body": { "type": "string", "examples": ["Great stuff"] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2011-04-14T16:00:49Z"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
            ]
          },
          "pull_request_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World/pulls/1"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": { "$ref": "#/components/schemas/link" },
              "html": { "$ref": "#/components/schemas/link" },
              "pull_request": { "$ref": "#/components/schemas/link" }
            },
            "required": ["self", "html", "pull_request"]
          },
          "body_text": { "type": "string" },
          "body_html": { "type": "string" },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" },
          "side": {
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": ["LEFT", "RIGHT"],
            "default": "RIGHT",
            "type": "string"
          },
          "start_side": {
            "type": ["string", "null"],
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": ["LEFT", "RIGHT", null],
            "default": "RIGHT"
          },
          "line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "type": "integer",
            "examples": [2]
          },
          "original_line": {
            "description": "The original line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "type": "integer",
            "examples": [2]
          },
          "start_line": {
            "description": "The first line of the range for a multi-line comment.",
            "type": ["integer", "null"],
            "examples": [2]
          },
          "original_start_line": {
            "description": "The original first line of the range for a multi-line comment.",
            "type": ["integer", "null"],
            "examples": [2]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "body",
          "diff_hunk",
          "path",
          "position",
          "original_position",
          "commit_id",
          "original_commit_id",
          "user",
          "pull_request_review_id",
          "html_url",
          "pull_request_url",
          "_links",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "release-asset": {
        "title": "Release Asset",
        "description": "Data related to a release.",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "browser_download_url": { "type": "string", "format": "uri" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "name": {
            "description": "The file name of the asset.",
            "type": "string",
            "examples": ["Team Environment"]
          },
          "label": { "type": ["string", "null"] },
          "state": {
            "description": "State of the release asset.",
            "type": "string",
            "enum": ["uploaded", "open"]
          },
          "content_type": { "type": "string" },
          "size": { "type": "integer" },
          "download_count": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "uploader": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "content_type",
          "size",
          "state",
          "url",
          "node_id",
          "download_count",
          "label",
          "uploader",
          "browser_download_url",
          "created_at",
          "updated_at"
        ]
      },
      "release": {
        "title": "Release",
        "description": "A release.",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "assets_url": { "type": "string", "format": "uri" },
          "upload_url": { "type": "string" },
          "tarball_url": { "type": ["string", "null"], "format": "uri" },
          "zipball_url": { "type": ["string", "null"], "format": "uri" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "tag_name": {
            "description": "The name of the tag.",
            "type": "string",
            "examples": ["v1.0.0"]
          },
          "target_commitish": {
            "description": "Specifies the commitish value that determines where the Git tag is created from.",
            "type": "string",
            "examples": ["master"]
          },
          "name": { "type": ["string", "null"] },
          "body": { "type": ["string", "null"] },
          "draft": {
            "description": "true to create a draft (unpublished) release, false to create a published one.",
            "type": "boolean",
            "examples": [false]
          },
          "prerelease": {
            "description": "Whether to identify the release as a prerelease or a full release.",
            "type": "boolean",
            "examples": [false]
          },
          "created_at": { "type": "string", "format": "date-time" },
          "published_at": { "type": ["string", "null"], "format": "date-time" },
          "author": { "$ref": "#/components/schemas/simple-user" },
          "assets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/release-asset" }
          },
          "body_html": { "type": "string" },
          "body_text": { "type": "string" },
          "mentions_count": { "type": "integer" },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "assets_url",
          "upload_url",
          "tarball_url",
          "zipball_url",
          "created_at",
          "published_at",
          "draft",
          "id",
          "node_id",
          "author",
          "html_url",
          "name",
          "prerelease",
          "tag_name",
          "target_commitish",
          "assets",
          "url"
        ]
      },
      "release-notes-content": {
        "title": "Generated Release Notes Content",
        "description": "Generated name and body describing a release",
        "type": "object",
        "properties": {
          "name": {
            "description": "The generated name of the release",
            "type": "string",
            "examples": ["Release v1.0.0 is now available!"]
          },
          "body": {
            "description": "The generated body describing the contents of the release supporting markdown formatting",
            "type": "string"
          }
        },
        "required": ["name", "body"]
      },
      "secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "updated_at": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/alert-updated-at" }
            ]
          },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "locations_url": {
            "type": "string",
            "format": "uri",
            "description": "The REST API URL of the code locations for this alert."
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
          },
          "resolved_by": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          }
        }
      },
      "secret-scanning-location-commit": {
        "description": "Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The file path in the repository",
            "examples": ["/example/secrets.txt"]
          },
          "start_line": {
            "type": "number",
            "description": "Line number at which the secret starts in the file"
          },
          "end_line": {
            "type": "number",
            "description": "Line number at which the secret ends in the file"
          },
          "start_column": {
            "type": "number",
            "description": "The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII"
          },
          "end_column": {
            "type": "number",
            "description": "The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII"
          },
          "blob_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated blob",
            "examples": ["af5626b4a114abcb82d63db7c8082c3c4756e51b"]
          },
          "blob_url": {
            "type": "string",
            "description": "The API URL to get the associated blob resource"
          },
          "commit_sha": {
            "type": "string",
            "description": "SHA-1 hash ID of the associated commit",
            "examples": ["af5626b4a114abcb82d63db7c8082c3c4756e51b"]
          },
          "commit_url": {
            "type": "string",
            "description": "The API URL to get the associated commit resource"
          }
        },
        "required": [
          "path",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "blob_sha",
          "blob_url",
          "commit_sha",
          "commit_url"
        ]
      },
      "secret-scanning-location": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["commit"],
            "description": "The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.",
            "examples": ["commit"]
          },
          "details": {
            "oneOf": [
              { "$ref": "#/components/schemas/secret-scanning-location-commit" }
            ]
          }
        },
        "required": ["type", "details"]
      },
      "stargazer": {
        "title": "Stargazer",
        "description": "Stargazer",
        "type": "object",
        "properties": {
          "starred_at": { "type": "string", "format": "date-time" },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          }
        },
        "required": ["starred_at", "user"]
      },
      "code-frequency-stat": {
        "title": "Code Frequency Stat",
        "description": "Code Frequency Stat",
        "type": "array",
        "items": { "type": "integer" }
      },
      "commit-activity": {
        "title": "Commit Activity",
        "description": "Commit Activity",
        "type": "object",
        "properties": {
          "days": {
            "type": "array",
            "items": { "type": "integer" },
            "examples": [0, 3, 26, 20, 39, 1, 0]
          },
          "total": { "type": "integer", "examples": [89] },
          "week": { "type": "integer", "examples": [1336280400] }
        },
        "required": ["days", "total", "week"]
      },
      "contributor-activity": {
        "title": "Contributor Activity",
        "description": "Contributor Activity",
        "type": "object",
        "properties": {
          "author": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "total": { "type": "integer", "examples": [135] },
          "weeks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "w": { "type": "integer" },
                "a": { "type": "integer" },
                "d": { "type": "integer" },
                "c": { "type": "integer" }
              }
            },
            "examples": [{ "w": "1367712000", "a": 6898, "d": 77, "c": 10 }]
          }
        },
        "required": ["author", "total", "weeks"]
      },
      "participation-stats": {
        "title": "Participation Stats",
        "type": "object",
        "properties": {
          "all": { "type": "array", "items": { "type": "integer" } },
          "owner": { "type": "array", "items": { "type": "integer" } }
        },
        "required": ["all", "owner"]
      },
      "repository-subscription": {
        "title": "Repository Invitation",
        "description": "Repository invitations let you manage who you collaborate with.",
        "type": "object",
        "properties": {
          "subscribed": {
            "description": "Determines if notifications should be received from this repository.",
            "type": "boolean",
            "examples": [true]
          },
          "ignored": {
            "description": "Determines if all notifications should be blocked from this repository.",
            "type": "boolean"
          },
          "reason": { "type": ["string", "null"] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2012-10-06T21:34:12Z"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/example/subscription"
            ]
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/repos/octocat/example"]
          }
        },
        "required": [
          "created_at",
          "ignored",
          "reason",
          "subscribed",
          "url",
          "repository_url"
        ]
      },
      "tag": {
        "title": "Tag",
        "description": "Tag",
        "type": "object",
        "properties": {
          "name": { "type": "string", "examples": ["v0.1"] },
          "commit": {
            "type": "object",
            "properties": {
              "sha": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["sha", "url"]
          },
          "zipball_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World/zipball/v0.1"]
          },
          "tarball_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat/Hello-World/tarball/v0.1"]
          },
          "node_id": { "type": "string" }
        },
        "required": ["name", "node_id", "commit", "zipball_url", "tarball_url"]
      },
      "topic": {
        "title": "Topic",
        "description": "A topic aggregates entities that are related to a subject.",
        "type": "object",
        "properties": {
          "names": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["names"]
      },
      "search-result-text-matches": {
        "title": "Search Result Text Matches",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "object_url": { "type": "string" },
            "object_type": { "type": ["string", "null"] },
            "property": { "type": "string" },
            "fragment": { "type": "string" },
            "matches": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": { "type": "string" },
                  "indices": { "type": "array", "items": { "type": "integer" } }
                }
              }
            }
          }
        }
      },
      "code-search-result-item": {
        "title": "Code Search Result Item",
        "description": "Code Search Result Item",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "path": { "type": "string" },
          "sha": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "git_url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "score": { "type": "number" },
          "file_size": { "type": "integer" },
          "language": { "type": ["string", "null"] },
          "last_modified_at": { "type": "string", "format": "date-time" },
          "line_numbers": {
            "type": "array",
            "items": { "type": "string" },
            "examples": ["73..77", "77..78"]
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "score",
          "name",
          "path",
          "sha",
          "git_url",
          "html_url",
          "url",
          "repository"
        ]
      },
      "commit-search-result-item": {
        "title": "Commit Search Result Item",
        "description": "Commit Search Result Item",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "sha": { "type": "string" },
          "html_url": { "type": "string", "format": "uri" },
          "comments_url": { "type": "string", "format": "uri" },
          "commit": {
            "type": "object",
            "properties": {
              "author": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "date": { "type": "string", "format": "date-time" }
                },
                "required": ["name", "email", "date"]
              },
              "committer": {
                "anyOf": [
                  { "type": "null" },
                  { "$ref": "#/components/schemas/git-user" }
                ]
              },
              "comment_count": { "type": "integer" },
              "message": { "type": "string" },
              "tree": {
                "type": "object",
                "properties": {
                  "sha": { "type": "string" },
                  "url": { "type": "string", "format": "uri" }
                },
                "required": ["sha", "url"]
              },
              "url": { "type": "string", "format": "uri" },
              "verification": { "$ref": "#/components/schemas/verification" }
            },
            "required": [
              "author",
              "committer",
              "comment_count",
              "message",
              "tree",
              "url"
            ]
          },
          "author": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "committer": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/git-user" }
            ]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "html_url": { "type": "string" },
                "sha": { "type": "string" }
              }
            }
          },
          "repository": { "$ref": "#/components/schemas/minimal-repository" },
          "score": { "type": "number" },
          "node_id": { "type": "string" },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "parents",
          "comments_url",
          "commit",
          "repository",
          "score"
        ]
      },
      "issue-search-result-item": {
        "title": "Issue Search Result Item",
        "description": "Issue Search Result Item",
        "type": "object",
        "properties": {
          "url": { "type": "string", "format": "uri" },
          "repository_url": { "type": "string", "format": "uri" },
          "labels_url": { "type": "string" },
          "comments_url": { "type": "string", "format": "uri" },
          "events_url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "number": { "type": "integer" },
          "title": { "type": "string" },
          "locked": { "type": "boolean" },
          "active_lock_reason": { "type": ["string", "null"] },
          "assignees": {
            "type": ["array", "null"],
            "items": { "$ref": "#/components/schemas/simple-user" }
          },
          "user": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "format": "int64" },
                "node_id": { "type": "string" },
                "url": { "type": "string" },
                "name": { "type": "string" },
                "color": { "type": "string" },
                "default": { "type": "boolean" },
                "description": { "type": ["string", "null"] }
              }
            }
          },
          "state": { "type": "string" },
          "state_reason": { "type": ["string", "null"] },
          "assignee": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "milestone": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/milestone" }
            ]
          },
          "comments": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "closed_at": { "type": ["string", "null"], "format": "date-time" },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": ["string", "null"],
                "format": "date-time"
              },
              "diff_url": { "type": ["string", "null"], "format": "uri" },
              "html_url": { "type": ["string", "null"], "format": "uri" },
              "patch_url": { "type": ["string", "null"], "format": "uri" },
              "url": { "type": ["string", "null"], "format": "uri" }
            },
            "required": ["diff_url", "html_url", "patch_url", "url"]
          },
          "body": { "type": "string" },
          "score": { "type": "number" },
          "author_association": {
            "$ref": "#/components/schemas/author-association"
          },
          "draft": { "type": "boolean" },
          "repository": { "$ref": "#/components/schemas/repository" },
          "body_html": { "type": "string" },
          "body_text": { "type": "string" },
          "timeline_url": { "type": "string", "format": "uri" },
          "performed_via_github_app": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/integration" }
            ]
          },
          "reactions": { "$ref": "#/components/schemas/reaction-rollup" }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at",
          "score"
        ]
      },
      "label-search-result-item": {
        "title": "Label Search Result Item",
        "description": "Label Search Result Item",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "url": { "type": "string", "format": "uri" },
          "name": { "type": "string" },
          "color": { "type": "string" },
          "default": { "type": "boolean" },
          "description": { "type": ["string", "null"] },
          "score": { "type": "number" },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "name",
          "color",
          "default",
          "description",
          "score"
        ]
      },
      "repo-search-result-item": {
        "title": "Repo Search Result Item",
        "description": "Repo Search Result Item",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "name": { "type": "string" },
          "full_name": { "type": "string" },
          "owner": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/simple-user" }
            ]
          },
          "private": { "type": "boolean" },
          "html_url": { "type": "string", "format": "uri" },
          "description": { "type": ["string", "null"] },
          "fork": { "type": "boolean" },
          "url": { "type": "string", "format": "uri" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "pushed_at": { "type": "string", "format": "date-time" },
          "homepage": { "type": ["string", "null"], "format": "uri" },
          "size": { "type": "integer" },
          "stargazers_count": { "type": "integer" },
          "watchers_count": { "type": "integer" },
          "language": { "type": ["string", "null"] },
          "forks_count": { "type": "integer" },
          "open_issues_count": { "type": "integer" },
          "master_branch": { "type": "string" },
          "default_branch": { "type": "string" },
          "score": { "type": "number" },
          "forks_url": { "type": "string", "format": "uri" },
          "keys_url": { "type": "string" },
          "collaborators_url": { "type": "string" },
          "teams_url": { "type": "string", "format": "uri" },
          "hooks_url": { "type": "string", "format": "uri" },
          "issue_events_url": { "type": "string" },
          "events_url": { "type": "string", "format": "uri" },
          "assignees_url": { "type": "string" },
          "branches_url": { "type": "string" },
          "tags_url": { "type": "string", "format": "uri" },
          "blobs_url": { "type": "string" },
          "git_tags_url": { "type": "string" },
          "git_refs_url": { "type": "string" },
          "trees_url": { "type": "string" },
          "statuses_url": { "type": "string" },
          "languages_url": { "type": "string", "format": "uri" },
          "stargazers_url": { "type": "string", "format": "uri" },
          "contributors_url": { "type": "string", "format": "uri" },
          "subscribers_url": { "type": "string", "format": "uri" },
          "subscription_url": { "type": "string", "format": "uri" },
          "commits_url": { "type": "string" },
          "git_commits_url": { "type": "string" },
          "comments_url": { "type": "string" },
          "issue_comment_url": { "type": "string" },
          "contents_url": { "type": "string" },
          "compare_url": { "type": "string" },
          "merges_url": { "type": "string", "format": "uri" },
          "archive_url": { "type": "string" },
          "downloads_url": { "type": "string", "format": "uri" },
          "issues_url": { "type": "string" },
          "pulls_url": { "type": "string" },
          "milestones_url": { "type": "string" },
          "notifications_url": { "type": "string" },
          "labels_url": { "type": "string" },
          "releases_url": { "type": "string" },
          "deployments_url": { "type": "string", "format": "uri" },
          "git_url": { "type": "string" },
          "ssh_url": { "type": "string" },
          "clone_url": { "type": "string" },
          "svn_url": { "type": "string", "format": "uri" },
          "forks": { "type": "integer" },
          "open_issues": { "type": "integer" },
          "watchers": { "type": "integer" },
          "topics": { "type": "array", "items": { "type": "string" } },
          "mirror_url": { "type": ["string", "null"], "format": "uri" },
          "has_issues": { "type": "boolean" },
          "has_projects": { "type": "boolean" },
          "has_pages": { "type": "boolean" },
          "has_wiki": { "type": "boolean" },
          "has_downloads": { "type": "boolean" },
          "archived": { "type": "boolean" },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "type": "string"
          },
          "license": {
            "anyOf": [
              { "type": "null" },
              { "$ref": "#/components/schemas/license-simple" }
            ]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": { "type": "boolean" },
              "maintain": { "type": "boolean" },
              "push": { "type": "boolean" },
              "triage": { "type": "boolean" },
              "pull": { "type": "boolean" }
            },
            "required": ["admin", "pull", "push"]
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "temp_clone_token": { "type": "string" },
          "allow_merge_commit": { "type": "boolean" },
          "allow_squash_merge": { "type": "boolean" },
          "allow_rebase_merge": { "type": "boolean" },
          "allow_auto_merge": { "type": "boolean" },
          "delete_branch_on_merge": { "type": "boolean" },
          "allow_forking": { "type": "boolean" },
          "is_template": { "type": "boolean" }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "score"
        ]
      },
      "topic-search-result-item": {
        "title": "Topic Search Result Item",
        "description": "Topic Search Result Item",
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "display_name": { "type": ["string", "null"] },
          "short_description": { "type": ["string", "null"] },
          "description": { "type": ["string", "null"] },
          "created_by": { "type": ["string", "null"] },
          "released": { "type": ["string", "null"] },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "featured": { "type": "boolean" },
          "curated": { "type": "boolean" },
          "score": { "type": "number" },
          "repository_count": { "type": ["integer", "null"] },
          "logo_url": { "type": ["string", "null"], "format": "uri" },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "related": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "topic_relation": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "topic_id": { "type": "integer" },
                    "relation_type": { "type": "string" }
                  }
                }
              }
            }
          },
          "aliases": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "topic_relation": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "topic_id": { "type": "integer" },
                    "relation_type": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "display_name",
          "short_description",
          "description",
          "created_by",
          "released",
          "created_at",
          "updated_at",
          "featured",
          "curated",
          "score"
        ]
      },
      "user-search-result-item": {
        "title": "User Search Result Item",
        "description": "User Search Result Item",
        "type": "object",
        "properties": {
          "login": { "type": "string" },
          "id": { "type": "integer" },
          "node_id": { "type": "string" },
          "avatar_url": { "type": "string", "format": "uri" },
          "gravatar_id": { "type": ["string", "null"] },
          "url": { "type": "string", "format": "uri" },
          "html_url": { "type": "string", "format": "uri" },
          "followers_url": { "type": "string", "format": "uri" },
          "subscriptions_url": { "type": "string", "format": "uri" },
          "organizations_url": { "type": "string", "format": "uri" },
          "repos_url": { "type": "string", "format": "uri" },
          "received_events_url": { "type": "string", "format": "uri" },
          "type": { "type": "string" },
          "score": { "type": "number" },
          "following_url": { "type": "string" },
          "gists_url": { "type": "string" },
          "starred_url": { "type": "string" },
          "events_url": { "type": "string" },
          "public_repos": { "type": "integer" },
          "public_gists": { "type": "integer" },
          "followers": { "type": "integer" },
          "following": { "type": "integer" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "name": { "type": ["string", "null"] },
          "bio": { "type": ["string", "null"] },
          "email": { "type": ["string", "null"], "format": "email" },
          "location": { "type": ["string", "null"] },
          "site_admin": { "type": "boolean" },
          "hireable": { "type": ["boolean", "null"] },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "blog": { "type": ["string", "null"] },
          "company": { "type": ["string", "null"] },
          "suspended_at": { "type": ["string", "null"], "format": "date-time" }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "score"
        ]
      },
      "configuration-status": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "progress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["status", "key"]
            }
          }
        }
      },
      "maintenance-status": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "scheduled_time": { "type": "string" },
          "connection_services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "number": { "type": "integer" }
              },
              "required": ["name", "number"]
            }
          }
        }
      },
      "enterprise-settings": {
        "type": "object",
        "properties": {
          "enterprise": {
            "type": "object",
            "properties": {
              "private_mode": { "type": "boolean" },
              "public_pages": { "type": "boolean" },
              "subdomain_isolation": { "type": "boolean" },
              "signup_enabled": { "type": "boolean" },
              "github_hostname": { "type": "string" },
              "identicons_host": { "type": "string" },
              "http_proxy": { "type": ["string", "null"] },
              "auth_mode": { "type": "string" },
              "expire_sessions": { "type": "boolean" },
              "admin_password": { "type": ["string", "null"] },
              "configuration_id": { "type": "integer" },
              "configuration_run_count": { "type": "integer" },
              "avatar": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "uri": { "type": "string" }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "uuid": { "type": "string" },
                  "secret_key_data": { "type": "string" },
                  "public_key_data": { "type": "string" }
                }
              },
              "license": {
                "type": "object",
                "properties": {
                  "seats": { "type": "integer" },
                  "evaluation": { "type": "boolean" },
                  "perpetual": { "type": "boolean" },
                  "unlimited_seating": { "type": "boolean" },
                  "support_key": { "type": "string" },
                  "ssh_allowed": { "type": "boolean" },
                  "cluster_support": { "type": "boolean" },
                  "expire_at": { "type": "string" }
                }
              },
              "github_ssl": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "cert": { "type": ["string", "null"] },
                  "key": { "type": ["string", "null"] }
                }
              },
              "ldap": {
                "type": "object",
                "properties": {
                  "host": { "type": ["string", "null"] },
                  "port": { "type": "integer" },
                  "base": { "type": "array", "items": {} },
                  "uid": { "type": ["string", "null"] },
                  "bind_dn": { "type": ["string", "null"] },
                  "password": { "type": ["string", "null"] },
                  "method": { "type": "string" },
                  "search_strategy": { "type": "string" },
                  "user_groups": { "type": "array", "items": {} },
                  "admin_group": { "type": ["string", "null"] },
                  "virtual_attribute_enabled": { "type": "boolean" },
                  "recursive_group_search": { "type": "boolean" },
                  "posix_support": { "type": "boolean" },
                  "user_sync_emails": { "type": "boolean" },
                  "user_sync_keys": { "type": "boolean" },
                  "user_sync_interval": { "type": "integer" },
                  "team_sync_interval": { "type": "integer" },
                  "sync_enabled": { "type": "boolean" },
                  "reconciliation": {
                    "type": "object",
                    "properties": {
                      "user": { "type": ["string", "null"] },
                      "org": { "type": ["string", "null"] }
                    }
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "uid": { "type": "string" },
                      "name": { "type": ["string", "null"] },
                      "mail": { "type": ["string", "null"] },
                      "key": { "type": ["string", "null"] }
                    }
                  }
                }
              },
              "cas": {
                "type": "object",
                "properties": { "url": { "type": ["string", "null"] } }
              },
              "saml": {
                "type": "object",
                "properties": {
                  "sso_url": { "type": ["string", "null"] },
                  "certificate": { "type": ["string", "null"] },
                  "certificate_path": { "type": ["string", "null"] },
                  "issuer": { "type": ["string", "null"] },
                  "idp_initiated_sso": { "type": "boolean" },
                  "disable_admin_demote": { "type": "boolean" }
                }
              },
              "github_oauth": {
                "type": "object",
                "properties": {
                  "client_id": { "type": "string" },
                  "client_secret": { "type": "string" },
                  "organization_name": { "type": "string" },
                  "organization_team": { "type": "string" }
                }
              },
              "smtp": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "address": { "type": "string" },
                  "authentication": { "type": "string" },
                  "port": { "type": "string" },
                  "domain": { "type": "string" },
                  "username": { "type": "string" },
                  "user_name": { "type": "string" },
                  "enable_starttls_auto": { "type": "boolean" },
                  "password": { "type": "string" },
                  "discard-to-noreply-address": { "type": "boolean" },
                  "support_address": { "type": "string" },
                  "support_address_type": { "type": "string" },
                  "noreply_address": { "type": "string" }
                }
              },
              "ntp": {
                "type": "object",
                "properties": {
                  "primary_server": { "type": "string" },
                  "secondary_server": { "type": "string" }
                }
              },
              "timezone": { "type": ["string", "null"] },
              "snmp": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "community": { "type": "string" }
                }
              },
              "syslog": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "server": { "type": ["string", "null"] },
                  "protocol_name": { "type": "string" }
                }
              },
              "assets": { "type": ["string", "null"] },
              "pages": {
                "type": "object",
                "properties": { "enabled": { "type": "boolean" } }
              },
              "collectd": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "server": { "type": ["string", "null"] },
                  "port": { "type": "integer" },
                  "encryption": { "type": ["string", "null"] },
                  "username": { "type": ["string", "null"] },
                  "password": { "type": ["string", "null"] }
                }
              },
              "mapping": {
                "type": "object",
                "properties": {
                  "enabled": { "type": "boolean" },
                  "tileserver": { "type": ["string", "null"] },
                  "basemap": { "type": "string" },
                  "token": { "type": ["string", "null"] }
                }
              },
              "load_balancer": { "type": ["string", "null"] }
            }
          },
          "run_list": { "type": "array", "items": { "type": "string" } }
        }
      },
      "ssh-key": {
        "type": "object",
        "properties": {
          "key": { "type": "string" },
          "pretty-print": { "type": "string" }
        }
      },
      "private-user": {
        "title": "Private User",
        "description": "Private User",
        "type": "object",
        "properties": {
          "login": { "type": "string", "examples": ["octocat"] },
          "id": { "type": "integer", "examples": [1] },
          "node_id": { "type": "string", "examples": ["MDQ6VXNlcjE="] },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/images/error/octocat_happy.gif"]
          },
          "gravatar_id": {
            "type": ["string", "null"],
            "examples": ["41d064eb2195891e12d0413f63227ea7"]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat"]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://github.com/octocat"]
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/followers"]
          },
          "following_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/following{/other_user}"
            ]
          },
          "gists_url": {
            "type": "string",
            "examples": ["https://api.github.com/users/octocat/gists{/gist_id}"]
          },
          "starred_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/starred{/owner}{/repo}"
            ]
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/subscriptions"]
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/orgs"]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/repos"]
          },
          "events_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/events{/privacy}"
            ]
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "examples": ["https://api.github.com/users/octocat/received_events"]
          },
          "type": { "type": "string", "examples": ["User"] },
          "site_admin": { "type": "boolean" },
          "name": {
            "type": ["string", "null"],
            "examples": ["monalisa octocat"]
          },
          "company": { "type": ["string", "null"], "examples": ["GitHub"] },
          "blog": {
            "type": ["string", "null"],
            "examples": ["https://github.com/blog"]
          },
          "location": {
            "type": ["string", "null"],
            "examples": ["San Francisco"]
          },
          "email": {
            "type": ["string", "null"],
            "format": "email",
            "examples": ["octocat@github.com"]
          },
          "hireable": { "type": ["boolean", "null"] },
          "bio": {
            "type": ["string", "null"],
            "examples": ["There once was..."]
          },
          "twitter_username": {
            "type": ["string", "null"],
            "examples": ["monalisa"]
          },
          "public_repos": { "type": "integer", "examples": [2] },
          "public_gists": { "type": "integer", "examples": [1] },
          "followers": { "type": "integer", "examples": [20] },
          "following": { "type": "integer", "examples": [0] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2008-01-14T04:33:35Z"]
          },
          "private_gists": { "type": "integer", "examples": [81] },
          "total_private_repos": { "type": "integer", "examples": [100] },
          "owned_private_repos": { "type": "integer", "examples": [100] },
          "disk_usage": { "type": "integer", "examples": [10000] },
          "collaborators": { "type": "integer", "examples": [8] },
          "two_factor_authentication": {
            "type": "boolean",
            "examples": [true]
          },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": { "type": "integer" },
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" }
            },
            "required": ["collaborators", "name", "space", "private_repos"]
          },
          "suspended_at": { "type": ["string", "null"], "format": "date-time" },
          "business_plus": { "type": "boolean" },
          "ldap_dn": { "type": "string" }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at",
          "collaborators",
          "disk_usage",
          "owned_private_repos",
          "private_gists",
          "total_private_repos",
          "two_factor_authentication"
        ]
      },
      "email": {
        "title": "Email",
        "description": "Email",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "examples": ["octocat@github.com"]
          },
          "primary": { "type": "boolean", "examples": [true] },
          "verified": { "type": "boolean", "examples": [true] },
          "visibility": { "type": ["string", "null"], "examples": ["public"] }
        },
        "required": ["email", "primary", "verified", "visibility"]
      },
      "gpg-key": {
        "title": "GPG Key",
        "description": "A unique encryption key",
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [3] },
          "primary_key_id": { "type": ["integer", "null"] },
          "key_id": { "type": "string", "examples": ["3262EFF25BA0D270"] },
          "public_key": { "type": "string", "examples": ["xsBNBFayYZ..."] },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "verified": { "type": "boolean" }
              }
            },
            "examples": [
              { "email": "octocat@users.noreply.github.com", "verified": true }
            ]
          },
          "subkeys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer" },
                "primary_key_id": { "type": "integer" },
                "key_id": { "type": "string" },
                "public_key": { "type": "string" },
                "emails": { "type": "array", "items": {} },
                "subkeys": { "type": "array", "items": {} },
                "can_sign": { "type": "boolean" },
                "can_encrypt_comms": { "type": "boolean" },
                "can_encrypt_storage": { "type": "boolean" },
                "can_certify": { "type": "boolean" },
                "created_at": { "type": "string" },
                "expires_at": { "type": ["string", "null"] },
                "raw_key": { "type": ["string", "null"] }
              }
            },
            "examples": [
              {
                "id": 4,
                "primary_key_id": 3,
                "key_id": "4A595D4C72EE49C7",
                "public_key": "zsBNBFayYZ...",
                "emails": [],
                "subkeys": [],
                "can_sign": false,
                "can_encrypt_comms": true,
                "can_encrypt_storage": true,
                "can_certify": false,
                "created_at": "2016-03-24T11:31:04-06:00",
                "expires_at": null
              }
            ]
          },
          "can_sign": { "type": "boolean", "examples": [true] },
          "can_encrypt_comms": { "type": "boolean" },
          "can_encrypt_storage": { "type": "boolean" },
          "can_certify": { "type": "boolean", "examples": [true] },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": ["2016-03-24T11:31:04-06:00"]
          },
          "expires_at": { "type": ["string", "null"], "format": "date-time" },
          "raw_key": { "type": ["string", "null"] }
        },
        "required": [
          "id",
          "primary_key_id",
          "key_id",
          "raw_key",
          "public_key",
          "created_at",
          "expires_at",
          "can_sign",
          "can_encrypt_comms",
          "can_encrypt_storage",
          "can_certify",
          "emails",
          "subkeys"
        ]
      },
      "key": {
        "title": "Key",
        "description": "Key",
        "type": "object",
        "properties": {
          "key": { "type": "string" },
          "id": { "type": "integer" },
          "url": { "type": "string" },
          "title": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "verified": { "type": "boolean" },
          "read_only": { "type": "boolean" }
        },
        "required": [
          "key",
          "id",
          "url",
          "title",
          "created_at",
          "verified",
          "read_only"
        ]
      },
      "starred-repository": {
        "title": "Starred Repository",
        "description": "Starred Repository",
        "type": "object",
        "properties": {
          "starred_at": { "type": "string", "format": "date-time" },
          "repo": { "$ref": "#/components/schemas/repository" }
        },
        "required": ["starred_at", "repo"]
      },
      "hovercard": {
        "title": "Hovercard",
        "description": "Hovercard",
        "type": "object",
        "properties": {
          "contexts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "octicon": { "type": "string" }
              },
              "required": ["message", "octicon"]
            }
          }
        },
        "required": ["contexts"]
      },
      "key-simple": {
        "title": "Key Simple",
        "description": "Key Simple",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "key": { "type": "string" }
        },
        "required": ["key", "id"]
      }
    }
  }
}
